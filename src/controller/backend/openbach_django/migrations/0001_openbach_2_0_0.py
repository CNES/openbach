# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2019-02-22 10:57
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import openbach_django.base_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=500, unique=True)),
                ('address', models.CharField(db_index=True, max_length=500, unique=True)),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('update_status', models.DateTimeField(blank=True, null=True)),
                ('reachable', models.BooleanField(default=False)),
                ('update_reachable', models.DateTimeField(blank=True, null=True)),
                ('available', models.BooleanField(default=False)),
                ('update_available', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgentCommandResult',
            fields=[
                ('address', models.CharField(max_length=500, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ArgumentChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ArgumentValue',
            fields=[
                ('argument_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(db_index=True, max_length=500, unique=True)),
                ('logs_port', models.IntegerField(default=10514)),
                ('logs_query_port', models.IntegerField(default=9200)),
                ('logs_database_name', models.CharField(default='openbach', max_length=500)),
                ('stats_port', models.IntegerField(default=2222)),
                ('stats_query_port', models.IntegerField(default=8086)),
                ('stats_database_name', models.CharField(default='openbach', max_length=500)),
                ('stats_database_precision', models.CharField(default='ms', max_length=10)),
                ('logstash_broadcast_mode', models.CharField(choices=[('udp', 'UDP'), ('tcp', 'TCP')], default='udp', max_length=3)),
                ('logstash_broadcast_port', models.IntegerField(default=2223)),
            ],
        ),
        migrations.CreateModel(
            name='CollectorCommandResult',
            fields=[
                ('address', models.CharField(max_length=500, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CommandResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField(default='{"state": "Running"}')),
                ('returncode', models.IntegerField(default=202)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_model', models.CharField(editable=False, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('agent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entity', to='openbach_django.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='HiddenNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='InstalledJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_version', models.CharField(max_length=500)),
                ('update_status', models.DateTimeField(blank=True, null=True)),
                ('severity', models.IntegerField(default=1)),
                ('local_severity', models.IntegerField(default=1)),
                ('default_stat_storage', models.BooleanField(default=True)),
                ('default_stat_broadcast', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installed_jobs', to='openbach_django.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='InstalledJobCommandResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=500)),
                ('job_name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface', models.CharField(default='', max_length=500)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openbach_django.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('name', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('path', models.FilePathField(allow_files=False, allow_folders=True, max_length=500, path='/opt/openbach/controller/src/jobs', recursive=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('job_version', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('persistent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='JobArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('int', 'INTEGER'), ('str', 'STRING'), ('float', 'FLOATING_POINT_NUMBER'), ('ip', 'IP_ADDRESS'), ('None', 'NONE_TYPE'), ('job', 'JOB_INSTANCE_ID'), ('scenario', 'SCENARIO_INSTANCE_ID')], default='None', max_length=10)),
                ('count_lower', models.PositiveIntegerField(default=1)),
                ('count_upper', models.PositiveIntegerField(blank=True, null=True)),
                ('password', models.BooleanField(default=False)),
                ('default', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=500)),
                ('agent_name', models.CharField(max_length=500)),
                ('entity_name', models.CharField(max_length=500)),
                ('status', models.CharField(max_length=500)),
                ('update_status', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('stop_date', models.DateTimeField(blank=True, null=True)),
                ('periodic', models.BooleanField()),
                ('is_stopped', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.Agent')),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Collector')),
            ],
        ),
        migrations.CreateModel(
            name='JobInstanceCommandResult',
            fields=[
                ('job_instance_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('name', models.CharField(max_length=500, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('address', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='OpenbachFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_model', models.CharField(editable=False, max_length=50, null=True)),
                ('function_id', models.IntegerField()),
                ('label', models.CharField(max_length=500)),
                ('section', models.CharField(blank=True, max_length=500, null=True)),
                ('wait_time', openbach_django.base_models.OpenbachFunctionArgument(type=float)),
            ],
        ),
        migrations.CreateModel(
            name='OpenbachFunctionInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('launch_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Operand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_model', models.CharField(editable=False, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OsCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(max_length=500)),
                ('distribution', models.CharField(max_length=500)),
                ('version', models.CharField(max_length=500)),
                ('command', models.CharField(max_length=1000)),
                ('command_stop', models.CharField(blank=True, max_length=1000, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='os', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='PotentialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Network')),
                ('old_network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Network')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('name', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('owners', models.ManyToManyField(related_name='private_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('favorited_by', models.ManyToManyField(related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to='openbach_django.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioConstant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('value', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('stop_date', models.DateTimeField(blank=True, null=True)),
                ('is_stopped', models.BooleanField(default=False)),
                ('openbach_function_instance', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='started_scenario', to='openbach_django.OpenbachFunctionInstance')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='openbach_django.Scenario')),
            ],
        ),
        migrations.CreateModel(
            name='StartJobInstanceArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('occurrence', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=500)),
                ('type', models.CharField(choices=[('int', 'INTEGER'), ('str', 'STRING'), ('float', 'FLOATING_POINT_NUMBER'), ('ip', 'IP_ADDRESS'), ('None', 'NONE_TYPE'), ('job', 'JOB_INSTANCE_ID'), ('scenario', 'SCENARIO_INSTANCE_ID')], max_length=10, null=True)),
                ('hierarchy', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
            ],
            options={
                'ordering': ['occurrence', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('frequency', models.TextField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='StatisticInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage', models.BooleanField(default=True)),
                ('broadcast', models.BooleanField(default=False)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='openbach_django.InstalledJob')),
                ('stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.Statistic')),
            ],
        ),
        migrations.CreateModel(
            name='SubcommandGroupArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('optional', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SubcommandJobArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcommands', to='openbach_django.SubcommandGroupArgument')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcommands', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='UsedSubcommandArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_subcommands', to='openbach_django.JobInstance')),
                ('subcommand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.SubcommandJobArgument')),
            ],
        ),
        migrations.CreateModel(
            name='WaitForFinished',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WaitForLaunched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AssignCollector',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('collector', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ConditionAnd',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionEqual',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionGreater',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionGreaterOrEqual',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionLower',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionLowerOrEqual',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionNot',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionOr',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionUnequal',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionXor',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
                ('left_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition')),
                ('right_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='FileCommandResult',
            fields=[
                ('commandresult_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.CommandResult')),
                ('filename', models.CharField(max_length=500)),
                ('remote_path', models.CharField(max_length=500)),
                ('address', models.CharField(max_length=500)),
            ],
            bases=('openbach_django.commandresult',),
        ),
        migrations.CreateModel(
            name='If',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('functions_true', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('functions_false', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('condition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='if_function', to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='InstallAgent',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('collector', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('username', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('password', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ListJobInstances',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('addresses', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='OperandDatabase',
            fields=[
                ('operand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Operand')),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('key', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('attribute', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.operand',),
        ),
        migrations.CreateModel(
            name='OperandStatistic',
            fields=[
                ('operand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Operand')),
                ('field', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('agent_address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.operand',),
        ),
        migrations.CreateModel(
            name='OperandValue',
            fields=[
                ('operand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Operand')),
                ('value', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.operand',),
        ),
        migrations.CreateModel(
            name='OptionalJobArgument',
            fields=[
                ('jobargument_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.JobArgument')),
                ('flag', models.CharField(max_length=500)),
                ('repeatable', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.jobargument',),
        ),
        migrations.CreateModel(
            name='OptionalJobArgumentValue',
            fields=[
                ('argumentvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.ArgumentValue')),
                ('occurrence', models.PositiveIntegerField(default=0)),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='openbach_django.OptionalJobArgument')),
            ],
            options={
                'ordering': ['occurrence', 'argument_value_id'],
            },
            bases=('openbach_django.argumentvalue',),
        ),
        migrations.CreateModel(
            name='PushFile',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('local_path', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('remote_path', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='RequiredJobArgument',
            fields=[
                ('jobargument_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.JobArgument')),
                ('rank', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.jobargument',),
        ),
        migrations.CreateModel(
            name='RequiredJobArgumentValue',
            fields=[
                ('argumentvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.ArgumentValue')),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='openbach_django.RequiredJobArgument')),
            ],
            options={
                'ordering': ['argument__rank', 'argument_value_id'],
            },
            bases=('openbach_django.argumentvalue',),
        ),
        migrations.CreateModel(
            name='RestartJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('instance_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('instance_args', openbach_django.base_models.OpenbachFunctionArgument(type=dict)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('interval', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ScenarioArgumentValue',
            fields=[
                ('argumentvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.ArgumentValue')),
            ],
            bases=('openbach_django.argumentvalue',),
        ),
        migrations.CreateModel(
            name='SetLogSeverityJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('severity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('local_severity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='SetStatisticsPolicyJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('stat_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('storage', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
                ('broadcast', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StartJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('entity_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('offset', openbach_django.base_models.OpenbachFunctionArgument(null=True, type=float)),
                ('interval', openbach_django.base_models.OpenbachFunctionArgument(null=True, type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StartScenarioInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('scenario_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('arguments', openbach_django.base_models.OpenbachFunctionArgument(type=dict)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StatusJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('instance_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StopJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('openbach_function_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StopJobInstances',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('openbach_function_ids', openbach_django.base_models.OpenbachFunctionArgument(type=[int])),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StopScenarioInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('openbach_function_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='UninstallAgent',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='While',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('functions_while', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('functions_end', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('condition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='while_function', to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.AddField(
            model_name='waitforlaunched',
            name='openbach_function_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='launched_waiters', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='waitforlaunched',
            name='openbach_function_waited',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='waitforfinished',
            name='openbach_function_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finished_waiters', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='waitforfinished',
            name='openbach_function_waited',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='subcommandgroupargument',
            name='subcommand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='openbach_django.SubcommandJobArgument'),
        ),
        migrations.AddField(
            model_name='scenarioinstance',
            name='scenario_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.ScenarioVersion'),
        ),
        migrations.AddField(
            model_name='scenarioinstance',
            name='started_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private_scenario_instances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scenarioconstant',
            name='scenario_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constants', to='openbach_django.ScenarioVersion'),
        ),
        migrations.AddField(
            model_name='scenarioargument',
            name='scenario_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments', to='openbach_django.ScenarioVersion'),
        ),
        migrations.AddField(
            model_name='potentialnetwork',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='potential_networks', to='openbach_django.Project'),
        ),
        migrations.AddField(
            model_name='openbachfunctioninstance',
            name='openbach_function',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='openbachfunctioninstance',
            name='scenario_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='openbach_functions_instances', to='openbach_django.ScenarioInstance'),
        ),
        migrations.AddField(
            model_name='openbachfunction',
            name='scenario_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='openbach_functions', to='openbach_django.ScenarioVersion'),
        ),
        migrations.AddField(
            model_name='network',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='openbach_django.Project'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_restart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_start',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_stop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstance',
            name='openbach_function_instance',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='started_job', to='openbach_django.OpenbachFunctionInstance'),
        ),
        migrations.AddField(
            model_name='jobinstance',
            name='started_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='private_job_instances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='jobargument',
            name='subcommand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments', to='openbach_django.SubcommandJobArgument'),
        ),
        migrations.AddField(
            model_name='job',
            name='keywords',
            field=models.ManyToManyField(related_name='jobs', to='openbach_django.Keyword'),
        ),
        migrations.AddField(
            model_name='interface',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openbach_django.Network'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_install',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_log_severity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_stat_policy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_uninstall',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjob',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installations', to='openbach_django.Job'),
        ),
        migrations.AddField(
            model_name='hiddennetwork',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hidden_networks', to='openbach_django.Project'),
        ),
        migrations.AddField(
            model_name='entity',
            name='networks',
            field=models.ManyToManyField(related_name='entities', through='openbach_django.Interface', to='openbach_django.Network'),
        ),
        migrations.AddField(
            model_name='entity',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='openbach_django.Project'),
        ),
        migrations.AddField(
            model_name='collectorcommandresult',
            name='status_add',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='collectorcommandresult',
            name='status_del',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='collectorcommandresult',
            name='status_modify',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='argumentchoice',
            name='argument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='openbach_django.JobArgument'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_assign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_install',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_log_severity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_uninstall',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agent',
            name='collector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='openbach_django.Collector'),
        ),
        migrations.AddField(
            model_name='agent',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reserved_agents', to='openbach_django.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='subcommandjobargument',
            unique_together=set([('name', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='subcommandgroupargument',
            unique_together=set([('name', 'subcommand')]),
        ),
        migrations.AlterUniqueTogether(
            name='statisticinstance',
            unique_together=set([('stat', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='statistic',
            unique_together=set([('name', 'job')]),
        ),
        migrations.AddField(
            model_name='startjobinstanceargument',
            name='start_job_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments', to='openbach_django.StartJobInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioconstant',
            unique_together=set([('name', 'scenario_version')]),
        ),
        migrations.AddField(
            model_name='scenarioargumentvalue',
            name='argument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='openbach_django.ScenarioArgument'),
        ),
        migrations.AddField(
            model_name='scenarioargumentvalue',
            name='scenario_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments_values', to='openbach_django.ScenarioInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioargument',
            unique_together=set([('name', 'scenario_version')]),
        ),
        migrations.AlterUniqueTogether(
            name='scenario',
            unique_together=set([('name', 'project')]),
        ),
        migrations.AddField(
            model_name='requiredjobargumentvalue',
            name='job_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_arguments_values', to='openbach_django.JobInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='potentialnetwork',
            unique_together=set([('old_network', 'new_network', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='oscommand',
            unique_together=set([('family', 'distribution', 'version', 'job')]),
        ),
        migrations.AddField(
            model_name='optionaljobargumentvalue',
            name='job_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optional_arguments_values', to='openbach_django.JobInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='openbachfunction',
            unique_together=set([('scenario_version', 'function_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='network',
            unique_together=set([('address', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='jobargument',
            unique_together=set([('name', 'subcommand')]),
        ),
        migrations.AlterUniqueTogether(
            name='installedjobcommandresult',
            unique_together=set([('address', 'job_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='installedjob',
            unique_together=set([('agent', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='hiddennetwork',
            unique_together=set([('name', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='filecommandresult',
            unique_together=set([('filename', 'address', 'remote_path')]),
        ),
        migrations.AlterUniqueTogether(
            name='entity',
            unique_together=set([('name', 'project')]),
        ),
        migrations.AddField(
            model_name='conditionunequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionunequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionor',
            name='left_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionor',
            name='right_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionnot',
            name='condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionlowerorequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionlowerorequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionlower',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionlower',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreaterorequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreaterorequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreater',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreater',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionand',
            name='left_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionand',
            name='right_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioargumentvalue',
            unique_together=set([('argument', 'scenario_instance')]),
        ),
    ]
