#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright © 2016-2020 CNES
#   Copyright © 2022 Eutelsat
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.


---

general:
  name: pcap_postprocessing
  description: >
      This job analyzes a pcap file in order to get the average packet length,
      average inter packets delay, bitrate, etc. If a filter is specified,
      only filtered packets will be considered.
  job_version: '2.0'
  keywords:
    - pcap
    - network
    - metrology
  persistent: no
  need_privileges: yes

platform_configuration:
  - ansible_system: 'Debian'
    ansible_distribution:  'Ubuntu'
    ansible_distribution_version: '20.04'
    command: '/usr/bin/env python3 /opt/openbach/agent/jobs/pcap_postprocessing/pcap_postprocessing.py'
    command_stop:
  - ansible_system: 'Debian'
    ansible_distribution:  'Ubuntu'
    ansible_distribution_version: '22.04'
    command: '/usr/bin/env python3 /opt/openbach/agent/jobs/pcap_postprocessing/pcap_postprocessing.py'
    command_stop:

arguments:
  required:
    - name:        capture_file
      type:        str
      count:       1
      description: The path of the pcap file to analyze
  optional:
    - name:        src_ip
      type:        str
      count:       1
      flag:        '-sa'
      description: The source IP Address
    - name:        dst_ip
      type:        str
      count:       1
      flag:        '-da'
      description: The destination IP Address
    - name:        src_port
      type:        int
      count:       1
      flag:        '-sp'
      description: The source port number
    - name:        dst_port
      type:        int
      count:       1
      flag:        '-dp'
      description: The destination port number
    - name:        proto
      type:        str
      count:       1
      flag:        '-p'
      description: The transport protocol
      choices: 
        - udp
        - tcp
  subcommand:
    - group_name: mode
      optional: no
      choices:
        - name: stats_one_file
          required:
          optional:
            - name: metrics_interval
              type: int
              count: 1
              flag: '-T'
              description: The time period in ms to compute statistics (default 500)
        - name: stats_two_files
          required:
            - name: second_capture_file
              type: str
              count: 1
              description: The path of the second pcap file to analyze (must be traffic receiver)
          optional:
            - name: metrics_interval
              type: int
              count: 1
              flag: '-T'
              description: The time period in ms to compute statistics (default 500)
        - name: gilbert_elliot
          required:
            - name: second_capture_file
              type: str
              count: 1
              description: The path of the second pcap file to analyze
          optional:

statistics:
    - name: avg_packet_length
      description: The average packet size in bytes, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: avg_inter_packets_delay
      description: The average delay between packets in ms, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: bit_rate
      description: The number of bytes per second in Kbps, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: packet_rate
      description: The number of packets per second in pps, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: packets_count
      description: Total number of packets, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: flow_duration
      description: The duration of each flow in ms
      frequency: 'once capture completed'
    - name: bytes_count
      description: The total number of bytes, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: flows_count
      description: The total number of flow
      frequency: 'every *metrics_interval* ms'
    - name: avg_flow_duration
      description: The average flow duration, for each flow
      frequency: 'every *metrics_interval* ms'
    - name: total_bytes
      description: The total number of bytes
      frequency: 'every *metrics_interval* ms'
    - name: total_packets
      description: The total number of packets
      frequency: 'every *metrics_interval* ms'
    - name: gilbert_elliot_p
      description: p parameter of Gilbert Elliot model
      frequency: 'once'
    - name: gilbert_elliot_r
      description: r parameter of Gilbert Elliot model
      frequency: 'once'
    - name: gilbert_elliot_sent
      description: Number of packets sent, only filtered packets are considered
      frequency: 'once'
    - name: gilbert_elliot_received
      description: Number of packets received, only filtered packets are considered
      frequency: 'once'
    - name: gilbert_elliot_lost_rate
      description: Loss rate between packets sent and received, only filtered packets are considered
      frequency: 'once'
    - name: two_files_delay
      description: Propagation delay between the two captures in ms
      frequency: 'every *metrics_interval* ms'
    - name: two_files_jitter
      description: Jitter between the two captures in ms
      frequency: 'every *metrics_interval* ms'
    - name: two_files_loss_rate_bytes
      description: Loss rate between the two captures in bytes
      frequency: 'every *metrics_interval* ms'
    - name: two_files_loss_rate_pkts
      description: Loss rate between the two captures in packets
      frequency: 'every *metrics_interval* ms'
    - name: two_files_throughput_sent
      description: Throughput of packets sent measured in bytes/s when two pcaps
      frequency: 'every *metrics_interval* ms'
    - name: two_files_throughput_received
      description: Throughput of packets received measured in bytes/s when two pcaps
      frequency: 'every *metrics_interval* ms'
