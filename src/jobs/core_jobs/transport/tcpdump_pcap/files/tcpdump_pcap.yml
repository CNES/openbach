#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016-2020 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.

---

general:
  name: tcpdump_pcap
  description: >
      This job launches tcpdump tool in order to capture IP packets.
      If a packets filter is specified, only filtered packets will be captured.
      The captured traffic is saved to an output file.
  job_version: '1.2'
  keywords:
    - tcpdump
    - capture
    - network
  persistent: yes
  need_privileges: yes

platform_configuration:
  - ansible_system: 'Debian'
    ansible_distribution:  'Ubuntu'
    ansible_distribution_version: '20.04'
    command: '/usr/bin/env python3 /opt/openbach/agent/jobs/tcpdump_pcap/tcpdump_pcap.py'
    command_stop:
  - ansible_system: 'Debian'
    ansible_distribution:  'Ubuntu'
    ansible_distribution_version: '22.04'
    command: '/usr/bin/env python3 /opt/openbach/agent/jobs/tcpdump_pcap/tcpdump_pcap.py'
    command_stop:

arguments:
  required:
  optional:
    - name:        capture_file
      type:        str
      count:       1
      flag:        '-f'
      description: The path to the file to save captured file. Leave blank to let the collector determine location, and save it as a statistic
    - name:        interface
      type:        str
      count:       1
      flag:        '-i'
      description: The network interface to sniff (default all)
    - name:        src_ip
      type:        str
      count:       1
      flag:        '-A'
      description: The source IP Address
    - name:        dst_ip
      type:        str
      count:       1
      flag:        '-a'
      description: The destination IP Address
    - name:        src_port
      type:        int
      count:       1
      flag:        '-D'
      description: The source port number
    - name:        dst_port
      type:        int
      count:       1
      flag:        '-d'
      description: The destination port number
    - name:        proto
      type:        str
      count:       1
      flag:        '-p'
      description: The transport protocol
      choices: 
                   - udp
                   - tcp
    - name:          duration
      type:          int
      count:         1
      flag:          '-t'
      description:   Duration of the capture, in seconds (default infinite)

statistics:
    - name: "pcap_file"
      description: The pcap file captured. It is either located in capture_file path, or in a random path generated by the collector is capture_file is empty
      frequency: 'once'
    - name: "test"
      description: Test
      frequency: 'once'

