#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016-2020 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.

---

general:
  name: iperf3
  description: >
      This Job launches the iperf3.7 tool (client or server mode) to
      generate UDP/TCP traffic with configured parameters (duration,
      bandwidth, parallel flows, ToS, MSS, etc.). It measures
      throughput, sent/lost packets, jitter, etc. 
  job_version: '2.7'
  keywords:
    - iperf
    - iperf3
    - throughput
    - loss
    - jitter
    - udp
    - tcp
  persistent: yes
  need_privileges: yes

platform_configuration:
  - ansible_system: 'Debian'
    ansible_distribution: 'Ubuntu'
    ansible_distribution_version: '20.04'
    command: '/usr/bin/env python3 /opt/openbach/agent/jobs/iperf3/iperf3.py'
    command_stop:

arguments:
  required:
  optional:
    - name: metrics_interval
      type: float
      count: 1
      flag: '-i'
      description: Pause metrics_interval seconds between periodic bandwidth reports (default 1 sec). If specified, it must be given to server and client)
    - name: port
      type: int
      count: 1
      flag: '-p'
      description: Set server port to listen on/connect to (default 5201).
    - name: num_flows
      type: int
      count: 1
      flag: '-n'
      description: The number of parallel flows (default 1 flows). To work, it must be set on client and server.
  subcommand:
    - group_name: mode
      optional: no
      choices:
        - name: server
          required:
          optional:
            - name: exit
              type: None
              count: 0
              flag: '-1'
              description: Exit upon completion of one connection.
            - name: bind
              type: ip
              count: 1
              flag: '-B'
              description: The address to bind the server
        - name: client
          required:
            - name: server_ip
              type: ip
              count: 1
              flag: '-c'
              description: The IP address of server.
          optional:
            - name: duration_time
              type: float
              count: 1
              flag: '-t'
              description: The duration of the transmission (default 10 sec).
            - name: transmitted_size
              type: str
              count: 1
              flag: '-s'
              description: >
                  The number of bytes to transmit (if set the time_duration
                  parameter has more priority). You can use [K/M/G]: set
                  100M to send 100 MBytes. Needs to be equal or higher than 1 MByte.
            - name: window_size
              type: str
              count: 1
              flag: '-w'
              description: Socket buffer sizes in B[M/K]. For TCP, this sets the TCP window size.
            - name: tos
              type: str
              count: 1
              flag: '-S'
              description: >
                   Set the IP type of service (The usual prefixes for octal and hex
                   can be used, i.e. 52, 064 and 0x34 specify the same value.)
          subcommand:       
            - group_name: protocol
              optional: yes
              choices:
                - name: udp
                  required:
                  optional:
                    - name: bandwidth
                      type: str
                      count: 1
                      flag: '-b'
                      description: Set target bandwidth to n [M/K]bits/sec (default 1 Mbit/sec).
                - name: tcp
                  required:
                  optional:
                    - name: cong_control
                      type: str
                      count: 1
                      flag: '-C'
                      description: The congestion control algorithm to use (e.g. cubic, reno).
                    - name: mss
                      type: int
                      count: 1
                      flag: '-M'
                      description: The TCP/SCTP maximum segment size (MTU - 39 bytes)
                              
statistics:
    - name: "sent_data_*flow_number*"
      description: The cumulative amount of data sent from the job launch, in Bytes (client and server sides)
      frequency: 'every *metrics_interval* seconds'
    - name: "throughput_*flow_number*"
      description: The throughput in this period, in bits/sec (client and server sides)
      frequency: 'every *metrics_interval* seconds'
    - name: "jitter_*flow_number*"
      description: The jitter between packets in this period, in seconds (server side)
      frequency: 'every *metrics_interval* seconds'
    - name: "sent_pkts_*flow_number*"
      description: The number of sent packets (server side)
      frequency: 'every *metrics_interval* seconds'
    - name: "lost_pkts_*flow_number*"
      description: The number of lost packets (server side)
      frequency: 'every *metrics_interval* seconds'
    - name: "plr_*flow_number*"
      description: The packet loss rate for this period, in % (server side)
      frequency: 'every *metrics_interval* seconds'
    - name: "download_time_*flow_number*"
      description: The total download time, in seconds (client and server sides)
      frequency: 'once'
    - name: "cwnd_*flow_number*"
      description: The value of the congestion window, in Bytes, when TCP is chosen (client side)
      frequency: 'every *metrics_interval* seconds'
    - name: "retransmissions_*flow_number*"
      description: The number of TCP retransmissions, when TCP is chosen (client side)
      frequency: 'every *metrics_interval* seconds'
