#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016-2020 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.

---

- name: Authentify into the Backend Database
  uri:
    url: http://localhost:{{ django_port }}/login/
    method: POST
    body_format: json
    body:
      login: "{{ openbach_backend_admin_name | mandatory }}"
      password: "{{ openbach_backend_admin_password | mandatory }}"
  register: openbach_backend_login

- name: Create Openbach project and associate agent
  block:
  - name: Create Openbach project
    uri:
      url: http://localhost:{{ django_port }}/project/
      method: POST
      body_format: json
      body: 
        name: "{{ project_name }}"
        description: "Openbach project"
        owners: ["{{ openbach_backend_login.json.username }}"]
      headers:
        Cookie: "sessionid={{ openbach_backend_login.cookies.sessionid }}"
    ignore_errors: true

  - name: Add entities to project
    uri:
      url: http://localhost:{{ django_port }}/project/{{ project_name }}/entity
      method: POST
      body_format: json
      body:
        name: "agent_{{ item }}"
        description: ""
        agent: "{'address': '{{ item }}'}"
      headers:
        Cookie: "sessionid={{ openbach_backend_login.cookies.sessionid }}"
    with_items: "{{ hostvars[inventory_hostname][\"groups\"][\"all\"] }}"
    ignore_errors: true

