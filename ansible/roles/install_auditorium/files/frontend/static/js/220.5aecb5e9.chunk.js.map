{"version":3,"file":"static/js/220.5aecb5e9.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","components/Entities/EntityCardTemplate.tsx","components/Entities/EntityAdd.tsx","components/Entities/EntityAgent.tsx","components/Entities/JobActionSelector.tsx","components/Entities/EntityCard.tsx","components/Entities/NetworkCard.tsx","components/Entities/EntityManager.tsx","components/common/JobStateIcon.tsx","components/Entities/JobsStatusesQuery.tsx","components/Entities/JobsStatusesInfos.tsx","components/Projects/ProjectMiscellaneousSelect.tsx","components/Projects/ProjectDetails.tsx","components/Scenarios/CreateScenarioCard.tsx","components/Scenarios/ImportScenarioCard.tsx","../node_modules/@mui/material/colors/lightGreen.js","components/common/LaunchScenarioIcon.tsx","components/Scenarios/ScenariosListItem.tsx","components/Scenarios/ScenariosList.tsx","components/Projects/Project.tsx","components/common/Topology.tsx","../node_modules/@mui/icons-material/Clear.js","../node_modules/@mui/icons-material/HighlightOff.js","../node_modules/@mui/icons-material/PlayCircleFilled.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React from 'react';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\n\nimport {useSelector} from '../../redux';\n\n\nconst EntityCardTemplate: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    const {title, subtitle, media, actions, children} = props;\n    const isUser = useSelector((state) => state.login.is_user);\n\n    return (\n        <Card sx={{position: \"relative\"}}>\n            <CardHeader title={title} subheader={subtitle} sx={{height: \"64px\", backgroundColor: \"rgba(0, 0, 0, 0.4)\"}} />\n            <CardMedia\n                component=\"img\"\n                alt=\"header logo\"\n                image={media}\n                height=\"96\"\n                sx={{objectFit: \"contain\", position: \"absolute\", width: \"96px\", top: 0, right: 8}}\n            />\n            <CardContent>\n                {children}\n            </CardContent>\n            {isUser && actions != null && <CardActions\n                disableSpacing\n                sx={{display: \"flex\", flexDirection: \"column\", gap: 1}}\n            >\n                {actions}\n            </CardActions>}\n        </Card>\n    );\n};\n\n\ninterface Props {\n    title: string;\n    subtitle?: string;\n    media: string;\n    actions?: React.PropsWithChildren<{}>[\"children\"];\n}\n\n\nexport default EntityCardTemplate;\n","import React from 'react';\n\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nimport EntityCardTemplate from './EntityCardTemplate';\n\nimport {addEntity} from '../../api/entities';\nimport {useDispatch, useSelector} from '../../redux';\nimport type {IAgent} from '../../utils/interfaces';\nimport type {SelectChangeEvent} from '@mui/material/Select';\n\n\nconst image = process.env.PUBLIC_URL + '/assets/project.svg';\n\n\nconst EntityAdd: React.FC<Props> = (props) => {\n    const {project} = props;\n    const isUser = useSelector((state) => state.login.is_user);\n    const agents = useSelector((state) => state.openbach.agents);\n    const dispatch = useDispatch();\n    const [newEntityName, storeNewEntityName] = React.useState<string>(\"\");\n    const [newEntityDescription, storeNewEntityDescription] = React.useState<string>(\"\");\n    const [newEntityAgent, storeNewEntityAgent] = React.useState<string>(\"\");\n\n    const handleNameChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        storeNewEntityName(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        storeNewEntityDescription(event.target.value);\n    }, []);\n\n    const handleAgentChange = React.useCallback((event: SelectChangeEvent) => {\n        const {value} = event.target;\n        storeNewEntityAgent(value ? value : \"\");\n    }, []);\n\n    const handleEntityAdd = React.useCallback(() => {\n        if (!newEntityName) {\n            return;\n        }\n\n        dispatch(addEntity({\n            project,\n            name: newEntityName,\n            description: newEntityDescription || undefined,\n            agent: agents?.find((a: IAgent) => a.address === newEntityAgent),\n        }));\n        storeNewEntityName(\"\");\n        storeNewEntityDescription(\"\");\n        storeNewEntityAgent(\"\");\n    }, [project, agents, newEntityName, newEntityDescription, newEntityAgent, dispatch]);\n\n    const reserved = React.useMemo(() => (agents || []).filter(\n        (agent: IAgent) => !agent.project && agent.reserved === project\n    ).map((agent: IAgent) => (\n        <MenuItem key={agent.address} value={agent.address}>{agent.name}</MenuItem>\n    )), [agents, project]);\n\n    const available = React.useMemo(() => (agents || []).filter(\n        (agent: IAgent) => !agent.project && !agent.reserved\n    ).map((agent: IAgent) => (\n        <MenuItem key={agent.address} value={agent.address}>{agent.name}</MenuItem>\n    )), [agents]);\n\n    if (!isUser) {\n        return (\n            <EntityCardTemplate\n                title=\"Entity\"\n                subtitle=\"Click on an entity to select it\"\n                media={image}\n            >\n                No entity selected\n            </EntityCardTemplate>\n        );\n    }\n\n    return (\n        <EntityCardTemplate\n            title=\"Add Entity\"\n            subtitle=\"Create a new Entity for an Agent\"\n            media={image}\n            actions={\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={!newEntityName}\n                    onClick={handleEntityAdd}\n                >\n                    Add Entity\n                </Button>\n            }\n        >\n            <TextField\n                required\n                margin=\"dense\"\n                variant=\"standard\"\n                label=\"Entity Name\"\n                value={newEntityName}\n                onChange={handleNameChange}\n                fullWidth\n            />\n            <TextField\n                margin=\"dense\"\n                variant=\"standard\"\n                label=\"Entity Description\"\n                value={newEntityDescription}\n                onChange={handleDescriptionChange}\n                fullWidth\n                multiline\n                rows={3}\n            />\n            <FormControl fullWidth sx={{mt: 3}}>\n                <InputLabel id=\"entity-add-label\">Associated Agent</InputLabel>\n                <Select\n                    required\n                    labelId=\"entity-add-label\"\n                    id=\"entity-add-select\"\n                    label=\"Associated Agent\"\n                    value={newEntityAgent}\n                    onChange={handleAgentChange}\n                >\n                    <MenuItem value=\"\" />\n                    <MenuItem>--- Agents reserved for this project ---</MenuItem>\n                    {reserved}\n                    <MenuItem>--- Free Agents ---</MenuItem>\n                    {available}\n                </Select>\n            </FormControl>\n        </EntityCardTemplate>\n    );\n};\n\n\ninterface Props {\n    project: string;\n}\n\n\nexport default EntityAdd;\n","import React from 'react';\n\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport {useSelector} from '../../redux';\nimport type {IAgent} from '../../utils/interfaces';\nimport type {SelectChangeEvent} from '@mui/material/Select';\n\n\nconst EntityAgent: React.FC<Props> = (props) => {\n    const {project, jobs, agent, onAgentChange} = props;\n    const agents = useSelector((state) => state.openbach.agents);\n\n    const handleAgentChange = React.useCallback((event: SelectChangeEvent) => {\n        const address = event.target.value;\n        onAgentChange(address ? agents?.find((a: IAgent) => a.address === address) : undefined);\n    }, [agents, onAgentChange]);\n\n    const reserved = React.useMemo(() => (agents || []).filter(\n        (a: IAgent) => a.reserved === project && (!a.project || a.address === agent?.address)\n    ).map((agent: IAgent) => (\n        <MenuItem key={agent.address} value={agent.address}>{agent.name}</MenuItem>\n    )), [agents, project, agent]);\n\n    const available = React.useMemo(() => (agents || []).filter(\n        (a: IAgent) => !a.reserved && (!a.project || a.address === agent?.address)\n    ).map((agent: IAgent) => (\n        <MenuItem key={agent.address} value={agent.address}>{agent.name}</MenuItem>\n    )), [agents, agent]);\n\n    const selector = (\n        <FormControl fullWidth>\n            <InputLabel id=\"entity-change-label\">Associated Agent</InputLabel>\n            <Select\n                labelId=\"entity-change-label\"\n                id=\"entity-change-select\"\n                label=\"Associated Agent\"\n                value={agent?.address || \"\"}\n                onChange={handleAgentChange}\n            >\n                <MenuItem value=\"\" />\n                <MenuItem>--- Agents reserved for this project ---</MenuItem>\n                {reserved}\n                <MenuItem>--- Free Agents ---</MenuItem>\n                {available}\n            </Select>\n        </FormControl>\n    );\n\n    if (!agent) {\n        return selector;\n    }\n\n    const globalAgent = agents?.find((a: IAgent) => a.address === agent.address);\n\n    const services = globalAgent?.services;\n    const ntp = !services?.hasOwnProperty('ntp.service') ? \"\" : services['ntp.service'].split(/\\r?\\n/).find(\n        (s: string) => s.startsWith('*')\n    );\n    const status = ntp === \"\" ? \"NTP status not fetched\" : !ntp ? \"NTP not synchronized\" : (\n        \"NTP offset: \" + ntp.split(/\\s+/)[8] + \" ms\"\n    );\n    \n    const errors = globalAgent?.errors;\n\n    return (\n        <ul>\n            <li>{selector}</li>\n            <li>IP used for installation: <b>{agent.address}</b></li>\n            <li>Collector: <b>{agent.collector_ip}</b></li>\n            <li>Installed jobs: {jobs.length ? (\n                <ul>\n                    {jobs.map((j: string) => <li key={j}>{j}</li>)}\n                </ul>\n            ) : \"No jobs installed\"}</li>\n            <li>{status}</li>\n            {errors && errors.length > 0 && <li>\n                <ul>\n                    {errors.map((e, index: number) => <li key={index}>{e.msg}</li>)}\n                </ul>\n            </li>}\n        </ul>\n    );\n};\n\n\ninterface Props {\n    jobs: string[];\n    project: string;\n    agent?: IAgent;\n    onAgentChange: (agent?: IAgent) => void;\n}\n\n\nexport default EntityAgent;\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport {installOnAgents, uninstallOnAgents} from '../../api/jobs';\nimport {useDispatch} from '../../redux';\nimport {addJobAction} from '../../redux/project';\nimport type {SelectChangeEvent} from '@mui/material/Select';\n\n\nconst JobActionSelector: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    const {options, action, agent} = props;\n    const dispatch = useDispatch();\n    const [selected, storeSelected] = React.useState<string[]>([]);\n\n    const handleChange = React.useCallback((event: SelectChangeEvent<typeof selected>) => {\n        const {value} = event.target;\n        storeSelected(typeof value === 'string' ? [] : value);\n    }, []);\n\n    const handleAction = React.useCallback(() => {\n        if (selected.length) {\n            switch (action) {\n                case \"install\":\n                    dispatch(installOnAgents({jobNames: selected, agents: [agent]}));\n                    break;\n                case \"uninstall\":\n                    dispatch(uninstallOnAgents({jobNames: selected, agents: [agent]}));\n                    break;\n                default:\n                    storeSelected([]);\n                    return;\n            }\n            selected.forEach((job: string) => {dispatch(addJobAction({job, agent, action}));});\n            setTimeout(() => {\n                window.scrollTo({top: document.body.scrollHeight, left: 0, behavior: \"smooth\"});\n            }, 50);\n        }\n        storeSelected([]);\n    }, [selected, action, agent, dispatch]);\n\n    React.useEffect(() => {\n        storeSelected([]);\n    }, [options]);\n    \n    return (\n        <Box display=\"flex\" alignItems=\"center\" width=\"100%\" gap={1}>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={handleAction}\n            >\n                {action} jobs\n            </Button>\n            <FormControl sx={{flexGrow: 1}}>\n                <Select\n                    multiple\n                    fullWidth\n                    value={selected}\n                    onChange={handleChange}\n                    renderValue={(values) => (\n                        <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n                            {values.map((value) => (\n                                <Chip key={value} label={value} />\n                            ))}\n                        </Box>\n                    )}\n                >\n                    {options.map((value) => (\n                        <MenuItem key={value} value={value}>{value}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </Box>\n    );\n};\n\n\ninterface Props {\n    agent: string;\n    action: \"install\" | \"uninstall\";\n    options: string[];\n}\n\n\nexport default JobActionSelector;\n","import React from 'react';\n\nimport Button from '@mui/material/Button';\n\nimport EntityAgent from './EntityAgent';\nimport EntityCardTemplate from './EntityCardTemplate';\nimport JobActionSelector from './JobActionSelector';\n\nimport {getJobs} from '../../api/agents';\nimport {removeEntity, updateEntityAgent} from '../../api/entities';\nimport {useDispatch, useSelector} from '../../redux';\nimport type {IAgent, IJob, IEntity, INetwork} from '../../utils/interfaces';\n\n\nconst image = process.env.PUBLIC_URL + '/assets/server.svg';\n\n\nconst EntityCard: React.FC<Props> = (props) => {\n    const {project, entity: {name, description, agent, networks}, onRemove} = props;\n    const jobs = useSelector((state) => state.openbach.jobs);\n    const dispatch = useDispatch();\n    const [installedJobs, storeInstalledJobs] = React.useState<string[]>([]);\n\n    const handleRemoveEntity = React.useCallback(() => {\n        dispatch(removeEntity({project, name}));\n        onRemove();\n    }, [project, name, dispatch, onRemove]);\n\n    const handleAgentChange = React.useCallback((agent?: IAgent) => {\n        dispatch(updateEntityAgent({project, name, description, agent, networks}));\n    }, [project, name, description, networks, dispatch]);\n\n    const linkedNetworks = React.useMemo(() => {\n        return (networks || []).map((network: INetwork) => (\n            <li key={network.interface}>{network.interface}: {network.ip} (network {network.name})</li>\n        ));\n    }, [networks]);\n\n    React.useEffect(() => {\n        if (agent) {\n            const {address} = agent;\n            const promise = dispatch(getJobs({address}))\n            promise.unwrap().then((payload) => {storeInstalledJobs(payload);});\n            return () => {promise.abort();};\n        }\n    }, [agent, dispatch]);\n\n    const action = (\n        <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleRemoveEntity}\n        >\n            Remove Entity\n        </Button>\n    );\n\n    return (\n        <EntityCardTemplate\n            title=\"Entity\"\n            subtitle=\"Click on an entity to select it\"\n            media={image}\n            actions={agent ? (\n                <React.Fragment>\n                    <JobActionSelector\n                        agent={agent.address}\n                        action=\"install\"\n                        options={(jobs || []).filter((job: IJob) => !installedJobs.includes(job.general.name)).map((job: IJob) => job.general.name)}\n                    />\n                    <JobActionSelector\n                        agent={agent.address}\n                        action=\"uninstall\"\n                        options={installedJobs}\n                    />\n                    {action}\n                </React.Fragment>\n            ) : action}\n        >\n            <ul>\n                <li>Description: <b>{description}</b></li>\n                <li>OS: <b>Linux</b></li>\n                <li>Interfaces: <ul>{linkedNetworks}</ul></li>\n                <li>Agent:\n                    <EntityAgent\n                        jobs={installedJobs}\n                        agent={agent}\n                        project={project}\n                        onAgentChange={handleAgentChange}\n                    />\n                </li>\n            </ul>\n        </EntityCardTemplate>\n    );\n};\n\n\ninterface Props {\n    project: string;\n    entity: IEntity;\n    onRemove: () => void;\n}\n\n\nexport default EntityCard;\n","import React from 'react';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nimport EntityCardTemplate from './EntityCardTemplate';\n\nimport {updateProject, refreshTopology} from '../../api/projects';\nimport {useDispatch, useSelector} from '../../redux';\nimport {setMessage} from '../../redux/message';\nimport type {INetwork} from '../../utils/interfaces';\n\n\nconst image = process.env.PUBLIC_URL + '/assets/cloud.svg';\n\n\nconst NetworkCard: React.FC<Props> = (props) => {\n    const {network: {name, address}, onChange} = props;\n    const project = useSelector((state) => state.project.current);\n    const dispatch = useDispatch();\n    const [newName, storeNewName] = React.useState<string>(name);\n\n    const handleNameChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        storeNewName(event.target.value);\n    }, []);\n\n    const handleRename = React.useCallback(() => {\n        if (project) {\n            dispatch(refreshTopology({project: project.name, newName: {name: newName, address}}));\n        }\n    }, [project, address, newName, dispatch]);\n\n    const handleHideNetwork = React.useCallback(() => {\n        if (project) {\n            dispatch(setMessage(\"Updating Topology, please wait!\"));\n            const hidden_network = [...project.hidden_network, address];\n            dispatch(updateProject({name: project.name, project: {...project, hidden_network}}));\n            onChange();\n        }\n    }, [project, address, dispatch, onChange]);\n\n    return (\n        <EntityCardTemplate\n            title={name}\n            subtitle={address}\n            media={image}\n            actions={\n                <React.Fragment>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disabled={!name || name === newName}\n                        onClick={handleRename}\n                    >\n                        Change Name\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleHideNetwork}\n                    >\n                        Hide Network\n                    </Button>\n                </React.Fragment>\n            }\n        >\n            <p>Network {address}</p>\n            <TextField\n                required\n                margin=\"dense\"\n                variant=\"standard\"\n                label=\"Name\"\n                value={newName}\n                onChange={handleNameChange}\n                fullWidth\n            />\n        </EntityCardTemplate>\n    );\n};\n\n\ninterface Props {\n    network: INetwork;\n    onChange: () => void;\n}\n\n\nexport default NetworkCard;\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Fab from '@mui/material/Fab';\n\nimport ContentClear from '@mui/icons-material/Clear';\n\nimport EntityAdd from './EntityAdd';\nimport EntityCard from './EntityCard';\nimport NetworkCard from './NetworkCard';\n\nimport type {IEntity, INetwork} from '../../utils/interfaces';\n\n\nconst EntityManager: React.FC<Props> = (props) => {\n    const {project, selectedEntity, selectedNetwork, onUnselect} = props;\n\n    const card = selectedEntity ? (\n        <EntityCard\n            entity={selectedEntity}\n            project={project}\n            onRemove={onUnselect}\n        />\n    ) : selectedNetwork ? (\n        <NetworkCard\n            network={selectedNetwork}\n            onChange={onUnselect}\n        />\n    ) : (\n        <EntityAdd project={project} />\n    );\n\n    return (\n        <Box display=\"inline-block\" width=\"30%\" position=\"relative\">\n            {(selectedEntity != null || selectedNetwork != null) && <Fab\n                color=\"primary\"\n                size=\"medium\"\n                onClick={onUnselect}\n                sx={{position: \"absolute\", top: \"-16px\", right: \"-16px\"}}\n            >\n                <ContentClear />\n            </Fab>}\n            {card}\n        </Box>\n    );\n};\n\n\ninterface Props {\n    project: string;\n    entities: IEntity[];\n    selectedEntity?: IEntity;\n    selectedNetwork?: INetwork;\n    onUnselect: () => void;\n}\n\n\nexport default EntityManager;\n","import React from 'react';\n\nimport {grey, green, red} from '@mui/material/colors';\n\nimport RunningIcon from '@mui/icons-material/Autorenew';\nimport BadStatusIcon from '@mui/icons-material/HighlightOff';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport UnknownIcon from '@mui/icons-material/HelpOutline';\n\nimport {IJobStateStatus} from '../../utils/interfaces';\n\n\nconst JobStateIcon: React.FC<Props> = (props) => {\n    if (!props.status) {\n        return <UnknownIcon sx={{color: grey[500]}} />;\n    }\n\n    const {returncode} = props.status;\n    if (!returncode) {\n        return <UnknownIcon sx={{color: red[500]}} />;\n    }\n\n    if (returncode === 202) {\n        return <RunningIcon sx={{color: \"#2A72A9\"}} />;\n    } else if (returncode < 400) {\n        return <CheckCircleIcon sx={{color: green[500]}} />;\n    } else {\n        return <BadStatusIcon sx={{color: red[500]}} />;\n    }\n};\n\n\ninterface Props {\n    status?: IJobStateStatus;\n}\n\n\nexport default JobStateIcon;\n","import React from 'react';\n\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport JobStateIcon from '../common/JobStateIcon';\n\nimport {stateJob} from '../../api/jobs';\nimport {getAgents} from '../../api/agents';\nimport {useDispatch} from '../../redux';\nimport type {IJobState, IJobStateStatus} from '../../utils/interfaces';\n\n\nconst JobsStatusesQuery: React.FC<Props> = (props) => {\n    const {job: jobName, agent, action, status, onClick} = props;\n    const dispatch = useDispatch();\n\n    const title = React.useMemo(() => `${action}ing ${jobName} on ${agent}`, [action, jobName, agent]);\n\n    const handleRefresh = React.useCallback(() => {\n        dispatch(stateJob({jobName, agent}));\n    }, [jobName, agent, dispatch]);\n\n    const handleClick = React.useCallback(() => {\n        const content = !status\n            ? \"Operation not started yet!\"\n            : !status.response\n            ? \"Operation successful!\"\n            : status.response.state\n            ? \"Operation \" + status.response.state\n            : status.response.response\n            ? JSON.stringify(status.response.response)\n            : \"Format of the response is unknown. Return code was \" + status.response.returncode;\n        onClick(title, content);\n    }, [title, status, onClick]);\n\n    React.useEffect(() => {\n        if (!status || status.returncode === 202) {\n            const timeout = setTimeout(handleRefresh, 1000);\n            return () => {clearTimeout(timeout);};\n        } else if (status && status.returncode !== 202) {\n            const promise = dispatch(getAgents({services: false}));\n            return () => {promise.abort();};\n        }\n    }, [status, handleRefresh, dispatch]);\n\n    return (\n        <ListItemButton onClick={handleClick}>\n            <ListItemIcon>\n                <JobStateIcon status={status} />\n            </ListItemIcon>\n            <ListItemText primary={title} />\n        </ListItemButton>\n    );\n};\n\n\ninterface Props {\n    job: string;\n    agent: string;\n    action: keyof IJobState;\n    status?: IJobStateStatus;\n    onClick: (title: string, content: string) => void;\n}\n\n\nexport default JobsStatusesQuery;\n","import React from 'react';\n\nimport List from '@mui/material/List';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport JobsStatusesQuery from './JobsStatusesQuery';\nimport Dialog from '../common/ActionDialog';\n\nimport {useSelector} from '../../redux';\n\n\nconst JobsStatusesInfos: React.FC<Props> = (props) => {\n    const queries = useSelector((state) => state.project.jobActions);\n    const [title, storeTitle] = React.useState<string>(\"\");\n    const [content, storeContent] = React.useState<string>(\"\");\n\n    const handleOpen = React.useCallback((title: string, content: string) => {\n        storeTitle(title);\n        storeContent(content);\n    }, []);\n\n    const handleClose = React.useCallback(() => {\n        storeTitle(\"\");\n        storeContent(\"\");\n    }, []);\n\n    return (\n        <React.Fragment>\n            <List>\n                {queries.map((query) => (\n                    <JobsStatusesQuery\n                        key={`${query.job}-on-${query.agent}`}\n                        job={query.job}\n                        agent={query.agent}\n                        action={query.action}\n                        status={query.result && query.result[query.action]}\n                        onClick={handleOpen}\n                    />\n                ))}\n            </List>\n            <Dialog\n                title={title}\n                open={!(!title && !content)}\n                cancel={{label: \"OK\", action: handleClose}}\n                actions={[]}\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        {content}\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\nexport default JobsStatusesInfos;\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport type {SelectChangeEvent} from '@mui/material/Select';\n\n\nconst ProjectMiscellaneousSelect: React.FC<Props> = (props) => {\n    const {title, label, initial, options, canDoAction, onAction} = props;\n    const [selected, storeSelected] = React.useState<string[]>([]);\n\n    const handleChange = React.useCallback((event: SelectChangeEvent<typeof selected>) => {\n        const {value} = event.target;\n        storeSelected(typeof value === 'string' ? [] : value);\n    }, []);\n\n    const handleClick = React.useCallback(() => {\n        onAction(selected);\n    }, [selected, onAction]);\n\n    React.useEffect(() => {\n        storeSelected(initial);\n    }, [initial]);\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <p>{title}</p>\n            <FormControl size=\"small\" sx={{flexGrow: 1, margin: \"0 5px\"}}>\n                <Select\n                    multiple\n                    fullWidth\n                    value={selected}\n                    onChange={handleChange}\n                    renderValue={(values) => (\n                        <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n                            {values.map((value) => (\n                                <Chip key={value} label={value} />\n                            ))}\n                        </Box>\n                    )}\n                >\n                    {options.map((value) => (\n                        <MenuItem key={value} value={value}>{value}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={!canDoAction}\n                onClick={handleClick}\n            >\n                {label}\n            </Button>\n        </Box>\n    );\n};\n\n\ninterface Props {\n    title: string;\n    label: string;\n    initial: string[];\n    options: string[];\n    canDoAction: boolean;\n    onAction: (values: string[]) => void;\n}\n\n\nexport default ProjectMiscellaneousSelect;\n","import React from 'react';\nimport {useNavigate} from 'react-router';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport Dialog from '../common/ActionDialog';\nimport DownloadButton from '../common/DownloadButton';\nimport JsonEditor from '../common/JsonEditor';\nimport Topology from '../common/Topology';\nimport Entity from '../Entities/EntityManager';\nimport JobsStatusesInfos from '../Entities/JobsStatusesInfos';\nimport Select from './ProjectMiscellaneousSelect';\n\nimport {getAgents} from '../../api/agents';\nimport {deleteProject, updateProject, refreshTopology} from '../../api/projects';\nimport {useDispatch, useSelector} from '../../redux';\nimport {setMessage} from '../../redux/message';\nimport type {IProject, IEntity, INetwork} from '../../utils/interfaces';\nimport type {TopologyNode, TopologyLink} from '../common/Topology';\n\n\nconst miscellaneousStyle = {margin: \"0 15px 10px\"};\n\n\nconst ProjectDetails: React.FC<Props> = (props) => {\n    const project = useSelector((state) => state.project.current);\n    const isAdmin = useSelector((state) => state.login.is_admin);\n    const isUser = useSelector((state) => state.login.is_user);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [open, storeOpen] = React.useState<boolean>(false);\n    const [selectedEntity, storeSelectedEntity] = React.useState<IEntity>();\n    const [selectedNetwork, storeSelectedNetwork] = React.useState<INetwork>();\n\n    const handleOpen = React.useCallback(() => {\n        storeOpen(true);\n    }, []);\n\n    const handleClose = React.useCallback(() => {\n        storeOpen(false);\n    }, []);\n\n    const handleUnselect = React.useCallback(() => {\n        storeSelectedEntity(undefined);\n        storeSelectedNetwork(undefined);\n    }, []);\n\n    const handleSelect = React.useCallback((node: TopologyNode) => {\n        if (project) {\n            if (node.type === \"network\") {\n                storeSelectedEntity(undefined);\n                storeSelectedNetwork(project.network.find((network: INetwork) => network.address === node.id));\n            } else if (node.type === \"entity\") {\n                storeSelectedEntity(project.entity.find((entity: IEntity) => entity.name === node.id));\n                storeSelectedNetwork(undefined);\n            } else {\n                storeSelectedEntity(undefined);\n                storeSelectedNetwork(undefined);\n            }\n        }\n    }, [project]);\n\n    const handleFetchNtp = React.useCallback(() => {\n        dispatch(setMessage(\"Fetching Agents statusses. Please wait...\"));\n        dispatch(getAgents({services: true}));\n    }, [dispatch]);\n\n    const handleUpdateOwners = React.useCallback((owners: string[]) => {\n        if (project) {\n            dispatch(updateProject({name: project.name, project: {...project, owners}}));\n        }\n    }, [project, dispatch]);\n\n    const handleShowNetworks = React.useCallback((showNetworks: string[]) => {\n        if (project) {\n            const hidden_network = project.hidden_network.filter(\n                (name: string) => !showNetworks.includes(name)\n            );\n            dispatch(setMessage(\"Updating Topology, please wait!\"));\n            dispatch(updateProject({name: project.name, project: {...project, hidden_network}}));\n        }\n    }, [project, dispatch]);\n\n    const handleRefreshTopology = React.useCallback(() => {\n        if (project) {\n            dispatch(refreshTopology({project: project.name}));\n        }\n    }, [project, dispatch]);\n\n    const handleProjectUpdate = React.useCallback((json: string) => {\n        if (project) {\n            const update = JSON.parse(json) as IProject;\n            dispatch(updateProject({name: project.name, project: update}));\n        }\n    }, [project, dispatch]);\n\n    const handleDeleteProject = React.useCallback(() => {\n        if (project) {\n            dispatch(deleteProject({name: project.name})).unwrap().then(() => navigate('/app'));\n        }\n        handleClose();\n    }, [project, handleClose, dispatch, navigate]);\n\n    const [links, nodes] = React.useMemo(() => {\n        const projectLinks: TopologyLink[] = [];\n        if (!project) {\n            return [projectLinks, []];\n        }\n\n        const networkNodes: TopologyNode[] = project.network.map((network: INetwork) => ({\n            name: network.name,\n            id: network.address,\n            type: \"network\",\n            color: network.address.startsWith(\"imported:\") ? \"tomato\" : undefined,\n        }));\n        \n        const entityNodes: TopologyNode[] = project.entity.map((entity: IEntity) => {\n            const node: TopologyNode = {\n                name: entity.name,\n                id: entity.name,\n                type: \"entity\",\n                color: entity.agent ? \"green\" : \"black\",\n            };\n            entity.networks?.forEach((network: INetwork) => {\n                const target = networkNodes.find((n) => n.id === network.address);\n                if (target) {projectLinks.push({source: node, target, weight: 3});}\n            });\n            return node;\n        });\n\n        return [projectLinks, entityNodes.concat(networkNodes)];\n    }, [project]);\n\n    if (!project) {\n        return null;\n    }\n\n    const canRestricted = isAdmin || (!project.owners?.length && isUser);\n    const users = [...project.owners];\n\n    return (\n        <React.Fragment>\n            <h1>Project '{project.name}'</h1>\n            <Box mb=\"8px\" pb=\"8px\">\n                {project.description.split(\"\\n\").map((line: string, index: number) => (\n                    <p key={index}>{line}</p>\n                ))}\n            </Box>\n            <Select\n                title=\"Project Owners\"\n                label=\"Share\"\n                initial={project.owners}\n                options={users}\n                canDoAction={canRestricted}\n                onAction={handleUpdateOwners}\n            />\n            <Select\n                title=\"Hidden Networks\"\n                label=\"Show\"\n                initial={project.hidden_network}\n                options={project.hidden_network}\n                canDoAction={isUser}\n                onAction={handleShowNetworks}\n            />\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={!isUser}\n                    onClick={handleRefreshTopology}\n                    sx={miscellaneousStyle}\n                >\n                    Refresh Topology\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={!isUser}\n                    onClick={handleFetchNtp}\n                    sx={miscellaneousStyle}\n                >\n                    Fetch NTP Offset\n                </Button>\n                <DownloadButton\n                    route={`/openbach/project/${project.name}`}\n                    filename={`${project.name}.json`}\n                    label=\"Project\"\n                    sx={miscellaneousStyle}\n                />\n                <JsonEditor\n                    label=\"Project\"\n                    initial={project}\n                    onUpdate={handleProjectUpdate}\n                    disabled={!isUser}\n                    sx={miscellaneousStyle}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={!canRestricted}\n                    onClick={handleOpen}\n                    sx={miscellaneousStyle}\n                >\n                    Delete Project\n                </Button>\n            </Box>\n            <h1>Topology</h1>\n            <Box display=\"flex\" alignItems=\"flex-start\">\n                <Box display=\"inline-block\" width=\"70%\">\n                    <Topology\n                        height=\"800px\"\n                        nodes={nodes}\n                        links={links}\n                        selectedNode={handleSelect}\n                        unselectNode={handleUnselect}\n                    />\n                </Box>\n                <Entity\n                    entities={project.entity}\n                    project={project.name}\n                    selectedEntity={selectedEntity}\n                    selectedNetwork={selectedNetwork}\n                    onUnselect={handleUnselect}\n                />\n            </Box>\n            <JobsStatusesInfos />\n            <Dialog\n                title=\"Are you sure?\"\n                open={open}\n                cancel={{label: \"Cancel\", action: handleClose}}\n                actions={[{label: \"Delete\", action: handleDeleteProject}]}\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Deleting the project {project.name} is irreversible. Proceed anyways?\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\nexport default ProjectDetails;\n","import React from 'react';\nimport {useParams, useNavigate} from 'react-router';\nimport {useForm, Controller} from 'react-hook-form';\n\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport TextField from '@mui/material/TextField';\n\nimport {addScenario} from '../../api/scenarios';\nimport {useDispatch} from '../../redux';\n\n\nconst CreateScenarioCard: React.FC<Props> = (props) => {\n    const {projectId: project} = useParams();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const {control, handleSubmit, reset, formState: {isValid}} = useForm<FormData>({mode: 'onBlur'});\n\n    const onSubmit = React.useCallback(({scenario}: FormData) => {\n        if (project) {\n            dispatch(addScenario({project, scenario}))\n                .unwrap()\n                .then(() => {navigate(`/app/project/${project}/scenario/${scenario}`);});\n            reset();\n        }\n    }, [project, dispatch, navigate, reset]);\n\n    return (\n        <Card sx={{flexGrow: 1}}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <CardContent>\n                    <h1>Create Scenario</h1>\n                    <Controller\n                        name=\"scenario\"\n                        control={control}\n                        rules={{required: true}}\n                        defaultValue=\"\"\n                        render={({field: {onChange, onBlur, value, ref}}) => (\n                            <TextField\n                                required\n                                margin=\"dense\"\n                                variant=\"standard\"\n                                label=\"Scenario Name\"\n                                onChange={onChange}\n                                onBlur={onBlur}\n                                value={value}\n                                inputRef={ref}\n                                fullWidth\n                            />\n                        )}\n                    />\n                </CardContent>\n                <CardActions>\n                    <Button color=\"secondary\" variant=\"contained\" type=\"submit\" disabled={!isValid}>\n                        New Scenario\n                    </Button>\n                </CardActions>\n            </form>\n        </Card>\n    );\n};\n\n\ninterface Props {\n}\n\n\ninterface FormData {\n    scenario: string;\n}\n\n\nexport default CreateScenarioCard;\n","import React from 'react';\nimport {useParams, useNavigate} from 'react-router';\nimport {useForm} from 'react-hook-form';\n\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport UploadButton from '../common/FileUploadButton';\n\nimport {importScenario} from '../../api/scenarios';\nimport {useDispatch} from '../../redux';\n\n\nconst ImportScenarioCard: React.FC<Props> = (props) => {\n    const {projectId: project} = useParams();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const {handleSubmit, register, reset, formState: {isValid}} = useForm<FormData>({mode: 'onBlur'});\n\n    const onSubmit = React.useCallback(({scenario}: FormData) => {\n        if (project) {\n            dispatch(importScenario({project, scenario: scenario[0]}))\n                .unwrap()\n                .then(({name}) => {navigate(`/app/project/${project}/scenario/${name}`);});\n            reset();\n        }\n    }, [project, dispatch, reset, navigate]);\n\n    return (\n        <Card sx={{flexGrow: 1}}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <CardContent>\n                    <h1>Import Scenario</h1>\n                    <UploadButton\n                        label=\"Scenario's File\"\n                        accept=\".json\"\n                        required\n                        name=\"scenario\"\n                        register={register}\n                        options={{required: true}}\n                    />\n                </CardContent>\n                <CardActions>\n                    <Button color=\"secondary\" variant=\"contained\" type=\"submit\" disabled={!isValid}>\n                        Import Scenario\n                    </Button>\n                </CardActions>\n            </form>\n        </Card>\n    );\n};\n\n\ninterface Props {\n}\n\n\ninterface FormData {\n    scenario: FileList;\n}\n\n\nexport default ImportScenarioCard;\n","const lightGreen = {\n  50: '#f1f8e9',\n  100: '#dcedc8',\n  200: '#c5e1a5',\n  300: '#aed581',\n  400: '#9ccc65',\n  500: '#8bc34a',\n  600: '#7cb342',\n  700: '#689f38',\n  800: '#558b2f',\n  900: '#33691e',\n  A100: '#ccff90',\n  A200: '#b2ff59',\n  A400: '#76ff03',\n  A700: '#64dd17'\n};\nexport default lightGreen;","import React from 'react';\n\nimport Tooltip from '@mui/material/Tooltip';\n\nimport {lightGreen} from '@mui/material/colors';\nimport Play from '@mui/icons-material/PlayCircleFilled';\n\n\nconst LaunchScenarioIcon: React.FC<Props> = (props) => {\n    const {title = \"Launch\"} = props;\n\n    return (\n        <Tooltip title={title} placement=\"top-start\">\n            <Play sx={{color: lightGreen[500]}} />\n        </Tooltip>\n    );\n};\n\n\ninterface Props {\n    title?: string;\n}\n\n\nexport default LaunchScenarioIcon;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport IconButton from '@mui/material/IconButton';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Delete from '../common/DeleteIcon';\nimport LaunchScenario from '../common/LaunchScenarioIcon';\n\nimport {useSelector} from '../../redux';\nimport {IScenario} from '../../utils/interfaces';\n\n\nconst ScenariosListItem: React.FC<Props> = (props) => {\n    const {scenario: {name, openbach_functions, arguments: args}, onDelete, onLaunch} = props;\n    const project = useSelector((state) => state.project.current);\n\n    const handleStartScenario = React.useCallback((event: React.MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        onLaunch({scenario: name, args: Object.keys(args)});\n    }, [name, args, onLaunch]);\n\n    const handleDelete = React.useCallback((event: React.MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        onDelete(name);\n    }, [onDelete, name]);\n\n    const length = openbach_functions.length;\n    const secondary = `${length} openbach function${length > 1 ? \"s\" : \"\"}`;\n\n    return (\n        <ListItemButton component={Link} to={`/app/project/${project?.name}/scenario/${name}`} disableRipple>\n            <ListItemIcon onClick={handleStartScenario}>\n                <LaunchScenario />\n            </ListItemIcon>\n            <ListItemText primary={name} secondary={secondary} />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" onClick={handleDelete}>\n                    <Delete />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItemButton>\n    );\n};\n\n\ninterface Props {\n    scenario: IScenario;\n    onLaunch: (scenario: {scenario: string; args: string[];}) => void;\n    onDelete: (name: string) => void;\n}\n\n\nexport default ScenariosListItem;\n","import React from 'react';\nimport {useParams, useNavigate} from 'react-router';\n\nimport Box from '@mui/material/Box';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\n\nimport CreateScenario from './CreateScenarioCard';\nimport ImportScenario from './ImportScenarioCard';\nimport ScenariosListItem from './ScenariosListItem';\nimport ScenarioLaunchDialog from './ScenarioLaunchDialog';\nimport Dialog from '../common/ActionDialog';\n\nimport {deleteScenario} from '../../api/scenarios';\nimport {useDispatch, useSelector} from '../../redux';\nimport {IScenario} from '../../utils/interfaces';\n\n\nconst ScenariosList: React.FC<Props> = (props) => {\n    const {scenarioId} = useParams();\n    const project = useSelector((state) => state.project.current);\n    const favorites = useSelector((state) => state.login.favorites);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [scenarioToDelete, storeScenarioToDelete] = React.useState<string>();\n    const [scenarioToLaunch, storeScenarioToLaunch] = React.useState<Launch>();\n\n    const handleOpenLaunch = React.useCallback((scenario: Launch) => {\n        storeScenarioToLaunch(scenario);\n    }, []);\n\n    const handleCloseLaunch = React.useCallback(() => {\n        storeScenarioToLaunch(undefined);\n    }, []);\n\n    const handleOpenDelete = React.useCallback((name: string) => {\n        storeScenarioToDelete(name);\n    }, []);\n\n    const handleCloseDelete = React.useCallback(() => {\n        storeScenarioToDelete(undefined);\n    }, []);\n\n    const handleDelete = React.useCallback(() => {\n        if (project?.name && scenarioToDelete) {\n            dispatch(deleteScenario({project: project.name, scenario: scenarioToDelete}))\n                .unwrap()\n                .then(() => {if (scenarioToDelete === scenarioId) {navigate('/app/project/' + project.name);}});\n        }\n        handleCloseDelete();\n    }, [project, scenarioToDelete, scenarioId, handleCloseDelete, dispatch, navigate]);\n\n    const prefered = React.useMemo(() => {\n        const projectKey = project?.name;\n        if (!projectKey || !favorites.hasOwnProperty(projectKey)) {\n            return {};\n        }\n\n        return Object.fromEntries(favorites[projectKey].map((key: string) => ([key, true])))\n    }, [favorites, project]);\n\n    const scenarios = React.useMemo(() => {\n        const copy = project?.scenario?.slice() || [];\n        return copy.sort((scenario: IScenario, other: IScenario) => scenario.name.localeCompare(other.name));\n    }, [project]);\n\n    const favoritedScenarios = scenarios.filter(\n        (scenario: IScenario) => prefered[scenario.name]\n    ).map((scenario: IScenario) => (\n        <ScenariosListItem\n            key={scenario.name}\n            scenario={scenario}\n            onLaunch={handleOpenLaunch}\n            onDelete={handleOpenDelete}\n        />\n    ));\n\n    const regularScenarios = scenarios.filter(\n        (scenario: IScenario) => !prefered[scenario.name]\n    ).map((scenario: IScenario) => (\n        <ScenariosListItem\n            key={scenario.name}\n            scenario={scenario}\n            onLaunch={handleOpenLaunch}\n            onDelete={handleOpenDelete}\n        />\n    ));\n\n    const needDivider = favoritedScenarios.length > 0 && 0 < regularScenarios.length;\n    \n    return (\n        <React.Fragment>\n            <List>{favoritedScenarios}</List>\n            {needDivider && <Divider />}\n            <List>{regularScenarios}</List>\n            <Box\n                display=\"flex\"\n                alignItems=\"flex-start\"\n                gap=\"10%\"\n                pl=\"10%\"\n                pr=\"10%\"\n                pt={5}\n                width=\"100%\"\n                boxSizing=\"border-box\"\n            >\n                <CreateScenario />\n                <ImportScenario />\n            </Box>\n            <Dialog\n                title=\"Really Delete this Scenario?\"\n                open={Boolean(scenarioToDelete)}\n                cancel={{label: \"Cancel\", action: handleCloseDelete}}\n                actions={[{label: \"Delete\", action: handleDelete}]}\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        The scenario \"{scenarioToDelete}\" will be deleted. This\n                        action is unrecoverable. Do you want to continue?\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n            {project && scenarioToLaunch && <ScenarioLaunchDialog\n                project={project.name}\n                scenario={scenarioToLaunch.scenario}\n                arguments={scenarioToLaunch.args}\n                onClose={handleCloseLaunch}\n            />}\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\ninterface Launch {\n    scenario: string;\n    args: string[];\n}\n\n\nexport default ScenariosList;\n","import React from 'react';\nimport {useParams} from 'react-router';\n\nimport AppBar from '@mui/material/AppBar';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\n\nimport ProjectDetails from './ProjectDetails';\nimport ScenariosList from '../Scenarios/ScenariosList';\nimport ScenarioInstancesList from '../Scenarios/ScenarioInstancesList';\n\nimport {getAgents} from '../../api/agents';\nimport {getJobs} from '../../api/jobs';\nimport {getProject} from '../../api/projects';\nimport {useDispatch} from '../../redux';\nimport {selectNewScenario} from '../../redux/project';\nimport {setTitle} from '../../redux/message';\nimport {breakOutOfMainBody} from '../../utils/theme';\n\n\nconst TabPanel: React.FC<React.PropsWithChildren<TabProps>> = (props) => {\n    const {value, selected, children} = props;\n    const hidden = value !== selected;\n\n    return (\n        <div role=\"tabpanel\" hidden={hidden}>\n            {!hidden && children}\n        </div>\n    );\n};\n\n\nconst Project: React.FC<React.PropsWithChildren<Props>> = (props) => {\n    const {projectId, scenarioId} = useParams();\n    const dispatch = useDispatch();\n    const [selectedTab, storeTab] = React.useState<TabKeys>('project');\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, value: TabKeys) => {\n        storeTab(value);\n    }, []);\n\n    React.useEffect(() => {\n        dispatch(setTitle(`Project '${projectId}'`));\n        if (projectId) {\n            const promise = dispatch(getProject({name: projectId}));\n            return () => {promise.abort();};\n        }\n    }, [dispatch, projectId]);\n\n    React.useEffect(() => {\n        dispatch(selectNewScenario());\n        if (scenarioId) {\n            storeTab(\"selected\");\n        }\n    }, [scenarioId, dispatch]);\n\n    React.useEffect(() => {\n        const promises = [\n            dispatch(getAgents({services: false})),\n            dispatch(getJobs()),\n        ];\n        return () => {promises.forEach((promise) => {promise.abort();});};\n    }, [dispatch]);\n\n    return (\n        <React.Fragment>\n            <AppBar color=\"primary\" sx={{position: \"static\", ...breakOutOfMainBody}}>\n                <Tabs\n                    value={selectedTab}\n                    onChange={handleTabChange}\n                    centered\n                    variant=\"fullWidth\"\n                    textColor=\"inherit\"\n                    indicatorColor=\"secondary\"\n                >\n                    <Tab label=\"Project\" value=\"project\" />\n                    <Tab label=\"Scenarios\" value=\"scenarios\" />\n                    <Tab label=\"Instances\" value=\"instances\" />\n                    <Tab label={scenarioId || \"No Scenario Selected\"} value=\"selected\" disabled={!scenarioId} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value=\"project\" selected={selectedTab}>\n                <ProjectDetails />\n            </TabPanel>\n            <TabPanel value=\"scenarios\" selected={selectedTab}>\n                <ScenariosList />\n            </TabPanel>\n            <TabPanel value=\"instances\" selected={selectedTab}>\n                {projectId && <ScenarioInstancesList project={projectId} />}\n            </TabPanel>\n            <TabPanel value=\"selected\" selected={selectedTab}>\n                {props.children}\n            </TabPanel>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\ninterface TabProps {\n    value: TabKeys;\n    selected: TabKeys;\n}\n\n\ntype TabKeys = \"project\" | \"scenarios\" | \"instances\" | \"selected\";\n\n\nexport default Project;\n","import React from 'react';\nimport * as D3 from 'd3';\n\n\nconst assets = {\n    entity: process.env.PUBLIC_URL + '/assets/server.svg',\n    network: process.env.PUBLIC_URL + '/assets/cloud.svg',\n    project: process.env.PUBLIC_URL + '/assets/project.svg',\n};\n\n\n// Custom Hook\nconst useWindowSize = () => {\n    const [windowSize, storeWindowSize] = React.useState<Partial<WindowSize>>({\n        width: undefined,\n        height: undefined,\n    });\n\n    React.useEffect(() => {\n        const handleResize = () => {storeWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });};\n        window.addEventListener('resize', handleResize);\n\n        // Store initial size right away\n        handleResize();\n\n        return () => window.removeEventListener('resize', handleResize);\n    }, [/* Run only once */]);\n\n    return windowSize;\n};\n\n\nconst Topology: React.FC<Props> = (props) => {\n    const {height, nodes, links, selectedNode, unselectNode} = props;\n    const windowSize = useWindowSize();\n    const svgRef = React.useRef<SVGSVGElement>(null);\n\n    React.useEffect(() => {\n        if (!svgRef.current) {\n            return;\n        }\n\n        while (svgRef.current.children.length > 0) {\n            svgRef.current.children[0].remove();\n        }\n\n        const height = svgRef.current.clientHeight;\n        const width = svgRef.current.clientWidth;\n\n        const simulation = D3.forceSimulation<TopologyNode>(nodes)\n            .force(\"link\", D3.forceLink<TopologyNode, TopologyLink>(links).id((d: TopologyNode) => d.id).strength((d: TopologyLink) => d.weight))\n            .force(\"collide\", D3.forceCollide<TopologyNode>(30))\n            .force(\"center-x\", D3.forceX<TopologyNode>(0))\n            .force(\"center-y\", D3.forceY<TopologyNode>(0))\n            .on(\"tick\", () => {\n                link.attr(\"x1\", (d: TopologyLink) => (d.source as TopologyNode).x as number)\n                    .attr(\"y1\", (d: TopologyLink) => (d.source as TopologyNode).y as number)\n                    .attr(\"x2\", (d: TopologyLink) => (d.target as TopologyNode).x as number)\n                    .attr(\"y2\", (d: TopologyLink) => (d.target as TopologyNode).y as number);\n                node.attr(\"transform\", (d: TopologyNode) => `translate(${d.x}, ${d.y})`);\n            });\n\n        const svg = D3.select(svgRef.current)\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n            .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n        const rect = svg.append(\"rect\")\n            .attr(\"fill\", \"white\")\n            .attr(\"height\", height)\n            .attr(\"width\", width)\n            .attr(\"x\", -width / 2)\n            .attr(\"y\", -height / 2);\n\n        const link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\".link\")\n            .data<TopologyLink>(links)\n            .enter()\n            .append(\"line\")\n            .attr(\"stroke\", \"#AAA\")\n            .attr(\"stroke-width\", (d: TopologyLink) => Math.sqrt(d.weight));\n\n        const node = svg.append(\"g\")\n            .attr(\"class\", \"nodes\")\n            .selectAll(\".node\")\n            .data<TopologyNode>(nodes)\n            .enter()\n            .append<SVGGElement>(\"g\")\n            .on(\"dblclick\", (event, d: TopologyNode) => {d.fx = null; d.fy = null;})\n            .call(D3.drag<SVGGElement, TopologyNode>()\n                .on(\"start\", (event) => {\n                    if (!event.active) {\n                        simulation.alphaTarget(0.3).restart();\n                    }\n                    event.subject.fx = event.subject.x;\n                    event.subject.fy = event.subject.y;\n                })\n                .on(\"drag\", (event) => {\n                    event.subject.fx = event.x;\n                    event.subject.fy = event.y;\n                })\n                .on(\"end\", (event) => {\n                    if (!event.active) {\n                        simulation.alphaTarget(0);\n                    }\n                }));\n\n        node.append(\"svg:image\")\n            .attr(\"height\", 30)\n            .attr(\"width\", 30)\n            .attr(\"x\", -15)\n            .attr(\"y\", -15)\n            .attr(\"xlink:href\", (d: TopologyNode) => assets[d.type]);\n\n        node.append(\"text\")\n            .text((d: TopologyNode) => d.name)\n            .attr(\"cursor\", \"pointer\")\n            .attr(\"dx\", 12)\n            .attr(\"dy\", \".35em\")\n            .style(\"fill\", (d: TopologyNode) => d.color ? d.color : (d.type === \"network\" ? \"#757575\" : \"black\"));\n\n        if (selectedNode) {\n            node.on(\"click\", (event, d: TopologyNode) => selectedNode(d));\n        }\n\n        if (unselectNode) {\n            rect.on(\"click\", unselectNode);\n        }\n\n        return () => {simulation.stop();};\n    }, [nodes, links, selectedNode, unselectNode, windowSize]);\n\n    return <svg ref={svgRef} height={height} width=\"100%\" />;\n};\n\n\ninterface Props {\n    height: number | string;\n    nodes: TopologyNode[];\n    links: TopologyLink[];\n    selectedNode?: (node: TopologyNode) => void;\n    unselectNode?: () => void;\n}\n\n\ninterface WindowSize {\n    width: number;\n    height: number;\n}\n\n\nexport interface TopologyNode extends D3.SimulationNodeDatum {\n    name: string;\n    id: string;\n    type: \"entity\" | \"network\" | \"project\";\n    color?: string;\n}\n\n\nexport interface TopologyLink extends D3.SimulationLinkDatum<TopologyNode> {\n    weight: number;\n}\n\n\nexport default Topology;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilled');\nexports.default = _default;"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","_extends2","_extends","_defineProperty","concat","cardHeaderClasses","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","className","_props$component","component","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","variant","children","color","_jsxs","clsx","as","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","_ref","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","image","src","style","indexOf","composedStyle","backgroundImage","slots","role","undefined","subtitle","actions","isUser","useSelector","state","login","is_user","Card","sx","position","CardHeader","height","backgroundColor","CardMedia","alt","top","right","CardContent","CardActions","disableSpacing","flexDirection","gap","project","agents","openbach","dispatch","useDispatch","_React$useState","_React$useState2","_slicedToArray","newEntityName","storeNewEntityName","_React$useState3","_React$useState4","newEntityDescription","storeNewEntityDescription","_React$useState5","_React$useState6","newEntityAgent","storeNewEntityAgent","handleNameChange","event","target","value","handleDescriptionChange","handleAgentChange","handleEntityAdd","addEntity","description","agent","find","a","address","reserved","filter","map","MenuItem","available","EntityCardTemplate","Button","disabled","onClick","TextField","required","margin","label","onChange","fullWidth","multiline","rows","FormControl","mt","InputLabel","id","Select","labelId","jobs","onAgentChange","selector","globalAgent","services","ntp","hasOwnProperty","split","s","startsWith","status","errors","collector_ip","length","j","e","index","msg","options","selected","storeSelected","handleChange","handleAction","installOnAgents","jobNames","uninstallOnAgents","forEach","job","addJobAction","setTimeout","window","scrollTo","document","body","scrollHeight","left","behavior","Box","flexGrow","multiple","renderValue","values","flexWrap","Chip","_props$entity","entity","networks","onRemove","installedJobs","storeInstalledJobs","handleRemoveEntity","removeEntity","updateEntityAgent","linkedNetworks","network","interface","ip","promise","getJobs","unwrap","then","payload","abort","JobActionSelector","includes","general","EntityAgent","_props$network","current","newName","storeNewName","handleRename","refreshTopology","handleHideNetwork","setMessage","hidden_network","_toConsumableArray","updateProject","_objectSpread","selectedEntity","selectedNetwork","onUnselect","card","EntityCard","NetworkCard","EntityAdd","Fab","size","ContentClear","UnknownIcon","grey","returncode","RunningIcon","CheckCircleIcon","green","BadStatusIcon","red","jobName","handleRefresh","stateJob","handleClick","response","JSON","stringify","timeout","clearTimeout","getAgents","ListItemButton","ListItemIcon","JobStateIcon","ListItemText","primary","queries","jobActions","storeTitle","storeContent","handleOpen","handleClose","List","query","JobsStatusesQuery","result","Dialog","open","cancel","DialogContent","DialogContentText","initial","canDoAction","onAction","miscellaneousStyle","_project$owners","isAdmin","is_admin","navigate","useNavigate","storeOpen","storeSelectedEntity","storeSelectedNetwork","handleUnselect","handleSelect","node","handleFetchNtp","handleUpdateOwners","owners","handleShowNetworks","showNetworks","handleRefreshTopology","handleProjectUpdate","json","update","parse","handleDeleteProject","deleteProject","_React$useMemo","projectLinks","networkNodes","entityNodes","_entity$networks","n","push","source","weight","_React$useMemo2","links","nodes","canRestricted","users","mb","pb","line","justifyContent","DownloadButton","route","filename","JsonEditor","onUpdate","Topology","selectedNode","unselectNode","Entity","entities","JobsStatusesInfos","useParams","projectId","_useForm","useForm","mode","control","handleSubmit","reset","isValid","formState","onSubmit","scenario","addScenario","Controller","rules","defaultValue","render","_ref2","_ref2$field","field","onBlur","inputRef","register","importScenario","UploadButton","accept","A100","A200","A400","A700","_props$title","Tooltip","placement","Play","lightGreen","_props$scenario","openbach_functions","args","arguments","onDelete","onLaunch","handleStartScenario","preventDefault","stopPropagation","Object","keys","handleDelete","secondary","Link","to","disableRipple","LaunchScenario","ListItemSecondaryAction","IconButton","edge","Delete","scenarioId","favorites","scenarioToDelete","storeScenarioToDelete","scenarioToLaunch","storeScenarioToLaunch","handleOpenLaunch","handleCloseLaunch","handleOpenDelete","handleCloseDelete","deleteScenario","prefered","projectKey","fromEntries","key","scenarios","_project$scenario","slice","sort","localeCompare","favoritedScenarios","ScenariosListItem","regularScenarios","needDivider","Divider","pl","pr","pt","boxSizing","CreateScenario","ImportScenario","Boolean","ScenarioLaunchDialog","onClose","TabPanel","hidden","_useParams","selectedTab","storeTab","handleTabChange","setTitle","getProject","selectNewScenario","promises","AppBar","breakOutOfMainBody","Tabs","centered","textColor","indicatorColor","Tab","ProjectDetails","ScenariosList","ScenarioInstancesList","assets","windowSize","storeWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","svgRef","remove","clientHeight","clientWidth","simulation","D3","force","d","strength","on","link","attr","x","y","svg","rect","append","selectAll","data","enter","Math","sqrt","fx","fy","call","active","alphaTarget","restart","subject","text","stop","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}