{"version":3,"file":"static/js/819.fa1a9535.chunk.js","mappings":"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","sources":["components/Users/CreateUserDialog.tsx"],"sourcesContent":["import React from 'react';\nimport {useForm, Controller} from 'react-hook-form';\n\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\n\nimport Dialog from '../common/ActionDialog';\n\nimport {createUser} from '../../api/login';\nimport {useDispatch} from '../../redux';\nimport {setMessage} from '../../redux/message';\nimport type {FieldErrors} from 'react-hook-form';\n\n\nconst CreateUserDialog: React.FC<Props> = (props) => {\n    const {open, onClose} = props;\n    const dispatch = useDispatch();\n    const {control, handleSubmit, reset} = useForm<FormData>();\n\n    const onSubmit = React.useCallback((data: FormData) => {\n        dispatch(createUser({\n            login: data.username,\n            password: data.password,\n            email: data.email,\n            first_name: data.firstName,\n            last_name: data.lastName,\n        }));\n    }, [dispatch]);\n\n    const onError = React.useCallback((error: FieldErrors<FormData>) => {\n        const loginError = error?.username?.message;\n        if (loginError) {\n            dispatch(setMessage(loginError));\n            return;\n        }\n        const passwordError = error?.password?.message;\n        if (passwordError) {\n            dispatch(setMessage(passwordError));\n            return;\n        }\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        if (!open) {reset();}\n    }, [open, reset]);\n\n    return (\n        <Dialog\n            title=\"Create New User\"\n            open={open}\n            onSubmit={handleSubmit(onSubmit, onError)}\n            cancel={{label: \"Cancel\", action: onClose}}\n            actions={[{label: \"Create User\", action: \"submit\"}]}\n        >\n            <DialogContent>\n                <DialogContentText>\n                    Required Fields\n                </DialogContentText>\n                <Controller\n                    name=\"username\"\n                    control={control}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onBlur, onChange, value, ref}}) => (\n                        <TextField\n                            autoFocus\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Username\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"password\"\n                    control={control}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onBlur, onChange, value, ref}}) => (\n                        <TextField\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Password\"\n                            type=\"password\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <DialogContentText>\n                    Optional Fields\n                </DialogContentText>\n                <Controller\n                    name=\"email\"\n                    control={control}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                    render={({field: {onBlur, onChange, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Email\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"firstName\"\n                    control={control}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                    render={({field: {onBlur, onChange, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"First Name\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"lastName\"\n                    control={control}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                    render={({field: {onBlur, onChange, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Last Name\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n            </DialogContent>\n        </Dialog>\n    );\n};\n\n\ninterface Props {\n    open: boolean;\n    onClose: () => void;\n}\n\n\ninterface FormData {\n    username: string;\n    password: string;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n}\n\n\nexport default CreateUserDialog;\n"],"names":["props","open","onClose","dispatch","useDispatch","_useForm","useForm","control","handleSubmit","reset","onSubmit","React","data","createUser","login","username","password","email","first_name","firstName","last_name","lastName","onError","error","_error$username","_error$password","loginError","message","setMessage","passwordError","_jsx","Dialog","title","cancel","label","action","actions","children","_jsxs","DialogContent","DialogContentText","Controller","name","rules","required","defaultValue","render","_ref","_ref$field","field","onBlur","onChange","value","ref","TextField","autoFocus","margin","variant","inputRef","fullWidth","_ref2","_ref2$field","type","_ref3","_ref3$field","_ref4","_ref4$field","_ref5","_ref5$field"],"sourceRoot":""}