{"version":3,"file":"static/js/614.83b773fb.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","components/Builder/ScenarioArgumentsItem.tsx","components/Builder/ScenarioArguments.tsx","components/Builder/ScenarioConstants.tsx","components/common/NumberField.tsx","components/Builder/StartJobInstanceParameterField.tsx","components/Builder/StartJobInstanceSubcommand.tsx","components/Builder/StartJobInstanceParameters.tsx","components/Builder/StartJobInstance.tsx","components/Builder/StopJobInstance.tsx","components/Builder/StartScenarioInstance.tsx","components/Builder/StopScenarioInstance.tsx","components/Builder/WaitFor.tsx","utils/interfaces.ts","components/Builder/ScenarioFunctions.tsx","components/Builder/ScenarioBuilder.tsx","components/Scenarios/SelectedScenario.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Info.js","../node_modules/@mui/icons-material/NewReleasesTwoTone.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import React from 'react';\nimport {Controller} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport TextField from '@mui/material/TextField';\n\nimport DeleteIcon from '../common/DeleteIcon';\n\n\nconst ScenarioArgumentsItem: React.FC<Props> = (props) => {\n    const {type, label, name, onDelete} = props;\n\n    return (\n        <ListItem>\n            <ListItemIcon onClick={onDelete} sx={{cursor: \"pointer\"}}>\n                <DeleteIcon title={\"Remove \" + type} />\n            </ListItemIcon>\n            <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                <Controller\n                    name={`${name}.name` as 'arguments.0.name' | 'constants.0.name'}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Name\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name={`${name}.${label.toLowerCase()}` as 'arguments.0.description' | 'constants.0.value'}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label={label}\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n            </Box>\n        </ListItem>\n    );\n};\n\n\ninterface Props {\n    type: string;\n    label: string;\n    name: string;\n    onDelete: () => void;\n}\n\n\nexport default ScenarioArgumentsItem;\n","import React from 'react';\nimport {useFieldArray} from 'react-hook-form';\n\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Add from '@mui/icons-material/Add';\n\nimport ListItem from '../common/NestedListItem';\n\nimport ScenarioArgumentsItem from './ScenarioArgumentsItem';\n\n\nconst ScenarioArguments: React.FC<Props> = (props) => {\n    const {fields, append, remove} = useFieldArray({name: \"arguments\"});\n\n    const handleEntryDelete = React.useCallback((index: number) => () => {\n        remove(index);\n    }, [remove]);\n\n    const handleEntryAdd = React.useCallback(() => {\n        append({name: \"\", description: \"\"});\n    }, [append]);\n\n    const items = fields.map((field, index: number) => (\n        <ScenarioArgumentsItem\n            key={field.id}\n            name={`arguments.${index}`}\n            label=\"Description\"\n            type=\"Argument\"\n            onDelete={handleEntryDelete(index)}\n        />\n    ));\n\n    items.push((\n        <ListItemButton key=\"notAnumber\" onClick={handleEntryAdd}>\n            <ListItemIcon><Add /></ListItemIcon>\n            <ListItemText primary=\"Add new argument\" />\n        </ListItemButton>\n    ));\n\n    return <ListItem primary=\"Arguments\" nestedItems={items} />;\n};\n\n\ninterface Props {\n}\n\n\nexport default ScenarioArguments;\n","import React from 'react';\nimport {useFieldArray} from 'react-hook-form';\n\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Add from '@mui/icons-material/Add';\n\nimport ListItem from '../common/NestedListItem';\n\nimport ScenarioArgumentsItem from './ScenarioArgumentsItem';\n\n\nconst ScenarioConstants: React.FC<Props> = (props) => {\n    const {fields, append, remove} = useFieldArray({name: \"constants\"});\n\n    const handleEntryDelete = React.useCallback((index: number) => () => {\n        remove(index);\n    }, [remove]);\n\n    const handleEntryAdd = React.useCallback(() => {\n        append({name: \"\", value: \"\"});\n    }, [append]);\n\n    const items = fields.map((field, index: number) => (\n        <ScenarioArgumentsItem\n            key={field.id}\n            name={`constants.${index}`}\n            label=\"Value\"\n            type=\"Constant\"\n            onDelete={handleEntryDelete(index)}\n        />\n    ));\n\n    items.push((\n        <ListItemButton key=\"notAnumber\" onClick={handleEntryAdd}>\n            <ListItemIcon><Add /></ListItemIcon>\n            <ListItemText primary=\"Add new constant\" />\n        </ListItemButton>\n    ));\n\n    return <ListItem primary=\"Constants\" nestedItems={items} />;\n};\n\n\ninterface Props {\n}\n\n\nexport default ScenarioConstants;\n","import React from 'react';\nimport {useFormContext, Controller} from 'react-hook-form';\n\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport type {Form} from '../../utils/interfaces';\nimport type {Theme} from '@mui/material/styles';\nimport type {SxProps} from '@mui/system';\nimport type {UseControllerProps} from 'react-hook-form';\n\n\nconst NumberField: React.FC<Props & UseControllerProps<Form>> = (props) => {\n    const {variant, type, label, sx, fullWidth, step=1, color, ...controllerProps} = props;\n    const {getValues, setValue} = useFormContext<Form>();\n    const {name} = controllerProps;\n\n    const handleIncrement = React.useCallback(() => {\n        const value = Number(getValues(name));\n        setValue(name, isNaN(value) ? 0 : value + step);\n    }, [name, getValues, setValue, step]);\n\n    const handleDecrement = React.useCallback(() => {\n        const value = Number(getValues(name));\n        setValue(name, isNaN(value) ? 0 : value - step);\n    }, [name, getValues, setValue, step]);\n\n    const minus = (\n        <Tooltip\n            title=\"Decrement\"\n            placement=\"top\"\n        >\n            <IconButton\n                color={color}\n                onClick={handleDecrement}\n            >\n                -\n            </IconButton>\n        </Tooltip>\n    );\n\n    const plus = (\n        <Tooltip\n            title=\"Increment\"\n            placement=\"top\"\n        >\n            <IconButton\n                color={color}\n                onClick={handleIncrement}\n            >\n                +\n            </IconButton>\n        </Tooltip>\n    );\n\n    return (\n        <Controller\n            {...controllerProps}\n            render={({field: {onChange, onBlur, value, ref}}) => (\n                <TextField\n                    margin=\"dense\"\n                    variant={variant}\n                    color={color}\n                    fullWidth={fullWidth}\n                    type={type}\n                    label={label}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    inputRef={ref}\n                    sx={sx}\n                    InputProps={{\n                        startAdornment: minus,\n                        endAdornment: plus,\n                    }}\n                />\n            )}\n        />\n    );\n};\n\n\ninterface Props {\n    variant: \"standard\" | \"filled\" | \"outlined\";\n    type?: \"password\";\n    label: string;\n    sx?: SxProps<Theme>;\n    fullWidth?: boolean;\n    step?: number;\n    color?: \"primary\" | \"secondary\";\n};\n\n\nexport default NumberField;\n","import React from 'react';\nimport {useFormContext, useFieldArray, Controller} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport InfoIcon from '@mui/icons-material/Info';\n\nimport NumberField from '../common/NumberField';\n\nimport type {IJobArgument, TStartJobParameterValue, Form, FunctionForm} from '../../utils/interfaces';\nimport type {UseControllerProps} from 'react-hook-form';\n\n\nconst StringField: React.FC<PasswordField> = (props) => {\n    const {label, password, required: _, ...controllerProps} = props;\n\n    return (\n        <Controller\n            {...controllerProps}\n            render={({field: {onChange, onBlur, value, ref}}) => (\n                <TextField\n                    margin=\"dense\"\n                    variant=\"standard\"\n                    type={password ? \"password\" : undefined}\n                    label={label}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    inputRef={ref}\n                    sx={{flexGrow: 1}}\n                />\n            )}\n        />\n    );\n};\n\n\nconst NumericField: React.FC<NumericalField> = (props) => {\n    const {label, step, required: _, ...controllerProps} = props;\n\n    return (\n        <NumberField\n            variant=\"standard\"\n            label={label}\n            step={step}\n            sx={{flexGrow: 1}}\n            {...controllerProps}\n            rules={{required: false}}\n        />\n    );\n};\n\n\nconst BooleanField: React.FC<Field> = (props) => {\n    const {label, onChange: handleChange, required: _, ...controllerProps} = props;\n\n    return (\n        <FormGroup sx={{flexGrow: 1}}>\n            <FormControlLabel\n                control={<Controller\n                    {...controllerProps}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <Checkbox checked={value} onChange={handleChange ? (e) => {onChange(e); handleChange();} : onChange} onBlur={onBlur} inputRef={ref} />\n                    )}\n                />}\n                label={label}\n            />\n        </FormGroup>\n    );\n};\n\n\nconst ChoiceField: React.FC<SelectField> = (props) => {\n    const {label, choices, required: _, ...controllerProps} = props;\n\n    return (\n        <Controller\n            {...controllerProps}\n            render={({field: {onChange, onBlur, value, ref}}) => (\n                <TextField\n                    margin=\"dense\"\n                    variant=\"standard\"\n                    select\n                    label={label}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    inputRef={ref}\n                    sx={{flexGrow: 1}}\n                >\n                    {[\"\", ...choices].map((option: string) => (\n                        <MenuItem key={option} value={option}>{option}</MenuItem>\n                    ))}\n                </TextField>\n            )}\n        />\n    );\n};\n\n\nconst IdField: React.FC<OpenbachFunctionField> = (props) => {\n    const {label, type, others, required: _, ...controllerProps} = props;\n\n    const choices = React.useMemo(() => {\n        return others.filter((openbachFunction: FunctionForm) => openbachFunction.kind === type).map(\n            ({id, label}: FunctionForm) => ({id, label})\n        );\n    }, [others, type]);\n\n    return (\n        <FormControl size=\"small\" sx={{flexGrow: 1}}>\n            <InputLabel>{label}</InputLabel>\n            <Controller\n                {...controllerProps}\n                render={({field: {onChange, onBlur, value, ref}}) => (\n                    <Select\n                        label={label}\n                        variant=\"standard\"\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        inputRef={ref}\n                        fullWidth\n                        multiple\n                        renderValue={(values: number[]) => (\n                            <Box display=\"flex\" flexWrap=\"wrap\" gap={0.5}>\n                                {values.map((value: number) => (\n                                    <Chip key={value} label={choices.find(({id}) => id === value)?.label} />\n                                ))}\n                            </Box>\n                        )}\n                    >\n                        {choices.map(({id, label}) => <MenuItem key={id} value={id}>{label}</MenuItem>)}\n                    </Select>\n                )}\n            />\n        </FormControl>\n    );\n};\n\n\nconst StartJobInstanceParameterRow: React.FC<RowProps> = (props) => {\n    const {name, label, defaultValue, minLength, maxLength, type, password, choices, others, onChange} = props;\n    const {fields, append} = useFieldArray({name, shouldUnregister: false, rules: {minLength, maxLength}});\n    const {getValues, setValue} = useFormContext<Form>();\n\n    const addNewField = React.useCallback(() => {\n        append(defaultValue);\n        if (onChange) {\n            onChange();\n        }\n    }, [append, defaultValue, onChange]);\n\n    React.useEffect(() => {\n        const values = getValues(name);\n        if (fields.length !== (values as any)?.length) {\n            setValue(name, values);\n        }\n    }, [name, fields, getValues, setValue]);\n\n    return (\n        <React.Fragment>\n            {fields.map((field, index: number) => {\n                // const canAddNew = (maxLength == null || index < maxLength - 1) && index === fields.length - 1;\n                const canAddNew = index === fields.length - 1;\n                switch(type) {\n                    case \"None\":\n                        return (\n                            <BooleanField\n                                key={field.id}\n                                label={label}\n                                required={index < minLength}\n                                name={`${name}.${index}`}\n                                rules={{required: false}}\n                                defaultValue={defaultValue as unknown as undefined}\n                                onChange={canAddNew ? addNewField : onChange}\n                            />\n                        );\n                    case \"int\":\n                        return (\n                            <NumericField\n                                key={field.id}\n                                label={label}\n                                step={1}\n                                required={index < minLength}\n                                name={`${name}.${index}`}\n                                rules={{required: false}}\n                                defaultValue={defaultValue as unknown as undefined}\n                                onChange={canAddNew ? addNewField : onChange}\n                            />\n                        );\n                    case \"float\":\n                        return (\n                            <NumericField\n                                key={field.id}\n                                label={label}\n                                step={0.1}\n                                required={index < minLength}\n                                name={`${name}.${index}`}\n                                rules={{required: false}}\n                                defaultValue={defaultValue as unknown as undefined}\n                                onChange={canAddNew ? addNewField : onChange}\n                            />\n                        );\n                    case \"job\":\n                        return (\n                            <IdField\n                                key={field.id}\n                                label={label}\n                                type=\"start_job_instance\"\n                                others={others}\n                                required={index < minLength}\n                                name={`${name}.${index}`}\n                                rules={{required: false}}\n                                defaultValue={defaultValue as unknown as undefined}\n                                onChange={canAddNew ? addNewField : onChange}\n                            />\n                        );\n                    case \"scenario\":\n                        return (\n                            <IdField\n                                key={field.id}\n                                label={label}\n                                type=\"start_scenario_instance\"\n                                others={others}\n                                required={index < minLength}\n                                name={`${name}.${index}`}\n                                rules={{required: false}}\n                                defaultValue={defaultValue as unknown as undefined}\n                                onChange={canAddNew ? addNewField : onChange}\n                            />\n                        );\n                    default:\n                        if (choices && choices.length) {\n                            return (\n                                <ChoiceField\n                                    key={field.id}\n                                    label={label}\n                                    choices={choices}\n                                    required={index < minLength}\n                                    name={`${name}.${index}`}\n                                    rules={{required: false}}\n                                    defaultValue={defaultValue as unknown as undefined}\n                                    onChange={canAddNew ? addNewField : onChange}\n                                />\n                            );\n                        }\n                        return (\n                            <StringField\n                                key={field.id}\n                                label={label}\n                                password={password}\n                                required={index < minLength}\n                                name={`${name}.${index}`}\n                                rules={{required: false}}\n                                defaultValue={defaultValue as unknown as undefined}\n                                onChange={canAddNew ? addNewField : onChange}\n                            />\n                        );\n                }\n            })}\n        </React.Fragment>\n    );\n};\n\n\nconst StartJobInstanceParameterField: React.FC<Props> = (props) => {\n    const {index, argument, others, name: suffix, jobName} = props;\n    const {name, count, description, type, default: defaultValue, password, choices, repeatable} = argument;\n    const formName = `functions.${index}.parameters.${jobName}.${suffix}` as const;\n    const {fields, append} = useFieldArray({\n        name: formName,\n        shouldUnregister: false,\n        rules: {minLength: 1, maxLength: repeatable ? undefined : 1},\n    });\n    const {getValues} = useFormContext<Form>();\n\n    const [countLower, countUpper] = React.useMemo(() => {\n        if (!count) {\n            return [0, 0];\n        }\n\n        const c = Math.max(Number(count), 0);\n        if (!isNaN(c)) {\n            return [c, c];\n        } else if (count === \"*\") {\n            return [0, undefined];\n        } else if (count === \"+\") {\n            return [1, undefined];\n        } else {\n            const [lower, upper] = count.split(\"-\");\n            if (!upper) {\n                return [0, 0];\n            }\n\n            return [Math.max(Number(lower), 0), Math.max(Number(upper), 0)].sort();\n        }\n    }, [count]);\n\n    const sensibleDefault = React.useMemo(() => {\n        if (defaultValue) {\n            return defaultValue;\n        }\n\n        switch (type) {\n            case \"None\":\n                return false;\n            case \"job\":\n            case \"scenario\":\n                return [];\n            default:\n                return \"\";\n        }\n    }, [type, defaultValue]);\n\n    const addNewRow = React.useCallback(() => {\n        append([Array.from({length: Math.max(countLower, 1)}, () => sensibleDefault)]);\n    }, [append, countLower, sensibleDefault]);\n\n    React.useEffect(() => {\n        const values = getValues(formName) as TStartJobParameterValue[][];\n        if (!values?.length) {\n            addNewRow();\n        }\n    }, [getValues, formName, addNewRow]);\n\n    return (\n        <React.Fragment>\n            {fields.map((field, index: number) => (\n                <Box key={field.id} display=\"flex\" flexWrap=\"wrap\" gap={0.5} alignItems=\"flex-end\">\n                    <StartJobInstanceParameterRow\n                        name={`${formName}.${index}`}\n                        label={name}\n                        defaultValue={sensibleDefault}\n                        minLength={countLower}\n                        maxLength={countUpper}\n                        type={type}\n                        password={password}\n                        choices={choices}\n                        others={others}\n                        onChange={repeatable && index === fields.length - 1 ? addNewRow : undefined}\n                    />\n                    <Tooltip title={description} placement=\"right\">\n                        <IconButton color=\"primary\" component=\"span\">\n                            <InfoIcon />\n                        </IconButton>\n                    </Tooltip>\n                </Box>\n            ))}\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    index: number;\n    argument: IJobArgument;\n    others: FunctionForm[];\n    name: string;\n    jobName: string;\n}\n\n\ninterface RowProps {\n    name: `functions.${number}.parameters.${string}.${string}.${number}`;\n    label: string;\n    defaultValue: boolean | string | number[];\n    minLength: number;\n    maxLength?: number;\n    type: string;\n    password: boolean;\n    choices?: string[];\n    others: FunctionForm[];\n    onChange?: () => void;\n}\n\n\ninterface Field extends UseControllerProps<Form, `functions.${number}.parameters.${string}.${string}.${number}.${number}`> {\n    label: string;\n    required: boolean;\n    onChange?: () => void;\n}\n\n\ninterface NumericalField extends Field {\n    step: number;\n}\n\n\ninterface PasswordField extends Field {\n    password: boolean;\n}\n\n\ninterface SelectField extends Field {\n    choices: string[];\n}\n\n\ninterface OpenbachFunctionField extends Field {\n    type: \"start_job_instance\" | \"start_scenario_instance\";\n    others: FunctionForm[];\n}\n\n\nexport default StartJobInstanceParameterField;\n","import React from 'react';\nimport {useFormContext, Controller} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport StartJobInstanceParameterField from './StartJobInstanceParameterField';\n\nimport type {\n    IJob, IJobArgument,\n    IJobSubcommand,\n    IJobSubcommandGroup,\n    Form, FunctionForm,\n} from '../../utils/interfaces';\n\n\nconst StartJobInstanceSubcommand: React.FC<Props> = (props) => {\n    const {id, index, job, groups, others, arguments: args} = props;\n    const {watch} = useFormContext<Form>();\n\n    const transform = React.useCallback((argument: IJobArgument) => {\n        const path = groups.map(({selected}) => selected);\n        path.push(argument.name);\n\n        return (\n            <StartJobInstanceParameterField\n                key={`${id}.${argument.name}`}\n                index={index}\n                argument={argument}\n                others={others}\n                jobName={job}\n                name={path.join(\".\")}\n            />\n        );\n    }, [id, index, job, others, groups]);\n\n    const renderSubcommand = React.useCallback((group: IJobSubcommandGroup) => {\n        const {group_name: groupName, choices, optional} = group;\n        const options = choices.map(({name}: IJobSubcommand) => (\n            <MenuItem key={name} value={name}>{name}</MenuItem>\n        ));\n\n        if (optional) {\n            options.unshift(<MenuItem key=\"\" value=\"\" sx={{color: \"silver\"}}><em>Clear Choice</em></MenuItem>);\n        }\n\n        const groupNames = groups.map(({name}) => name).join(\"-\");\n        const groupPath = groups.map(({name, selected}) => `${name}.${selected}`).join(\".\");\n        const selectorName = `functions.${index}.subcommands.${job}.${groupPath}.${groupName}.selected` as const;\n        const selector = (\n            <FormControl key={`${id}.${groupName}`} sx={{minWidth: \"198px\"}}>\n                <InputLabel id={`${id}-sub-${groupNames}-${groupName}-label`}>\n                    {groupName}\n                </InputLabel>\n                <Controller\n                    name={selectorName}\n                    rules={{required: false}}\n                    defaultValue={\"\" as unknown as undefined}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <Select\n                            id={`${id}-sub-${groupNames}-${groupName}-select`}\n                            labelId={`${id}-sub-${groupNames}-${groupName}-label`}\n                            label={groupName}\n                            variant=\"standard\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        >\n                            {options}\n                        </Select>\n                    )}\n                />\n            </FormControl>\n        );\n\n        const selected = watch(selectorName);\n        if (!selected) {\n            return selector;\n        }\n\n        return (\n            <React.Fragment key={groupName}>\n                {selector}\n                <StartJobInstanceSubcommand\n                    id={id}\n                    index={index}\n                    job={job}\n                    arguments={choices.find(({name}: IJobSubcommand) => name === selected)}\n                    groups={[...groups, {name: groupName, selected}]}\n                    others={others}\n                />\n            </React.Fragment>\n        );\n    }, [id, index, job, others, groups, watch]);\n\n    const {required=[], optional=[]} = (args || {});\n    const requiredFields = required.map(transform);\n    const optionalFields = optional.map(transform);\n\n    args?.subcommands?.forEach((group: IJobSubcommandGroup) => {\n        if (group.optional) {\n            optionalFields.push(renderSubcommand(group));\n        } else {\n            requiredFields.push(renderSubcommand(group));\n        }\n    });\n\n    const result = (\n        <React.Fragment>\n            {requiredFields.length > 0 && <h3>Required</h3>}\n            {requiredFields}\n            {optionalFields.length > 0 && <h3>Optional</h3>}\n            {optionalFields}\n        </React.Fragment>\n    );\n\n    if (groups.length > 0) {\n        return <Box ml={2}>{result}</Box>;\n    }\n\n    return result;\n};\n\n\ninterface Props {\n    id: string;\n    index: number;\n    job: string;\n    arguments?: IJob['arguments'];\n    groups: {name: string; selected: string;}[];\n    others: FunctionForm[];\n}\n\n\nexport default StartJobInstanceSubcommand;\n","import React from 'react';\n\nimport StartJobInstanceSubcommand from './StartJobInstanceSubcommand';\n\nimport type {IJob, FunctionForm} from '../../utils/interfaces';\n\n\nconst StartJobInstanceParameters: React.FC<Props> = (props) => {\n    const {id, index, job, others} = props;\n\n    if (!job) {\n        return null;\n    }\n\n    if (typeof job === 'string') {\n        return <h3>Selected Job {job} not found</h3>;\n    }\n\n    const {arguments: args, general: {name}} = job;\n    if (!(args?.required?.length || args?.optional?.length || args?.subcommands?.length)) {\n        return <h3>No arguments for Job {name}</h3>;\n    }\n\n    return (\n        <StartJobInstanceSubcommand\n            id={id}\n            index={index}\n            job={name}\n            arguments={args}\n            groups={[]}\n            others={others}\n        />\n    );\n};\n\n\ninterface Props {\n    id: string;\n    index: number;\n    job?: string | IJob;\n    others: FunctionForm[];\n}\n\n\nexport default StartJobInstanceParameters;\n","import React from 'react';\nimport {useController} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport  Present from '@mui/icons-material/Check';\nimport Absent from '@mui/icons-material/Close';\nimport {red, green, grey} from '@mui/material/colors';\n\nimport NumberField from '../common/NumberField';\nimport JobParameters from './StartJobInstanceParameters';\n\nimport {getJobs} from '../../api/agents';\nimport {useDispatch, useSelector} from '../../redux';\nimport type {IJob, IEntity, FunctionForm} from '../../utils/interfaces';\n\n\nconst StartJobInstance: React.FC<Props> = (props) => {\n    const {id, index, others} = props;\n    // const {entity, offset, interval, job, parameters, subcommands} = current;\n    const dispatch = useDispatch();\n    const jobs = useSelector((state) => state.openbach.jobs);\n    const entities = useSelector((state) => state.project.current?.entity);\n    const {field: entity} = useController({\n        name: `functions.${index}.entity`,\n        rules: {required: false},\n        defaultValue: \"\",\n    });\n    const {field: job} = useController({\n        name: `functions.${index}.job`,\n        rules: {required: false},\n        defaultValue: \"\",\n    });\n    const [availableJobs, storeAvailableJobs] = React.useState<string[]>([]);\n\n    const jobsOnAgent = React.useMemo(() => {\n        const jobsAvailable = Object.fromEntries(jobs!.map((j: IJob) => ([j.general.name, false])));\n        availableJobs.forEach((job: string) => {jobsAvailable[job] = true;});\n        return jobsAvailable;\n    }, [jobs, availableJobs]);\n\n    React.useEffect(() => {\n        if (entity.value && entities) {\n            const e = entities.find((e: IEntity) => e.name === entity.value);\n            if (e && e.agent) {\n                const {address} = e.agent;\n                const promise = dispatch(getJobs({address}));\n                promise.unwrap().then((payload) => {\n                    storeAvailableJobs(payload);\n                });\n                return () => {promise.abort();};\n            }\n        }\n        storeAvailableJobs([]);\n    }, [entity.value, entities, dispatch]);\n\n    const selectedJob = jobs?.find(({general: {name}}: IJob) => name === job.value);\n\n    return (\n        <React.Fragment>\n            <h3>Starting Job</h3>\n            <Box display=\"flex\" gap=\"6%\">\n                <FormControl sx={{width: \"47%\"}}>\n                    <InputLabel id={`${id}-entity-label`}>\n                        Entity Name\n                    </InputLabel>\n                    <Select\n                        id={`${id}-entity-select`}\n                        labelId={`${id}-entity-label`}\n                        label=\"Entity Name\"\n                        variant=\"standard\"\n                        onChange={entity.onChange}\n                        onBlur={entity.onBlur}\n                        value={entity.value}\n                        inputRef={entity.ref}\n                        fullWidth\n                    >\n                        {entities?.map(({name}: IEntity) => (\n                            <MenuItem key={name} value={name}>{name}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl sx={{width: \"47%\"}}>\n                    <InputLabel id={`${id}-job-label`}>\n                        Job\n                    </InputLabel>\n                    <Select\n                        id={`${id}-job-select`}\n                        labelId={`${id}-job-label`}\n                        label=\"Job\"\n                        variant=\"standard\"\n                        onChange={job.onChange}\n                        onBlur={job.onBlur}\n                        value={job.value}\n                        inputRef={job.ref}\n                        renderValue={(value) => <span>{value}</span>}\n                        fullWidth\n                    >\n                        {jobs?.map(({general: {name}}: IJob) => (\n                            <MenuItem\n                                key={name}\n                                value={name}\n                                sx={{color: jobsOnAgent[name] ? \"inherit\" : grey[500]}}\n                            >\n                                <ListItemIcon>\n                                    {jobsOnAgent[name]\n                                    ? <Present sx={{color: green[500]}} />\n                                    : <Absent sx={{color: red[500]}} />}\n                                </ListItemIcon>\n                                <ListItemText>{name}</ListItemText>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </Box>\n            <div>\n                <Box component=\"p\" display=\"inline\" mr=\"10px\">\n                    Optionally, the agent will run the job after\n                </Box>\n                <NumberField\n                    variant=\"standard\"\n                    label=\"Offset\"\n                    sx={{verticalAlign: \"baseline\"}}\n                    step={0.1}\n                    name={`functions.${index}.offset`}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                />\n                <Box component=\"p\" display=\"inline\" mx=\"10px\">\n                    seconds when the function is started. It will also\n                    reschedule it every\n                </Box>\n                <NumberField\n                    variant=\"standard\"\n                    label=\"Interval\"\n                    sx={{verticalAlign: \"baseline\"}}\n                    step={0.1}\n                    name={`functions.${index}.interval`}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                />\n                <Box component=\"p\" display=\"inline\" ml=\"10px\">\n                    seconds after the beginning of its first run.\n                </Box>\n            </div>\n            <Divider sx={{my: 1}} />\n            <JobParameters\n                id={id}\n                index={index}\n                job={selectedJob || job.value}\n                others={others}\n            />\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    id: string;\n    index: number;\n    others: FunctionForm[];\n}\n\n\nexport default StartJobInstance;\n","import React from 'react';\nimport {useController} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport type {FunctionForm} from '../../utils/interfaces';\nimport type {SelectChangeEvent} from '@mui/material/Select';\n\n\nconst StopJobInstance: React.FC<Props> = (props) => {\n    const {id, index, others} = props;\n    const {field: {onChange, onBlur, value, ref}} = useController({\n        name: `functions.${index}.jobs`,\n        rules: {required: false},\n        defaultValue: [],\n    });\n\n    const handleChange = React.useCallback((event: SelectChangeEvent<number[]>) => {\n        const {value} = event.target;\n        onChange(typeof value === 'string' ? [] : value);\n    }, [onChange]);\n\n    return (\n        <React.Fragment>\n            <h3>Stopping Jobs</h3>\n            <FormControl size=\"small\" sx={{width: \"100%\"}}>\n                <InputLabel id={`${id}-scenario-id-label`}>\n                    Jobs\n                </InputLabel>\n                <Select\n                    id={`${id}-scenario-id-select`}\n                    labelId={`${id}-scenario-id-label`}\n                    label=\"Jobs\"\n                    variant=\"standard\"\n                    value={value}\n                    onChange={handleChange}\n                    onBlur={onBlur}\n                    inputRef={ref}\n                    fullWidth\n                    multiple\n                    renderValue={(values: number[]) => (\n                        <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n                            {values.map((value: number) => (\n                                <Chip key={value} label={others.find((f: FunctionForm) => f.id === value)?.label} />\n                            ))}\n                        </Box>\n                    )}\n                >\n                    {others.filter(\n                        (f: FunctionForm) => f.kind === \"start_job_instance\"\n                    ).map(({id, label}: FunctionForm) => (\n                        <MenuItem key={id} value={id}>{label}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    id: string;\n    index: number;\n    others: FunctionForm[];\n}\n\n\nexport default StopJobInstance;\n","import React from 'react';\nimport {useController, Controller} from 'react-hook-form';\n\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nimport type {IScenario} from '../../utils/interfaces';\n\n\nconst StartScenarioInstance: React.FC<Props> = (props) => {\n    const {id, index, scenarios} = props;\n    const {field: {onChange, onBlur, value, ref}} = useController({\n        name: `functions.${index}.scenario`,\n        rules: {required: false},\n        defaultValue: \"\",\n    });\n\n    const scenario = scenarios.find((s: IScenario) => s.name === value);\n\n    return (\n        <React.Fragment>\n            <h3>Starting Scenario</h3>\n            <FormControl sx={{width: \"100%\"}}>\n                <InputLabel id={`${id}-scenario-label`}>\n                    Scenario\n                </InputLabel>\n                <Select\n                    id={`${id}-scenario-select`}\n                    labelId={`${id}-scenario-label`}\n                    label=\"Scenario\"\n                    variant=\"standard\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                    inputRef={ref}\n                    fullWidth\n                >\n                    {scenarios.map(({name}: IScenario) => (\n                        <MenuItem key={name} value={name}>{name}</MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            {scenario && Object.entries(scenario.arguments || {}).map(([argument, description]) => (\n                <Controller\n                    name={`functions.${index}.scenarioArguments.${value}.${argument}`}\n                    rules={{required: false}}\n                    defaultValue={\"\" as unknown as undefined}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            key={`${id}.scenarioArguments.${value}.${argument}`}\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label={argument}\n                            helperText={description}\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n            ))}\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    id: string;\n    index: number;\n    scenarios: IScenario[];\n}\n\n\nexport default StartScenarioInstance;\n","import React from 'react';\nimport {Controller} from 'react-hook-form';\n\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport type {FunctionForm} from '../../utils/interfaces';\n\n\nconst StopScenarioInstance: React.FC<Props> = (props) => {\n    const {id, index, others} = props;\n\n    return (\n        <React.Fragment>\n            <h3>Stopping Scenario</h3>\n            <FormControl sx={{width: \"100%\"}}>\n                <InputLabel id={`${id}-scenario-id-label`}>\n                    Scenario\n                </InputLabel>\n                <Controller\n                    name={`functions.${index}.scenarioId`}\n                    rules={{required: false}}\n                    defaultValue={NaN}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <Select\n                            id={`${id}-scenario-id-select`}\n                            labelId={`${id}-scenario-id-label`}\n                            label=\"Scenario\"\n                            variant=\"standard\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        >\n                            {others.filter(\n                                (f: FunctionForm) => f.kind === \"start_scenario_instance\"\n                            ).map(({id, label}: FunctionForm) => (\n                                <MenuItem key={id} value={id}>{label}</MenuItem>\n                            ))}\n                        </Select>\n                    )}\n                />\n            </FormControl>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    id: string;\n    index: number;\n    others: FunctionForm[];\n}\n\n\nexport default StopScenarioInstance;\n","import React from 'react';\nimport {useController} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport type {IOpenbachFunctionWait, Form, FunctionForm} from '../../utils/interfaces';\nimport type {SelectChangeEvent} from '@mui/material/Select';\nimport type {UseControllerProps} from 'react-hook-form';\n\n\nconst WaitFor: React.FC<Props & UseControllerProps<Form, `functions.${number}.wait.${keyof Omit<IOpenbachFunctionWait, 'time'>}`>> = (props) => {\n    const {awaitables, label, ...controllerProps} = props;\n    const {field: {onChange, onBlur, value, ref}} = useController(controllerProps);\n\n    const handleChange = React.useCallback((event: SelectChangeEvent<number[]>) => {\n        const {value} = event.target;\n        onChange(typeof value === 'string' ? [] : value);\n    }, [onChange]);\n\n    return (\n        <FormControl size=\"small\" sx={{display: \"flex\", mx: 2, gap: 2, flexDirection: \"row\", alignItems: \"center\"}}>\n            <Select\n                value={value}\n                onChange={handleChange}\n                onBlur={onBlur}\n                inputRef={ref}\n                fullWidth\n                multiple\n                renderValue={(values: number[]) => (\n                    <Box sx={{display: 'flex', flexWrap: 'wrap', gap: 0.5}}>\n                        {values.map((value: number) => (\n                            <Chip key={value} label={awaitables.find((f: FunctionForm) => f.id === value)?.label} />\n                        ))}\n                    </Box>\n                )}\n                sx={{width: \"70%\"}}\n            >\n                {awaitables.map(({id, label}: FunctionForm) => (\n                    <MenuItem key={id} value={id}>{label}</MenuItem>\n                ))}\n            </Select>\n            <p>{label}</p>\n        </FormControl>\n    );\n};\n\n\ninterface Props {\n    awaitables: FunctionForm[];\n    label: string;\n}\n\n\nexport default WaitFor;\n","export interface ICredentials {\n    username: string;\n    name: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    is_user: boolean;\n    is_admin: boolean;\n    favorites: {[project: string]: string[]};\n}\n\n\nexport interface ILog {\n    id: string;\n    timestamp: number;\n    severity: string;\n    source: string;\n    message: string;\n    checked: boolean;\n}\n\n\nexport interface IProfilePermissions {\n    login: string;\n    active: boolean;\n    admin: boolean;\n}\n\n\nexport interface IAgent {\n    // unique key\n    address: string;\n    name: string;\n    collector_ip: string;\n    reserved?: string;\n    username?: string;\n    password?: string;\n    status?: string;\n    reachable?: boolean;\n    available?: boolean;\n    project?: string;\n    errors?: {msg: string}[];\n    services?: {[serviceName: string]: string};\n}\n\n\nexport type ICollector = Pick<IAgent, \"address\">;\n\n\nexport interface IAgentState {\n    assign_collector: IAgentStateEntry,\n    install: IAgentStateEntry,\n    retrieve_status_jobs: IAgentStateEntry,\n    uninstall: IAgentStateEntry,\n}\n\n\nexport interface IAgentStateEntry {\n    last_operation_date: string,\n    response: any,\n    returncode: number,\n}\n\n\nexport interface IJob {\n    general: {\n        name: string;\n        description: string;\n        keywords: string[];\n        job_version: string;\n    };\n    arguments: {\n        required: IJobArgument[];\n        optional: IJobArgument[];\n        subcommands?: IJobSubcommandGroup[];\n    };\n}\n\n\nexport interface IJobArgument {\n    name: string;\n    count: string;\n    description: string;\n    type: \"ip\" | \"int\" | \"str\" | \"float\" | \"None\" | \"job\" | \"scenario\";\n    password: boolean;\n    default?: string;\n    choices?: string[];\n    repeatable?: boolean;\n}\n\n\nexport interface IJobSubcommand {\n    name: string;\n    required: IJobArgument[];\n    optional: IJobArgument[];\n    subcommands?: IJobSubcommandGroup[];\n}\n\n\nexport interface IJobSubcommandGroup {\n    group_name: string;\n    optional: boolean;\n    choices: IJobSubcommand[];\n}\n\n\nexport interface IExternalJobInfos {\n    name: string;\n    display: string;\n    version: string;\n}\n\n\nexport interface IJobAgentsList {\n    job_name: string;\n    installed_on: {agent__name: string, agent__address: string}[];\n}\n\n\nexport interface IJobState {\n    install: IJobStateStatus,\n    uninstall: IJobStateStatus,\n    stat_policy: IJobStateStatus,\n    log_severity: IJobStateStatus,\n}\n\n\nexport interface IJobStateStatus {\n    last_operation_date: string;\n    returncode: number;\n    response: any;\n}\n\n\nexport interface IProject {\n    name: string;\n    description: string;\n    entity: IEntity[];\n    network: INetwork[];\n    hidden_network: string[];\n    scenario: IScenario[];\n    owners: string[];\n    reserved_agents?: string[];\n}\n\n\nexport interface IEntity {\n    name: string;\n    description: string;\n    agent?: IAgent;\n    networks?: INetwork[];\n}\n\n\nexport interface INetwork {\n    name: string;\n    address: string;\n    interface?: string;\n    ip?: string;\n}\n\n\nexport interface IScenario {\n    name: string;\n    description: string;\n    arguments: {[name: string]: string;};\n    constants: {[name: string]: string;};\n    openbach_functions: IOpenbachFunction[];\n}\n\n\nexport interface IOpenbachFunction {\n    id: number;\n    label: string;\n    on_fail: IOpenbachFunctionFailPolicy;\n    wait: IOpenbachFunctionWait;\n}\n\n\nexport interface IOpenbachFunctionWait {\n    time?: number | string;\n    running_ids: number[];\n    ended_ids: number[];\n    launched_ids: number[];\n    finished_ids: number[];\n}\n\n\nexport interface IOpenbachFunctionFailPolicy {\n    policy: string;\n    delay?: number | string;\n    retry?: number | string;\n}\n\n\nexport interface IOpenbachFunctionStartJobInstance extends IOpenbachFunction {\n    start_job_instance: IStartJobInstance;\n}\n\n\nexport interface IOpenbachFunctionStopJobInstance extends IOpenbachFunction {\n    stop_job_instances: IStopJobInstance;\n}\n\n\nexport interface IOpenbachFunctionStartScenario extends IOpenbachFunction {\n    start_scenario_instance: IStartScenarioInstance;\n}\n\n\nexport interface IOpenbachFunctionStopScenario extends IOpenbachFunction {\n    stop_scenario_instance: IStopScenarioInstance;\n}\n\n\nexport interface IStartScenarioInstance {\n    scenario_name: string;\n    arguments: {[argumentName: string]: string};\n}\n\n\nexport interface IStopScenarioInstance {\n    openbach_function_id: number;\n}\n\n\nexport interface IStopJobInstance {\n    openbach_function_ids: number[];\n}\n\n\nexport interface IStartJobInstance {\n    entity_name: string;\n    offset?: number;\n    interval?: number;\n    // If we want to use \"index signature\" and keep\n    // entity_name and offset out of the way, we must\n    // declare the return type of the index as a\n    // superset of the types returned by other properties\n    [name: string]: string | number | undefined | IStartJobParameters;\n}\n\n\nexport interface IStartJobParameters {\n    [parameterName: string]: TStartJobParameterValue[][] | IStartJobParameters;\n}\n\n\nexport type TStartJobParameterValue = number[] | string | number | boolean;\n\n\nexport type TOpenbachFunction = \"start_job_instance\" | \"start_scenario_instance\" | \"openbach_function\" | \"argument\";\nexport type TOpenbachFunctionInstanceStatus = \"Scheduled\" | \"Running\" | \"Finished\" | \"Stopped\" | \"Error\" | \"Retried\";\nexport type TJobInstanceStatus = \"Not Scheduled\" | \"Scheduled\" | \"Running\" | \"Not Running\" | \"Error\" | \"Stopped\" | \"Agent Unreachable\";\nexport type TScenarioInstanceStatus = \"Scheduling\" | \"Running\" | \"Finished Ok\" | \"Finished Ko\" | \"Stopped\" | \"Agents Unreachable\";\n\n\nexport interface IScenarioInstance {\n    arguments: {name: string; value: string;}[];\n    openbach_functions: IOpenbachFunctionInstance[];\n    owner_scenario_instance_id: number;\n    project_name: string;\n    scenario_instance_id: number;\n    scenario_name: string;\n    status: TScenarioInstanceStatus;\n    start_date: string;\n    stop_date: string;\n    sub_scenario_instance_ids: number[];\n}\n\n\nexport interface IOpenbachFunctionInstance {\n    id: number;\n    label: string;\n    status: TOpenbachFunctionInstanceStatus;\n    launch_date: Date;\n    wait: IOpenbachFunctionWait;\n}\n\n\nexport interface IJobInstance {\n    id: number;\n    name: string;\n    agent: string;\n    entity: string;\n    status: TJobInstanceStatus;\n    start_date: string;\n    stop_date: string;\n}\n\n\nexport interface IOpenbachFunctionInstanceStartJobInstance extends IOpenbachFunctionInstance {\n    job: IJobInstance;\n    start_job_instance: IStartJobInstance;\n}\n\n\nexport interface IOpenbachFunctionInstanceStartScenarioInstance extends IOpenbachFunctionInstance {\n    scenario: IScenarioInstance;\n    start_scenario_instance: IStartScenarioInstance;\n}\n\n\nexport interface IOpenbachFunctionInstanceStopJobInstances extends IOpenbachFunctionInstance {\n    stop_job_instances: IStopJobInstance;\n}\n\n\nexport interface IOpenbachFunctionInstanceStopScenarioInstance extends IOpenbachFunctionInstance {\n    stop_scenario_instance: IStopScenarioInstance;\n}\n\n\nexport interface IFilesCount {\n    [jobName: string]: {[statName: string]: number};\n}\n\n\nexport interface IChronografStatistic {\n    jobAgent: string;\n    jobName: string;\n    jobId: number;\n    statName: string;\n    unit: string;\n}\n\n\nexport interface Form {\n    description: string;\n    arguments: ArgumentForm[];\n    constants: ConstantForm[];\n    functions: FunctionForm[];\n}\n\n\nexport interface ArgumentForm {\n    name: string;\n    description: string;\n}\n\n\nexport interface ConstantForm {\n    name: string;\n    value: string;\n}\n\n\nexport interface FunctionForm {\n    id: number;\n    label?: string;\n    kind?: OpenbachFunctionType;\n    wait?: IOpenbachFunctionWait;\n    on_fail?: IOpenbachFunctionFailPolicy;\n    entity?: string;\n    offset?: number;\n    interval?: number;\n    job?: string;\n    jobs?: number[];\n    scenario?: string;\n    scenarioId?: number;\n    scenarioArguments?: ScenarioParameters;\n    parameters: OpenbachFunctionBackup | JobParameters;\n    subcommands?: JobSubcommandForm;\n}\n\n\ninterface ScenarioParameters {\n    [scenarioName: string]: {[argumentName: string]: string;};\n}\n\n\nexport interface JobParameters {\n    [jobName: string]: IStartJobParameters;\n}\n\n\nexport interface OpenbachFunctionBackup {\n    backup: IOpenbachFunction;\n}\n\n\ninterface JobSubcommandForm {\n    [jobName: string]: SubcommandForm;\n}\n\n\nexport interface SubcommandForm {\n    [groupName: string]: SubcommandContent;\n}\n\n\nexport interface SubcommandContent {\n    selected?: string;\n    [groupValue: string]: string | SubcommandForm | undefined;\n}\n\n\nexport const OpenbachFunctionsList = [\n    \"start_job_instance\",\n    \"stop_job_instances\",\n    \"start_scenario_instance\",\n    \"stop_scenario_instance\",\n] as const;\nexport declare type OpenbachFunctionType = typeof OpenbachFunctionsList[number];\n","import React from 'react';\nimport {useFormContext, useFieldArray, Controller} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Paper from '@mui/material/Paper';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nimport Add from '@mui/icons-material/Add';\n\nimport DeleteIcon from '../common/DeleteIcon';\nimport ListItem from '../common/NestedListItem';\nimport NumberField from '../common/NumberField';\nimport StartJobInstance from './StartJobInstance';\nimport StopJobInstance from './StopJobInstance';\nimport StartScenarioInstance from './StartScenarioInstance';\nimport StopScenarioInstance from './StopScenarioInstance';\nimport WaitFor from './WaitFor';\n\nimport {useSelector} from '../../redux';\nimport {OpenbachFunctionsList} from '../../utils/interfaces';\nimport {idToLabel} from '../../utils/openbach-functions';\nimport type {IScenario, Form, FunctionForm, OpenbachFunctionType} from '../../utils/interfaces';\n\n\nconst mainLabel = (form: FunctionForm, others: FunctionForm[]): string => {\n    const {\n        label, kind, jobs, scenarioId,\n        job=\"no job configured\",\n        entity=\"unkonwn entity\",\n        scenario=\"no scenario configured\",\n    } = form;\n    const labeled = label ? `[${label}] ` : \"\";\n    switch (kind) {\n        case undefined:\n        case \"\" as unknown as undefined:\n            return labeled + \"Not selected yet\";\n        case \"start_job_instance\":\n            return labeled + \"Start Job Instance: \" + job + \" on \" + entity;\n        case \"stop_job_instances\":\n            if (!jobs || !jobs.length) {\n                return labeled + \"Stop Job Instance\";\n            }\n            const ending = jobs.length > 1 ? \"s: \" : \": \";\n            const stopped = jobs.map((id: number) => idToLabel(id, others)).join(\", \");\n            return labeled + \"Stop Job Instance\" + ending + stopped;\n        case \"start_scenario_instance\":\n            return labeled + \"Start Scenario Instance: \" + scenario;\n        case \"stop_scenario_instance\":\n            const id = scenarioId == null ? \"no scenario configured\" : idToLabel(scenarioId, others);\n            return labeled + \"Stop Scenario Instance: \" + id;\n        default:\n            return labeled + \"Uneditable OpenBach Function: \" + kind;\n    }\n};\n\n\nconst dependenciesLabel = ({wait}: FunctionForm, others: FunctionForm[]): string => {\n    if (!wait) {\n        return \"Started immediately\";\n    }\n\n    const dependencyString = (label: string, ids: number[]): string => {\n        if (!ids || !ids.length) {\n            return \"\";\n        }\n\n        const waited = ids.map((id: number) => idToLabel(id, others));\n        const length = waited.length;\n        if (length > 1) {\n            waited[length - 1] = \"and \" + waited[length - 1];\n        }\n        return `${waited.join(length > 2 ? \", \" : \" \")} ${length > 1 ? \"are\" : \"is\"} ${label}`;\n    };\n\n    const {time, running_ids, ended_ids, launched_ids, finished_ids} = wait;\n    const timeString = time ? `${time} seconds` : \"immediately\";\n    const schedules = [\n        dependencyString(\"running\", running_ids),\n        dependencyString(\"ended\", ended_ids),\n        dependencyString(\"started\", launched_ids),\n        dependencyString(\"finished\", finished_ids),\n    ].filter((s: string) => Boolean(s));\n\n    const l = schedules.length;\n    if (!l) {\n        return `Started ${timeString} in`;\n    } else {\n        if (l > 1) {\n            schedules[l - 1] = \"and \" + schedules[l - 1];\n        }\n        return \"Started \" + timeString + \" after \" + schedules.join(l > 2 ? \", \" : \" \");\n    }\n};\n\n\nconst ScenarioFunctions: React.FC<Props> = (props) => {\n    const {scenario} = props;\n    const project = useSelector((state) => state.project.current);\n    const {getValues} = useFormContext<Form>();\n    const {fields, append, remove} = useFieldArray({name: \"functions\"});\n    const [, forceRefresh] = React.useState<object>({});\n\n    const otherScenarios = React.useMemo(() => {\n        if (!project) {\n            return [];\n        }\n\n        return project.scenario.filter((s: IScenario) => s.name !== scenario);\n    }, [scenario, project]);\n\n    const handleFunctionAdd = React.useCallback(() => {\n        const id = parseInt(\"xxxxxxxx\".replace(/[x]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === \"x\" ? r : ((r & 0x3) | 0x8);\n            return v.toString(16);\n        }), 16);\n        append({id, parameters: {}});\n    }, [append]);\n\n    const handleFunctionRemove = React.useCallback((index: number) => () => {\n        remove(index);\n    }, [remove]);\n\n    const refresh = React.useCallback(() => {\n        forceRefresh({});\n    }, []);\n\n    const functions = getValues(\"functions\");\n\n    return (\n        <React.Fragment>\n            {functions?.length > 0 && fields.map((field, index: number) => {\n                const field_id = field.id;\n                const f = functions[index]\n                console.log(f);\n                const others = functions.filter((other: FunctionForm, i: number) => other.label && index !== i);\n\n                return (\n                    <ListItem\n                        key={field_id}\n                        leftIcon={<DeleteIcon title=\"Delete this OpenBACH function\" />}\n                        onLeftClick={handleFunctionRemove(index)}\n                        primary={mainLabel(f, others)}\n                        secondary={dependenciesLabel(f, others)}\n                        nestedItems={<Paper sx={{px: \"2%\", py: 2}}>\n                            <Box display=\"flex\" gap=\"2%\" alignItems=\"top\">\n                                <Box width=\"32%\">\n                                    <Controller\n                                        name={`functions.${index}.label`}\n                                        rules={{required: false}}\n                                        defaultValue=\"\"\n                                        render={({field: {onChange, onBlur, value, ref}}) => (\n                                            <TextField\n                                                margin=\"dense\"\n                                                variant=\"standard\"\n                                                label=\"Label\"\n                                                onChange={onChange}\n                                                onBlur={onBlur}\n                                                value={value}\n                                                inputRef={ref}\n                                                fullWidth\n                                            />\n                                        )}\n                                    />\n                                </Box>\n                                <Box width=\"32%\">\n                                    <FormControl sx={{mt: 1, width: \"100%\"}}>\n                                        <InputLabel id={`${field_id}-fail-label`} sx={{mt: 1}}>\n                                            Fail Policy\n                                        </InputLabel>\n                                        <Controller\n                                            name={`functions.${index}.on_fail.policy`}\n                                            rules={{required: false}}\n                                            defaultValue=\"\"\n                                            render={({field: {onChange, onBlur, value, ref}}) => (\n                                                <Select\n                                                    id={`${field_id}-fail-select`}\n                                                    labelId={`${field_id}-fail-label`}\n                                                    label=\"Fail Policy\"\n                                                    variant=\"standard\"\n                                                    onChange={onChange}\n                                                    onBlur={onBlur}\n                                                    value={value}\n                                                    inputRef={ref}\n                                                    fullWidth\n                                                >\n                                                    <MenuItem value=\"Fail\">Fail</MenuItem>\n                                                    <MenuItem value=\"Ignore\">Ignore</MenuItem>\n                                                    <MenuItem value=\"Retry\">Retry</MenuItem>\n                                                </Select>\n                                            )}\n                                        />\n                                    </FormControl>\n                                    {f.on_fail?.policy === \"Retry\" && (<NumberField\n                                        variant=\"standard\"\n                                        label=\"Retry Limit\"\n                                        fullWidth\n                                        name={`functions.${index}.on_fail.retry`}\n                                        rules={{required: false}}\n                                        defaultValue=\"\"\n                                    />)}\n                                    {f.on_fail?.policy === \"Retry\" && (<NumberField\n                                        variant=\"standard\"\n                                        label=\"Retry Delay\"\n                                        fullWidth\n                                        step={0.1}\n                                        name={`functions.${index}.on_fail.delay`}\n                                        rules={{required: false}}\n                                        defaultValue=\"\"\n                                    />)}\n                                </Box>\n                                <FormControl sx={{width: \"32%\", mt: 1}}>\n                                    <InputLabel id={`${field_id}-kind-label`} sx={{mt: 1}}>\n                                        Openbach Function\n                                    </InputLabel>\n                                    <Controller\n                                        name={`functions.${index}.kind`}\n                                        rules={{required: true}}\n                                        defaultValue={\"\" as unknown as undefined}\n                                        render={({field: {onChange, onBlur, value, ref}}) => (\n                                            <Select\n                                                id={`${field_id}-kind-select`}\n                                                labelId={`${field_id}-kind-label`}\n                                                label=\"Openbach Function\"\n                                                variant=\"standard\"\n                                                onChange={(e) => {onChange(e); refresh();}}\n                                                onBlur={onBlur}\n                                                value={value}\n                                                inputRef={ref}\n                                                fullWidth\n                                            >\n                                                {OpenbachFunctionsList.map((label: OpenbachFunctionType) => (\n                                                    <MenuItem key={label} value={label}>{label}</MenuItem>\n                                                ))}\n                                            </Select>\n                                        )}\n                                    />\n                                </FormControl>\n                            </Box>\n                            <Box>\n                                <Box component=\"p\" display=\"inline\" mr=\"10px\">\n                                    The controller will start this function\n                                </Box>\n                                <NumberField\n                                    variant=\"standard\"\n                                    label=\"Waiting Time\"\n                                    sx={{verticalAlign: \"baseline\"}}\n                                    step={0.1}\n                                    name={`functions.${index}.wait.time`}\n                                    rules={{required: false}}\n                                    defaultValue=\"\"\n                                />\n                                <Box component=\"p\" display=\"inline\" ml=\"10px\">\n                                    seconds after\n                                </Box>\n                            </Box>\n                            <Box mt=\"5px\" mb=\"15px\">\n                                <WaitFor\n                                    awaitables={others}\n                                    label=\"openbach functions are first running and\"\n                                    name={`functions.${index}.wait.running_ids`}\n                                    rules={{required: false}}\n                                    defaultValue={[]}\n                                />\n                                <WaitFor\n                                    awaitables={others}\n                                    label=\"openbach functions are ended and\"\n                                    name={`functions.${index}.wait.ended_ids`}\n                                    rules={{required: false}}\n                                    defaultValue={[]}\n                                />\n                                <WaitFor\n                                    awaitables={others}\n                                    label=\"jobs/scenarios are started and\"\n                                    name={`functions.${index}.wait.launched_ids`}\n                                    rules={{required: false}}\n                                    defaultValue={[]}\n                                />\n                                <WaitFor\n                                    awaitables={others}\n                                    label=\"jobs/scenarios are finished.\"\n                                    name={`functions.${index}.wait.finished_ids`}\n                                    rules={{required: false}}\n                                    defaultValue={[]}\n                                />\n                            </Box>\n                            <Divider sx={{my: 1}} />\n                            {f.kind == null && <Box component=\"h3\">Unselected Openbach Function</Box>}\n                            {!OpenbachFunctionsList.includes(f.kind!) && <Box component=\"h3\">{f.kind}</Box>}\n                            {f.kind === \"start_job_instance\" && <StartJobInstance\n                                id={field_id}\n                                index={index}\n                                others={others}\n                            />}\n                            {f.kind === \"stop_job_instances\" && <StopJobInstance\n                                id={field_id}\n                                index={index}\n                                others={others}\n                            />}\n                            {f.kind === \"start_scenario_instance\" && <StartScenarioInstance\n                                id={field_id}\n                                index={index}\n                                scenarios={otherScenarios}\n                            />}\n                            {f.kind === \"stop_scenario_instance\" && <StopScenarioInstance\n                                id={field_id}\n                                index={index}\n                                others={others}\n                            />}\n                        </Paper>}\n                    />\n                );\n            })}\n            <ListItemButton onClick={handleFunctionAdd}>\n                <ListItemIcon><Add /></ListItemIcon>\n                <ListItemText primary=\"Add new OpenBACH function\" />\n            </ListItemButton>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    scenario: string;\n}\n\n\nexport default ScenarioFunctions;\n","import React from 'react';\nimport {useForm, Controller, FormProvider} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport List from '@mui/material/List';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\n\nimport DownloadButton from '../common/DownloadButton';\nimport JsonEditor from '../common/JsonEditor';\nimport ScenarioArguments from './ScenarioArguments';\nimport ScenarioConstants from './ScenarioConstants';\nimport ScenarioFunctions from './ScenarioFunctions';\nimport ScenarioLaunchDialog from '../Scenarios/ScenarioLaunchDialog';\n\nimport {favoriteScenario, updateScenario, saveScenario} from '../../api/scenarios';\nimport {useDispatch, useSelector} from '../../redux';\nimport type {IScenario, Form} from '../../utils/interfaces';\n\n\nconst ScenarioBuilder: React.FC<Props> = (props) => {\n    const {project, scenario: name} = props;\n    const favorites = useSelector((state) => state.login.favorites);\n    const scenario = useSelector((state) => state.form[name]);\n    const dispatch = useDispatch();\n    const methods = useForm<Form>({mode: 'onBlur'});\n    const {handleSubmit, reset, formState: {isValid, isDirty}} = methods;\n    const [launch, storeLaunch] = React.useState<boolean>(false);\n\n    const favorite = React.useMemo(() => {\n        return Boolean(favorites[project]?.includes(name));\n    }, [project, name, favorites]);\n\n    const handleOpen = React.useCallback(() => {\n        storeLaunch(true);\n    }, []);\n\n    const handleClose = React.useCallback(() => {\n        storeLaunch(false);\n    }, []);\n\n    const handleFavoriteChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        const favorite = event.target.checked;\n        dispatch(favoriteScenario({project, scenario: name, favorite}));\n        \n    }, [project, name, dispatch]);\n\n    const handleScenarioUpdate = React.useCallback((json: string) => {\n        const update = JSON.parse(json) as IScenario;\n        dispatch(updateScenario({project, scenario: update}));\n    }, [project, dispatch]);\n\n    const onSubmit = React.useCallback((data: Form) => {\n        dispatch(saveScenario({project, name, form: data}));\n    }, [project, name, dispatch]);\n\n    React.useEffect(() => {\n        if (scenario) {\n            reset(scenario.form);\n        }\n    }, [scenario, reset]);\n\n    if (!scenario) {\n        return (\n            <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n                <CircularProgress />\n                <p>Loading jobs, please wait!</p>\n            </Box>\n        );\n    }\n\n    const {form: {arguments: args}} = scenario;\n\n    return (\n        <React.Fragment>\n            <FormProvider {...methods}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Box m=\"0px 8px\">\n                        <Controller\n                            name=\"description\"\n                            rules={{required: false}}\n                            defaultValue=\"\"\n                            render={({field: {onChange, onBlur, value, ref}}) => (\n                                <TextField\n                                    margin=\"dense\"\n                                    variant=\"standard\"\n                                    label=\"Description\"\n                                    onChange={onChange}\n                                    onBlur={onBlur}\n                                    value={value}\n                                    inputRef={ref}\n                                    fullWidth\n                                    multiline\n                                />\n                            )}\n                        />\n                        <Box display=\"flex\" gap=\"8px\" m=\"30px 0\" justifyContent=\"center\">\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={<Switch\n                                        checked={favorite}\n                                        onChange={handleFavoriteChange}\n                                    />}\n                                    label=\"Favorite\"\n                                />\n                            </FormGroup>\n                            <JsonEditor\n                                label=\"Scenario\"\n                                initial={scenario.initial}\n                                onUpdate={handleScenarioUpdate}\n                            />\n                            <DownloadButton\n                                route={`/project/${project}/scenario/${name}`}\n                                filename={`${name}.json`}\n                                label=\"Scenario\"\n                                disabled={isDirty}\n                            />\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                disabled={!isValid || !isDirty}\n                            >\n                                Save\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                disabled={isDirty}\n                                onClick={handleOpen}\n                            >\n                                Launch\n                            </Button>\n                        </Box>\n                    </Box>\n                    <List>\n                        <ScenarioArguments />\n                        <ScenarioConstants />\n                        <ScenarioFunctions scenario={name} />\n                    </List>\n                    <Box marginTop=\"5px\" textAlign=\"center\">\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={!isValid || !isDirty}\n                        >\n                            Save\n                        </Button>\n                    </Box>\n                </form>\n            </FormProvider>\n            {launch && <ScenarioLaunchDialog\n                project={project}\n                scenario={name}\n                arguments={Object.keys(args)}\n                onClose={handleClose}\n            />}\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    project: string;\n    scenario: string;\n}\n\n\nexport default ScenarioBuilder;\n","import React from 'react';\nimport {useParams} from 'react-router';\n\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ErrorIcon from '@mui/icons-material/NewReleasesTwoTone';\n\nimport ScenarioInstancesList from '../Scenarios/ScenarioInstancesList';\nimport ScenarioBuilder from '../Builder/ScenarioBuilder';\n\nimport {useDispatch, useSelector} from '../../redux';\nimport {initializeForm} from '../../redux/form';\nimport type {IScenario} from '../../utils/interfaces';\n\n\nconst SelectedScenario: React.FC<Props> = (props) => {\n    const {projectId, scenarioId} = useParams();\n    const project = useSelector((state) => state.project.current);\n    const jobs = useSelector((state) => state.openbach.jobs);\n    const dispatch = useDispatch();\n\n    const scenario = React.useMemo(() => {\n        if (project) {\n            return project.scenario.find((scenario: IScenario) => scenario.name === scenarioId);\n        }\n    }, [project, scenarioId]);\n\n    React.useEffect(() => {\n        if (scenario && jobs) {\n            dispatch(initializeForm({scenario, jobs}));\n        }\n    }, [scenario, jobs, dispatch]);\n\n    if (!projectId || !scenarioId) {\n        return null;\n    }\n\n    if (!project) {\n        return (\n            <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n                <CircularProgress />\n                <p>Loading project {projectId}</p>\n            </Box>\n        );\n    }\n\n    if (!scenario) {\n        return (\n            <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n                <ErrorIcon color=\"error\" fontSize=\"large\" />\n                <p>Project {projectId} does not contain a scenario named {scenarioId}</p>\n            </Box>\n        );\n    }\n\n    if (!jobs) {\n        return (\n            <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n                <CircularProgress />\n                <p>Loading jobs list</p>\n            </Box>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Box display=\"inline-block\" width=\"70%\" sx={{verticalAlign: \"top\"}}>\n                <h1>Scenario {scenarioId}</h1>\n                <ScenarioBuilder project={projectId} scenario={scenarioId} />\n            </Box>\n            <Box display=\"inline-block\" width=\"30%\" sx={{verticalAlign: \"top\"}}>\n                <h1>Instances</h1>\n                <ScenarioInstancesList project={projectId} scenario={scenarioId} />\n            </Box>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\nexport default SelectedScenario;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m18.49 9.89.26-2.79-2.74-.62-1.43-2.41L12 5.18 9.42 4.07 7.99 6.48l-2.74.62.26 2.78L3.66 12l1.85 2.11-.26 2.8 2.74.62 1.43 2.41L12 18.82l2.58 1.11 1.43-2.41 2.74-.62-.26-2.79L20.34 12l-1.85-2.11zM13 17h-2v-2h2v2zm0-4h-2V7h2v6z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20.9 5.54-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12l-2.44-2.78.34-3.68zM18.75 16.9l-2.74.62-1.43 2.41L12 18.82l-2.58 1.11-1.43-2.41-2.74-.62.26-2.8L3.66 12l1.85-2.12-.26-2.78 2.74-.61 1.43-2.41L12 5.18l2.58-1.11 1.43 2.41 2.74.62-.26 2.79L20.34 12l-1.85 2.11.26 2.79zM11 15h2v2h-2zm0-8h2v6h-2z\"\n}, \"1\")], 'NewReleasesTwoTone');\nexports.default = _default;"],"names":["getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","name","overridesResolver","props","styles","ownerState","root","edge","concat","capitalize","size","_ref","_ref2","_extends","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","_defineProperty","switchClasses","transform","SwitchSwitchBase","SwitchBase","switchBase","input","color","_ref4","_ref5","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","defaultDisabledColor","opacity","switchTrackDisabled","_ref6","_ref7","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","main","mainChannel","lighten","darken","SwitchTrack","track","_ref8","borderRadius","onBackground","black","switchTrack","SwitchThumb","thumb","_ref9","boxShadow","shadows","React","inProps","ref","useThemeProps","className","_props$color","_props$edge","_props$size","sx","other","_objectWithoutPropertiesLoose","classes","checked","disabled","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","type","checkedIcon","label","onDelete","ListItem","ListItemIcon","onClick","cursor","DeleteIcon","title","Box","flexDirection","Controller","rules","required","defaultValue","render","_ref$field","field","onChange","onBlur","value","TextField","margin","variant","inputRef","fullWidth","toLowerCase","_ref2$field","_useFieldArray","useFieldArray","fields","append","remove","handleEntryDelete","index","handleEntryAdd","description","items","map","ScenarioArgumentsItem","id","push","ListItemButton","Add","ListItemText","primary","nestedItems","_props$step","step","controllerProps","_objectWithoutProperties","_useFormContext","useFormContext","getValues","setValue","handleIncrement","Number","isNaN","handleDecrement","minus","Tooltip","placement","IconButton","plus","_objectSpread","InputProps","startAdornment","endAdornment","StringField","password","undefined","flexGrow","NumericField","_excluded2","NumberField","BooleanField","handleChange","_excluded3","FormGroup","FormControlLabel","control","Checkbox","e","ChoiceField","choices","_excluded4","_ref3","_ref3$field","select","_toConsumableArray","option","MenuItem","IdField","others","_excluded5","filter","openbachFunction","kind","FormControl","InputLabel","_ref5$field","Select","multiple","renderValue","values","flexWrap","gap","_choices$find","Chip","find","StartJobInstanceParameterRow","minLength","maxLength","shouldUnregister","addNewField","length","canAddNew","argument","suffix","jobName","count","default","repeatable","formName","_useFieldArray2","_React$useMemo","c","Math","max","_count$split","split","_count$split2","_slicedToArray","lower","upper","sort","_React$useMemo2","countLower","countUpper","sensibleDefault","addNewRow","Array","from","alignItems","component","InfoIcon","StartJobInstanceSubcommand","_args$subcommands","job","groups","args","arguments","watch","path","selected","StartJobInstanceParameterField","join","renderSubcommand","group","groupName","group_name","optional","options","unshift","groupNames","groupPath","selectorName","selector","minWidth","labelId","_ref7$required","_ref7$optional","requiredFields","optionalFields","subcommands","forEach","result","ml","_args$required","_args$optional","general","dispatch","useDispatch","jobs","useSelector","state","openbach","entities","_state$project$curren","project","current","entity","useController","_React$useState","_React$useState2","availableJobs","storeAvailableJobs","jobsOnAgent","jobsAvailable","Object","fromEntries","j","agent","address","promise","getJobs","unwrap","then","payload","abort","selectedJob","Present","green","Absent","red","mr","mx","Divider","my","JobParameters","_useController$field","event","target","_others$find","f","scenarios","scenario","s","entries","_ref4$field","helperText","NaN","awaitables","_awaitables$find","OpenbachFunctionsList","mainLabel","form","scenarioId","_form$job","_form$entity","_form$scenario","labeled","ending","stopped","idToLabel","dependenciesLabel","wait","dependencyString","ids","waited","time","running_ids","ended_ids","launched_ids","finished_ids","timeString","schedules","Boolean","l","forceRefresh","otherScenarios","handleFunctionAdd","parseInt","replace","r","random","toString","parameters","handleFunctionRemove","refresh","functions","_f$on_fail","_f$on_fail2","field_id","console","log","i","leftIcon","onLeftClick","secondary","Paper","px","py","mt","on_fail","policy","mb","WaitFor","includes","StartJobInstance","StopJobInstance","StartScenarioInstance","StopScenarioInstance","favorites","login","methods","useForm","handleSubmit","reset","_methods$formState","formState","isValid","isDirty","launch","storeLaunch","favorite","_favorites$project","handleOpen","handleClose","handleFavoriteChange","favoriteScenario","handleScenarioUpdate","json","update","JSON","parse","updateScenario","onSubmit","data","saveScenario","CircularProgress","FormProvider","m","multiline","justifyContent","JsonEditor","initial","onUpdate","DownloadButton","route","filename","Button","List","ScenarioArguments","ScenarioConstants","ScenarioFunctions","marginTop","textAlign","ScenarioLaunchDialog","keys","onClose","_useParams","useParams","projectId","initializeForm","ScenarioBuilder","ScenarioInstancesList","ErrorIcon","fontSize","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}