{"version":3,"file":"static/js/303.e7acd5ff.chunk.js","mappings":"uTAsBMA,EAAwD,SAACC,GAC3D,IAAOC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,SAClBC,EAASH,IAAUC,EAEzB,OACIG,EAAAA,EAAAA,KAAA,OAAKC,KAAK,WAAWF,OAAQA,EAAOD,UAC9BC,GAAUD,GAGxB,EA8RA,EA3RkC,SAACH,GAC/B,IAAMO,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,UAAU,IAC7DI,GAAWC,EAAAA,EAAAA,MACjBC,GAAuEC,EAAAA,EAAAA,IAAkB,CAACC,KAAM,WAAzFC,EAAOH,EAAPG,QAASC,EAAYJ,EAAZI,aAAcC,EAAQL,EAARK,SAAUC,EAAKN,EAALM,MAAmBC,EAAOP,EAAnBQ,UAAYD,QAC3DE,EAAgCC,EAAAA,SAAwB,YAAWC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAWF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,EAAkBL,EAAAA,aAAkB,SAACM,EAA6B5B,GACpE0B,EAAS1B,EACb,GAAG,IAEG6B,EAAWP,EAAAA,aAAkB,SAACQ,GAAiB,OAAK,SAACC,GACvD,IAAOC,EAAyED,EAAzEC,KAAMC,EAAmEF,EAAnEE,QAASC,EAA0DH,EAA1DG,UAAWC,EAA+CJ,EAA/CI,SAAUC,EAAqCL,EAArCK,SAAUC,EAA2BN,EAA3BM,WAAYC,EAAeP,EAAfO,YAC3DC,EAAcR,EAAKQ,YAAY,GAC/BC,EAAaT,EAAKS,WAAW,GAE7BC,EAAwB,aAAhBhB,EAA8B,CACxCO,KAAAA,EAAMC,QAAAA,EAASS,aAAcR,EAC7BC,SAAAA,EAAUC,SAAAA,EACVC,WAAAA,EAAYC,YAAAA,GACV,CACFN,KAAAA,EAAMC,QAAAA,EAASS,aAAcR,EAC7BC,SAAAA,EAAUK,WAAAA,EAAYD,YAAAA,EACtBF,WAAAA,EAAYC,YAAAA,GAEhB5B,GAASiC,EAAAA,EAAAA,IAAS,CAACb,SAAAA,EAAUW,MAAAA,KAC7BvB,GACJ,CAAC,GAAE,CAACR,EAAUe,EAAaP,IAErB0B,EAAUtB,EAAAA,aAAkB,SAACuB,GAC/B,IAAMC,EAAUC,OAAOC,QAAQH,GAAOI,QAAO,SAAAC,GAAA,IAAAC,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAQlD,GAAFmD,EAAA,GAAOA,EAAA,YAAY,OAALnD,QAAK,IAALA,GAAAA,EAAOoD,QAAO,IAAEC,KAC7E,SAAAC,GAAA,IAAAC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAAEtB,EAAIuB,EAAA,GAAOA,EAAA,UAAMvB,EAAKwB,QAAQ,SAAS,SAACC,GAAS,OAAKA,EAAEC,aAAa,GAAC,IAExEZ,EAAQa,QACRjD,GAASkD,EAAAA,EAAAA,IAAW,wDAA0Dd,EAAQe,KAAK,OAEnG,GAAG,CAACnD,IAEEoD,EAAqBxC,EAAAA,SAAc,WACrC,OAAKhB,EAGEA,EAAW+C,KAAI,SAACnB,GAAqB,OAAKA,EAAUD,OAAO,IAFvD,EAGf,GAAG,CAAC3B,IAEJ,OAAKwD,EAAmBH,QAUpBI,EAAAA,EAAAA,MAAA,QAAMlC,SAAUb,EAAaa,GAAS,GAAQe,GAAS1C,SAAA,EACnD6D,EAAAA,EAAAA,MAAA,YAAA7D,SAAA,EACIE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBACR6D,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAChE,MAAOyB,EAAawC,SAAUtC,EAAiBuC,UAAQ,EAACC,QAAQ,YAAWjE,SAAA,EAC7EE,EAAAA,EAAAA,KAACgE,EAAAA,EAAG,CAACC,MAAM,WAAWrE,MAAM,cAC5BI,EAAAA,EAAAA,KAACgE,EAAAA,EAAG,CAACC,MAAM,WAAWrE,MAAM,aAEhCI,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,WACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBC,aAAa,GACbC,OAAQ,SAAAC,GAAA,IAAAC,EAAAD,EAAEE,MAAQZ,EAAQW,EAARX,SAAUa,EAAMF,EAANE,OAAQ9E,EAAK4E,EAAL5E,MAAO+E,EAAGH,EAAHG,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNC,WAAS,EACTT,UAAQ,EACRU,OAAO,QACPf,QAAQ,WACRE,MAAM,WACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,KAGVhF,EAAAA,EAAAA,KAACN,EAAQ,CAACE,MAAM,WAAWC,SAAUwB,EAAYvB,UAC7CE,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,WACLjB,QAASA,EACTwD,MAAO,CAACc,SAAU,SAACrF,GAAK,MAAqB,aAAhByB,GAA8B6D,QAAQtF,EAAM,GACzEyE,aAAa,GACbC,OAAQ,SAAAa,GAAA,IAAAC,EAAAD,EAAEV,MAAQZ,EAAQuB,EAARvB,SAAUa,EAAMU,EAANV,OAAQ9E,EAAKwF,EAALxF,MAAO+E,EAAGS,EAAHT,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNR,UAAQ,EACRU,OAAO,QACPf,QAAQ,WACRE,MAAM,WACNoB,KAAK,WACLxB,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,OAIdrB,EAAAA,EAAAA,MAACjE,EAAQ,CAACE,MAAM,OAAOC,SAAUwB,EAAYvB,SAAA,EACzCE,EAAAA,EAAAA,KAACsF,EAAAA,EAAU,CACPlB,UAAQ,EACRH,MAAM,aACNsB,OAAO,OACPC,MAAM,UACNzB,QAAQ,YACR0B,GAAI,CAACC,MAAO,OAAQC,GAAI,GACxB/D,KAAK,aACLf,SAAUA,EACV+E,QAAS,CAACX,SAAU,SAACrF,GAAK,MAAqB,SAAhByB,IAA+B,OAALzB,QAAK,IAALA,OAAK,EAALA,EAAO2D,QAAS,CAAC,MAE9EvD,EAAAA,EAAAA,KAACsF,EAAAA,EAAU,CACPlB,UAAQ,EACRH,MAAM,cACNuB,MAAM,UACNzB,QAAQ,YACR0B,GAAI,CAACC,MAAO,OAAQC,GAAI,GACxB/D,KAAK,cACLf,SAAUA,EACV+E,QAAS,CAACX,SAAU,SAACrF,GAAK,MAAqB,SAAhByB,IAA+B,OAALzB,QAAK,IAALA,OAAK,EAALA,EAAO2D,QAAS,CAAC,YAItFI,EAAAA,EAAAA,MAAA,YAAA7D,SAAA,EACIE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,kBACRE,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,OACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBC,aAAa,GACbC,OAAQ,SAAAuB,GAAA,IAAAC,EAAAD,EAAEpB,MAAQZ,EAAQiC,EAARjC,SAAUa,EAAMoB,EAANpB,OAAQ9E,EAAKkG,EAALlG,MAAO+E,EAAGmB,EAAHnB,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNR,UAAQ,EACRU,OAAO,QACPf,QAAQ,WACRE,MAAM,OACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,KAGVhF,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,UACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBC,aAAa,GACbC,OAAQ,SAAAyB,GAAA,IAAAC,EAAAD,EAAEtB,MAAQZ,EAAQmC,EAARnC,SAAUa,EAAMsB,EAANtB,OAAQ9E,EAAKoG,EAALpG,MAAO+E,EAAGqB,EAAHrB,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNR,UAAQ,EACRU,OAAO,QACPf,QAAQ,WACRE,MAAM,aACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,KAGVhF,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,YACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBC,aAAa,GACbC,OAAQ,SAAA2B,GAAA,IAAAC,EAAAD,EAAExB,MAAQZ,EAAQqC,EAARrC,SAAUa,EAAMwB,EAANxB,OAAQ9E,EAAKsG,EAALtG,MAAO+E,EAAGuB,EAAHvB,IAAG,OAC1ChB,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAACnB,WAAS,EAACS,GAAI,CAACE,GAAI,GAAG7F,SAAA,EAC/BE,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CAACC,GAAG,+BAA8BvG,SAAC,iBAC9CE,EAAAA,EAAAA,KAACsG,EAAAA,EAAM,CACHlC,UAAQ,EACRmC,QAAQ,+BACRF,GAAG,gCACHpC,MAAM,cACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EAAI7E,SAEb4D,EAAmBT,KAAI,SAACuD,GAAY,OACjCxG,EAAAA,EAAAA,KAACyG,EAAAA,EAAQ,CAAY7G,MAAO4G,EAAK1G,SAC5B0G,GADUA,EAEJ,QAGT,KAGtBxG,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,aACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBC,aAAa,GACbC,OAAQ,SAAAoC,GAAA,IAAAC,EAAAD,EAAEjC,MAAQZ,EAAQ8C,EAAR9C,SAAUa,EAAMiC,EAANjC,OAAQ9E,EAAK+G,EAAL/G,MAAO+E,EAAGgC,EAAHhC,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNE,OAAO,QACPf,QAAQ,WACRE,MAAM,aACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,KAGVhF,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,cACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBC,aAAa,GACbC,OAAQ,SAAAsC,GAAA,IAAAC,EAAAD,EAAEnC,MAAQZ,EAAQgD,EAARhD,SAAUa,EAAMmC,EAANnC,OAAQ9E,EAAKiH,EAALjH,MAAO+E,EAAGkC,EAAHlC,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNE,OAAO,QACPf,QAAQ,WACRE,MAAM,cACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,QAIdrB,EAAAA,EAAAA,MAACmD,EAAAA,EAAG,CAACC,UAAU,MAAKjH,SAAA,EAChBE,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CACHjD,QAAQ,YACRyB,MAAM,YACNyB,UAAWlG,EACXsE,KAAK,SACLI,GAAI,CAACyB,EAAG,GAAGpH,SACd,mBAGDE,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CACHjD,QAAQ,YACRyB,MAAM,YACNyB,UAAWlG,EACXoG,QAASvG,EAAaa,GAAS,GAAOe,GACtCiD,GAAI,CAACyB,EAAG,GAAGpH,SACd,iCAzML6D,EAAAA,EAAAA,MAACzC,EAAAA,SAAc,CAAApB,SAAA,EACXE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,kEACHE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,wCA6MnB,E,gLCpIA,EAxIqC,SAACH,GAClC,IAAOyH,EAAgCzH,EAAhCyH,KAAMC,EAA0B1H,EAA1B0H,QAASC,EAAiB3H,EAAjB2H,cAChBpH,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,UAAU,IAC7DI,GAAWC,EAAAA,EAAAA,MACjBC,GAAuCC,EAAAA,EAAAA,IAAkB,CAAC8G,cAAeD,IAAlE3G,EAAOH,EAAPG,QAASC,EAAYJ,EAAZI,aAAcE,EAAKN,EAALM,MAExB4C,EAAqBxC,EAAAA,SAAc,WACrC,IAAKhB,EACD,MAAO,CAACoH,EAAcxF,WAG1B,IAAM0F,EAAYtH,EAAW+C,KAAI,SAACnB,GAAqB,OAAKA,EAAUD,OAAO,IAI7E,OAHIyF,EAAcxF,YAAc0F,EAAUC,SAASH,EAAcxF,YAC7D0F,EAAUE,KAAKJ,EAAcxF,WAE1B0F,CACX,GAAG,CAACF,EAAcxF,UAAW5B,IAEvBuB,EAAWP,EAAAA,aAAkB,SAACS,GAChC,IAAOC,EAA4B0F,EAA5B1F,KAAMC,EAAsByF,EAAtBzF,QAASC,EAAawF,EAAbxF,UAClBF,IAASD,EAAKC,MAAQC,IAAYF,EAAKE,SAAWC,IAAcH,EAAKG,UACrExB,GAASkD,EAAAA,EAAAA,IAAW,kDAEpBlD,GAASqH,EAAAA,EAAAA,IAAY,CACjB9F,QAAAA,EACAQ,MAAO,CACHT,KAAMD,EAAKC,KACXgG,SAAUjG,EAAKE,QACfS,aAAcX,EAAKG,cAI/BuF,GACJ,GAAG,CAACC,EAAeD,EAAS/G,IAEtBkC,EAAUtB,EAAAA,aAAkB,SAACuB,GAC/B,IAAMC,EAAUC,OAAOC,QAAQH,GAAOI,QAAO,SAAAC,GAAA,IAAAC,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAQlD,GAAFmD,EAAA,GAAOA,EAAA,YAAY,OAALnD,QAAK,IAALA,GAAAA,EAAOoD,QAAO,IAAEC,KAC7E,SAAAC,GAAA,IAAAC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAAEtB,EAAIuB,EAAA,GAAOA,EAAA,UAAMvB,EAAKwB,QAAQ,SAAS,SAACC,GAAS,OAAKA,EAAEC,aAAa,GAAC,IAExEZ,EAAQa,QACRjD,GAASkD,EAAAA,EAAAA,IAAW,wDAA0Dd,EAAQe,KAAK,OAEnG,GAAG,CAACnD,IAEEuH,EAAc3G,EAAAA,aAAkB,WAClCJ,EAAMwG,GACND,GACJ,GAAG,CAACC,EAAexG,EAAOuG,IAE1B,OACIrH,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CACHC,MAAM,kBACNX,KAAMA,EACN3F,SAAUb,EAAaa,EAAUe,GACjCwF,OAAQ,CAAC/D,MAAO,SAAUgE,OAAQJ,GAClCK,QAAS,CAAC,CAACjE,MAAO,KAAMgE,OAAQ,WAAWnI,UAE3C6D,EAAAA,EAAAA,MAACwE,EAAAA,EAAa,CAAArI,SAAA,EACVE,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,OACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBE,OAAQ,SAAAC,GAAA,IAAAC,EAAAD,EAAEE,MAAQZ,EAAQW,EAARX,SAAUa,EAAMF,EAANE,OAAQ9E,EAAK4E,EAAL5E,MAAO+E,EAAGH,EAAHG,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNC,WAAS,EACTT,UAAQ,EACRU,OAAO,QACPf,QAAQ,WACRE,MAAM,OACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,KAGVhF,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,UACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBE,OAAQ,SAAAa,GAAA,IAAAC,EAAAD,EAAEV,MAAQZ,EAAQuB,EAARvB,SAAUa,EAAMU,EAANV,OAAQ9E,EAAKwF,EAALxF,MAAO+E,EAAGS,EAAHT,IAAG,OAC1C3E,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CACNR,UAAQ,EACRU,OAAO,QACPf,QAAQ,WACRE,MAAM,UACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EACVK,WAAS,GACX,KAGVhF,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACPtC,KAAK,YACLjB,QAASA,EACTwD,MAAO,CAACC,UAAU,GAClBE,OAAQ,SAAAuB,GAAA,IAAAC,EAAAD,EAAEpB,MAAQZ,EAAQiC,EAARjC,SAAUa,EAAMoB,EAANpB,OAAQ9E,EAAKkG,EAALlG,MAAO+E,EAAGmB,EAAHnB,IAAG,OAC1ChB,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAACnB,WAAS,EAACS,GAAI,CAACE,GAAI,GAAG7F,SAAA,EAC/BE,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CAACC,GAAE,wBAAA+B,OAA0Bd,EAAc1F,MAAO9B,SAAC,eAC9DE,EAAAA,EAAAA,KAACsG,EAAAA,EAAM,CACHC,QAAO,wBAAA6B,OAA0Bd,EAAc1F,MAC/CyE,GAAE,yBAAA+B,OAA2Bd,EAAc1F,MAC3CqC,MAAM,YACNJ,SAAUA,EACVa,OAAQA,EACR9E,MAAOA,EACPmF,SAAUJ,EAAI7E,SAEb4D,EAAmBT,KAAI,SAACuD,GAAY,OAAKxG,EAAAA,EAAAA,KAACyG,EAAAA,EAAQ,CAAY7G,MAAO4G,EAAK1G,SAAE0G,GAApBA,EAAoC,QAEvF,QAMtC,ECGA,EA/HwC,SAAC7G,GACrC,IAAOiC,EAA4BjC,EAA5BiC,KAAMC,EAAsBlC,EAAtBkC,QAASC,EAAanC,EAAbmC,UAChBxB,GAAWC,EAAAA,EAAAA,MACjBU,EAA8BC,EAAAA,UAAwB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDoH,EAAMlH,EAAA,GAAEmH,EAAWnH,EAAA,GAC1BoH,EAAwCrH,EAAAA,WAAwBsH,GAAApH,EAAAA,EAAAA,GAAAmH,EAAA,GAAzDE,EAAWD,EAAA,GAAEE,EAAgBF,EAAA,GACpCG,EAAsCzH,EAAAA,SAAuB,KAAI0H,GAAAxH,EAAAA,EAAAA,GAAAuH,EAAA,GAA1DE,EAAUD,EAAA,GAAEE,EAAeF,EAAA,GAClCG,EAA4B7H,EAAAA,SAAmB,CAAC,GAAE8H,GAAA5H,EAAAA,EAAAA,GAAA2H,EAAA,GAA3CE,EAAKD,EAAA,GAAEE,EAAUF,EAAA,GAElBG,EAAcjI,EAAAA,aAAkB,WAClCgI,EAAW,CAAC,EAChB,GAAG,IAEGE,EAAelI,EAAAA,aAAkB,WACnCwH,GAAiB,SAACzE,GACd,OAAQA,GACJ,IAAK,YACD3D,GAAS+I,EAAAA,EAAAA,IAAY,CAACxH,QAAAA,EAASyH,QAAQ,KAASC,KAAKJ,GACrD,MACJ,IAAK,SACD7I,GAAS+I,EAAAA,EAAAA,IAAY,CAACxH,QAAAA,EAASyH,QAAQ,KAAQC,KAAKJ,GAIhE,GACJ,GAAG,CAACtH,EAASvB,EAAU6I,IAEjBtB,EAAc3G,EAAAA,aAAkB,WAClCwH,OAAiBc,EACrB,GAAG,IAEGC,EAAmBvI,EAAAA,aAAkB,WACvCwH,EAAiB,YACrB,GAAG,IAEGgB,EAAmBxI,EAAAA,aAAkB,WACvCwH,EAAiB,SACrB,GAAG,IAEGiB,EAAmBzI,EAAAA,aAAkB,WACvCoH,GAAY,EAChB,GAAG,IAEGsB,EAAoB1I,EAAAA,aAAkB,WACxCoH,GAAY,EAChB,GAAG,IAEHpH,EAAAA,WAAgB,WACZ,IAAI2I,EACEC,EAAUxJ,GAASyJ,EAAAA,EAAAA,IAAc,CAAClI,QAAAA,KAmBxC,OAlBAiI,EAAQE,SAAST,MAAK,SAAAzG,GAA2B,IAAzBmH,EAAOnH,EAAPmH,QAASC,EAASpH,EAAToH,UAC7B,GAAKD,GAAYC,EAAjB,CAIA,IAEMC,EAFkB,IAAIC,KAAKH,EAAUA,EAAQI,oBAAsB,GAC/C,IAAID,KAAKF,EAAYA,EAAUG,oBAAsB,GACvBH,EAAYD,EAC9DK,EAAOH,EAAYA,EAAUI,WAAa,IACnC,MAATD,IACAT,EAAUW,WAAWrB,EAAa,MAEtCL,EAAgBwB,EARhB,MAFIxB,EAAgB,IAWxB,IAAG2B,OAAM,SAAChI,GACa,eAAfA,EAAMb,MACNkH,EAAgB,IAExB,IACO,WAAOgB,EAAQY,QAASC,aAAad,EAAS,CACzD,GAAG,CAACZ,EAAOpH,EAASvB,EAAU6I,IAE9B,IAAMyB,EAA0B,MAAf/B,GAAqC,MAAfA,EACjCrD,EAAQoF,EAAW,YAAc,UAEvC,OAAmB,MAAf/B,GAEI7I,EAAAA,EAAAA,KAAC8G,EAAAA,EAAG,CAAC+D,QAAQ,OAAOC,cAAc,MAAMnF,GAAI,EAAE7F,UAC1CE,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CAACC,UAAQ,EAAClD,QAAQ,YAAY0B,GAAI,CAACsF,GAAI,GAAGjL,SAAC,yBAQ1D6D,EAAAA,EAAAA,MAACmD,EAAAA,EAAG,CAAC+D,QAAQ,OAAOC,cAAc,MAAMnF,GAAI,EAAE7F,SAAA,EAC1CE,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CAACjD,QAAQ,YAAYyB,MAAOA,EAAO2B,QAASsC,EAAkBhE,GAAI,CAACsF,GAAI,GAAGjL,SAC5E8K,EAAW,YAAc,SAAW/B,KAEzC7I,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CAACjD,QAAQ,YAAYyB,MAAOA,EAAO2B,QAASwC,EAAkBlE,GAAI,CAACsF,GAAI,GAAGjL,SAAC,YAGlFE,EAAAA,EAAAA,KAACgH,EAAAA,EAAM,CAACjD,QAAQ,YAAYyB,MAAOA,EAAO2B,QAASuC,EAAkBjE,GAAI,CAACsF,GAAI,GAAGjL,SAAC,YAGlFE,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CACHC,MAAM,gBACNX,KAAMlC,QAAQuD,GACdT,OAAQ,CAAC/D,MAAO,SAAUgE,OAAQJ,GAClCK,QAAS,CAAC,CAACjE,MAAO,KAAMgE,OAAQmB,IAAetJ,UAE/CE,EAAAA,EAAAA,KAACmI,EAAAA,EAAa,CAAArI,UACV6D,EAAAA,EAAAA,MAACqH,EAAAA,EAAiB,CAAAlL,SAAA,CAAC,UACP2I,EAAY,uBAIhCzI,EAAAA,EAAAA,KAACiL,EAAY,CACT7D,KAAMiB,EACNhB,QAASuC,EACTtC,cAAe,CAAC1F,KAAAA,EAAMC,QAAAA,EAASC,UAAAA,OAI/C,ECnGMoJ,GAAUC,EAAAA,EAAAA,IAAO,UAAPA,CAAkB,CAC9BC,QAAS,WAIPC,GAAeF,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CAC9BrG,OAAQ,UAINwG,EAAgB,SAACC,GACnB,IAAKA,EACD,OAAOvL,EAAAA,EAAAA,KAAC8G,EAAAA,EAAG,CAAC0E,UAAU,OAAOhG,MAAOiG,EAAAA,EAAAA,KAAS3L,SAAC,OAEtD,EAwGA,EArGqC,SAACH,GAClC,IAAO0C,EAAS1C,EAAT0C,MACD/B,GAAWC,EAAAA,EAAAA,MACXmL,GAAWvL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASqL,QAAQ,IACzDC,GAAUxL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMwL,MAAMC,QAAQ,IAC3D5K,EAA0BC,EAAAA,UAAwB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDmG,EAAIjG,EAAA,GAAE2K,EAAS3K,EAAA,GAEhB4K,EAAuB7K,EAAAA,aAAkB,WAC3C4K,GAAU,SAACE,GAAU,OAAMA,CAAC,GAChC,GAAG,IAEGC,EAAuB/K,EAAAA,aAAkB,SAACM,GAC5ClB,GAAS4L,EAAAA,EAAAA,IAAe,CAACrK,QAASQ,EAAMR,QAASsK,YAAa3K,EAAM4K,OAAOxM,QAC/E,GAAG,CAACyC,EAAMR,QAASvB,IAEb+L,EAAchK,EAAMiK,SACtB3I,EAAAA,EAAAA,MAAA,KAAA7D,SAAA,CAAG,yBAAuBuC,EAAMiK,WAChCX,GACA3L,EAAAA,EAAAA,KAAA,OAAAF,UACI6D,EAAAA,EAAAA,MAACwC,EAAAA,EAAW,CAACnB,WAAS,EAAAlF,SAAA,EAClBE,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CAACC,GAAE,qBAAA+B,OAAuB/F,EAAMT,MAAO9B,SAAC,yBACnD6D,EAAAA,EAAAA,MAAC2C,EAAAA,EAAM,CACHC,QAAO,qBAAA6B,OAAuB/F,EAAMT,MACpCyE,GAAE,sBAAA+B,OAAwB/F,EAAMT,MAChChC,MAAOyC,EAAMkK,UAAY,GACzBtI,MAAM,sBACNJ,SAAUoI,EAAqBnM,SAAA,EAE/BE,EAAAA,EAAAA,KAACyG,EAAAA,EAAQ,CAAC7G,MAAM,GAAEE,SAAC,6BACV,OAAR4L,QAAQ,IAARA,OAAQ,EAARA,EAAUzI,KAAI,SAACqJ,GAAO,OAAKtM,EAAAA,EAAAA,KAACyG,EAAAA,EAAQ,CAAoB7G,MAAO0M,EAAQ1K,KAAK9B,SAAEwM,EAAQ1K,MAA5C0K,EAAQ1K,KAAoD,YAInHS,EAAMkK,UACN5I,EAAAA,EAAAA,MAAA,KAAA7D,SAAA,CAAG,wBAAsBuC,EAAMkK,aAE/BvM,EAAAA,EAAAA,KAAA,KAAAF,SAAG,kCAGD0M,EAAYnK,EAAMoK,UACpBpK,EAAMqK,WAAY1M,EAAAA,EAAAA,KAAC2M,EAAAA,EAAE,CAAClH,GAAI,CAACD,MAAOoH,EAAAA,EAAAA,SAAkB5M,EAAAA,EAAAA,KAAC6M,EAAAA,EAAQ,CAACpH,GAAI,CAACD,MAAOsH,EAAAA,EAAAA,SAC1E9M,EAAAA,EAAAA,KAAC+M,EAAAA,EAAY,CAACtH,GAAI,CAACD,MAAOiG,EAAAA,EAAAA,QAExBuB,EAAW3K,EAAM2K,UAAY,CAAC,EAC9BC,EAAkBtK,OAAOC,QAAQoK,GAAUnK,QAAO,SAAAC,GAAA,IAAAC,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAEoK,EAAOnK,EAAA,GAAEwI,EAAMxI,EAAA,SACzD,gBAAZmK,QAAwC1D,IAAX+B,GAAmC,OAAXA,CAAe,IACrEtI,KAAI,SAAAC,GAAwB,IAADC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAArBgK,EAAO/J,EAAA,GAAEoI,EAAMpI,EAAA,GACdqC,EAAS+F,EAAgC,YAAXA,EAAuBqB,EAAAA,EAAAA,KAAanB,EAAAA,EAAAA,KAAhD0B,EAAAA,EAAAA,KACxB,OAAOxJ,EAAAA,EAAAA,MAAA,KAAA7D,SAAA,CAAkBoN,EAAQ,QAAIlN,EAAAA,EAAAA,KAAC8G,EAAAA,EAAG,CAAC0E,UAAU,OAAOhG,MAAOA,EAAM1F,SAAEyL,MAA3D2B,EACnB,IAEME,EAAMJ,EAAS,eAErB,OACIrJ,EAAAA,EAAAA,MAACzC,EAAAA,SAAc,CAAApB,SAAA,EACX6D,EAAAA,EAAAA,MAAC0J,EAAAA,EAAc,CAAClG,QAAS4E,EAAqBjM,SAAA,EAC1CE,EAAAA,EAAAA,KAACsN,EAAAA,EAAY,CAAAxN,SAAE0M,KACfxM,EAAAA,EAAAA,KAACuN,EAAAA,EAAY,CAACC,QAASnL,EAAMT,KAAM6L,UAAWpL,EAAMR,UACnDuF,GAAOpH,EAAAA,EAAAA,KAAC0N,EAAAA,EAAU,KAAM1N,EAAAA,EAAAA,KAAC2N,EAAAA,EAAU,QAExC3N,EAAAA,EAAAA,KAAC4N,EAAAA,EAAQ,CAACC,GAAIzG,EAAMyC,QAAQ,OAAOiE,eAAa,EAAAhO,UAC5C6D,EAAAA,EAAAA,MAACmD,EAAAA,EAAG,CAACiH,GAAI,EAAEjO,SAAA,EACPE,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAMT,QACX+B,EAAAA,EAAAA,MAACuH,EAAO,CAAApL,SAAA,EACJE,EAAAA,EAAAA,KAACqL,EAAY,CAAAvL,SAAC,aACd6D,EAAAA,EAAAA,MAAA,KAAA7D,SAAA,CAAG,YAAUuC,EAAMR,YACnB8B,EAAAA,EAAAA,MAAA,KAAA7D,SAAA,CAAG,cAAYuC,EAAMC,iBACrBqB,EAAAA,EAAAA,MAAA,KAAA7D,SAAA,CAAG,YAAUwL,EAAcjJ,EAAMoK,WAAW,kBAAgBnB,EAAcjJ,EAAMqK,WAAW,gBAC1FL,EACAV,IAAW3L,EAAAA,EAAAA,KAACgO,EAAc,CACvBpM,KAAMS,EAAMT,KACZC,QAASQ,EAAMR,QACfC,UAAWO,EAAMC,aACjBmK,UAAWpK,EAAMoK,UACjBC,UAAWrK,EAAMqK,eAGxBxH,QAAQ7C,EAAM4L,QAAU5L,EAAM4L,OAAO1K,UAAWI,EAAAA,EAAAA,MAACuH,EAAO,CAAApL,SAAA,EACrD6D,EAAAA,EAAAA,MAAC0H,EAAY,CAAAvL,SAAA,CAAC,QAAMuC,EAAM4L,OAAQ1K,OAAS,EAAI,IAAM,MACpDlB,EAAM4L,OAAQhL,KAAI,SAAAsB,EAAwB2J,GAAa,IAAnCC,EAAG5J,EAAH4J,IAAG,OAAqCnO,EAAAA,EAAAA,KAAA,KAAAF,SAAgBqO,GAARD,EAAgB,OAExFhJ,QAAQkI,KAAQzJ,EAAAA,EAAAA,MAACuH,EAAO,CAAApL,SAAA,EACrBE,EAAAA,EAAAA,KAACqL,EAAY,CAAAvL,SAAC,SACdE,EAAAA,EAAAA,KAAA,QAAAF,UAAME,EAAAA,EAAAA,KAAA,OAAAF,SAAMsN,SAEflI,QAAQ+H,EAAgB1J,UAAWI,EAAAA,EAAAA,MAACuH,EAAO,CAAApL,SAAA,EACxC6D,EAAAA,EAAAA,MAAC0H,EAAY,CAAAvL,SAAA,CAAC,UAAQmN,EAAgB1J,OAAS,EAAI,IAAM,MACxD0J,YAMzB,EC1GA,EAtBgC,SAACtN,GAC7B,IAAMyO,GAASjO,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAAS+N,MAAM,IAE3D,OAAKA,GAODzK,EAAAA,EAAAA,MAACzC,EAAAA,SAAc,CAAApB,SAAA,EACXE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YACJE,EAAAA,EAAAA,KAACqO,EAAAA,EAAI,CAAAvO,SAAEsO,EAAOnL,KAAI,SAACZ,GAAa,OAAKrC,EAAAA,EAAAA,KAACsO,EAAW,CAAkBjM,MAAOA,GAAnBA,EAAMT,KAAsB,UAPnF5B,EAAAA,EAAAA,KAAA,MAAAF,SAAI,iCAUhB,E,UCwBA,EAxCwC,SAACH,GACrC,IAAMyO,GAASjO,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAAS+N,MAAM,IACrD1C,GAAWvL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAASqL,QAAQ,IAE/D,IAAKA,EACD,OAAO1L,EAAAA,EAAAA,KAAA,MAAAF,SAAI,oCAGf,IAAMyO,EAAgB5L,OAAO6L,YAAY9C,EAASzI,KAAI,SAACwL,GAAW,MAC9D,CAACA,EAAE7M,KAAM,CAACA,KAAM6M,EAAE7M,KAAMyE,GAAIoI,EAAE7M,KAAMyD,KAAM,WAAW,KAGnDqJ,EAAwB,GACxBC,GAASP,GAAU,IAAInL,KAAI,SAACZ,GAC9B,IAAMiK,EAAUZ,EAASkD,MAAK,SAACH,GAE3B,YAAkBjF,IADHiF,EAAEI,OAAOD,MAAK,SAACE,GAAU,OAAKA,EAAEzM,OAASyM,EAAEzM,MAAMR,UAAYQ,EAAMR,OAAO,GAE7F,IAEMkN,EAAqB,CAACnN,KAAMS,EAAMT,KAAMyE,GAAIhE,EAAMT,KAAMyD,KAAM,UAKpE,OAJIiH,IACAyC,EAAKvJ,MAAQ,UACbkJ,EAAMhH,KAAK,CAACsH,OAAQD,EAAM3C,OAAQmC,EAAcjC,EAAQ1K,MAAOqN,OAAQ,KAEpEF,CACX,IAEA,OACIpL,EAAAA,EAAAA,MAACzC,EAAAA,SAAc,CAAApB,SAAA,EACXE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,uBACJE,EAAAA,EAAAA,KAACkP,EAAAA,EAAQ,CAACC,OAAO,QAAQR,MAAOA,EAAMvG,OAAOzF,OAAOyM,OAAOb,IAAiBG,MAAOA,MAG/F,E,UCGA,EA/BgC,SAAC/O,GAC7B,IAAMW,GAAWC,EAAAA,EAAAA,MAYjB,OAVAW,EAAAA,WAAgB,WACZZ,GAAS+O,EAAAA,EAAAA,IAAS,4BAClB,IAAMC,EAAW,CACbhP,GAASiP,EAAAA,EAAAA,OACTjP,GAASkP,EAAAA,EAAAA,OACTlP,GAASmP,EAAAA,EAAAA,IAAU,CAACzC,UAAU,MAElC,OAAO,WAAOsC,EAASI,SAAQ,SAAC5F,GAAaA,EAAQY,OAAQ,GAAG,CACpE,GAAG,CAACpK,KAGAqD,EAAAA,EAAAA,MAACzC,EAAAA,SAAc,CAAApB,SAAA,EACX6D,EAAAA,EAAAA,MAACmD,EAAAA,EAAG,CAAC+D,QAAQ,eAAenF,MAAM,MAAMD,GAAI,CAACkK,cAAe,OAAO7P,SAAA,EAC/DE,EAAAA,EAAAA,KAAC4P,EAAM,KACP5P,EAAAA,EAAAA,KAACkP,EAAQ,QAEblP,EAAAA,EAAAA,KAAC8G,EAAAA,EAAG,CAAC+D,QAAQ,eAAegF,UAAU,aAAaC,GAAI,EAAGpK,MAAM,MAAMD,GAAI,CAACkK,cAAe,OAAO7P,UAC7FE,EAAAA,EAAAA,KAAC+P,EAAQ,QAIzB,C,kEClCMC,EAAS,CACXnB,OAAiC,qBACjCoB,QAAkC,oBAClC3D,QAAkC,uBAgKtC,IApIkC,SAAC3M,GAC/B,IAAOwP,EAAoDxP,EAApDwP,OAAQR,EAA4ChP,EAA5CgP,MAAOD,EAAqC/O,EAArC+O,MAAOwB,EAA8BvQ,EAA9BuQ,aAAcC,EAAgBxQ,EAAhBwQ,aACrCC,EAzBY,WAClB,IAAAnP,EAAsCC,EAAAA,SAAoC,CACtEwE,WAAO8D,EACP2F,YAAQ3F,IACVrI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAHKmP,EAAUjP,EAAA,GAAEkP,EAAelP,EAAA,GAkBlC,OAbAD,EAAAA,WAAgB,WACZ,IAAMoP,EAAe,WAAOD,EAAgB,CACxC3K,MAAO6K,OAAOC,WACdrB,OAAQoB,OAAOE,aAChB,EAMH,OALAF,OAAOG,iBAAiB,SAAUJ,GAGlCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,EAAc,CACpE,GAAG,IAEIF,CACX,CAKuBQ,GACbC,EAAS3P,EAAAA,OAA4B,MAiG3C,OA/FAA,EAAAA,WAAgB,WACZ,GAAK2P,EAAOC,QAAZ,CAIA,KAAOD,EAAOC,QAAQhR,SAASyD,OAAS,GACpCsN,EAAOC,QAAQhR,SAAS,GAAGiR,SAG/B,IAAM5B,EAAS0B,EAAOC,QAAQE,aACxBtL,EAAQmL,EAAOC,QAAQG,YAEvBC,EAAaC,EAAAA,IAAiCxC,GAC/C1F,MAAM,OAAQkI,EAAAA,IAAyCzC,GAAOrI,IAAG,SAAC+K,GAAe,OAAKA,EAAE/K,EAAE,IAAEgL,UAAS,SAACD,GAAe,OAAKA,EAAEnC,MAAM,KAClIhG,MAAM,UAAWkI,EAAAA,GAA8B,KAC/ClI,MAAM,WAAYkI,EAAAA,IAAwB,IAC1ClI,MAAM,WAAYkI,EAAAA,IAAwB,IAC1CG,GAAG,QAAQ,WACRC,EAAKC,KAAK,MAAM,SAACJ,GAAe,OAAMA,EAAEpC,OAAwByC,CAAC,IAC5DD,KAAK,MAAM,SAACJ,GAAe,OAAMA,EAAEpC,OAAwB0C,CAAC,IAC5DF,KAAK,MAAM,SAACJ,GAAe,OAAMA,EAAEhF,OAAwBqF,CAAC,IAC5DD,KAAK,MAAM,SAACJ,GAAe,OAAMA,EAAEhF,OAAwBsF,CAAC,IACjE3C,EAAKyC,KAAK,aAAa,SAACJ,GAAe,mBAAAhJ,OAAkBgJ,EAAEK,EAAC,MAAArJ,OAAKgJ,EAAEM,EAAC,OACxE,IAEEC,EAAMR,EAAAA,GAAUN,EAAOC,SACxBU,KAAK,UAAW,EAAE9L,EAAQ,GAAIyJ,EAAS,EAAGzJ,EAAOyJ,IACjDqC,KAAK,QAAS,qDAEbI,EAAOD,EAAIE,OAAO,QACnBL,KAAK,OAAQ,SACbA,KAAK,SAAUrC,GACfqC,KAAK,QAAS9L,GACd8L,KAAK,KAAM9L,EAAQ,GACnB8L,KAAK,KAAMrC,EAAS,GAEnBoC,EAAOI,EAAIE,OAAO,KACnBL,KAAK,QAAS,SACdM,UAAU,SACVnQ,KAAmB+M,GACnBqD,QACAF,OAAO,QACPL,KAAK,SAAU,QACfA,KAAK,gBAAgB,SAACJ,GAAe,OAAKY,KAAKC,KAAKb,EAAEnC,OAAO,IAE5DF,EAAO4C,EAAIE,OAAO,KACnBL,KAAK,QAAS,SACdM,UAAU,SACVnQ,KAAmBgN,GACnBoD,QACAF,OAAoB,KACpBP,GAAG,YAAY,SAAC9P,EAAO4P,GAAqBA,EAAEc,GAAK,KAAMd,EAAEe,GAAK,IAAK,IACrEC,KAAKjB,EAAAA,MACDG,GAAG,SAAS,SAAC9P,GACLA,EAAM6Q,QACPnB,EAAWoB,YAAY,IAAKC,UAEhC/Q,EAAMgR,QAAQN,GAAK1Q,EAAMgR,QAAQf,EACjCjQ,EAAMgR,QAAQL,GAAK3Q,EAAMgR,QAAQd,CACrC,IACCJ,GAAG,QAAQ,SAAC9P,GACTA,EAAMgR,QAAQN,GAAK1Q,EAAMiQ,EACzBjQ,EAAMgR,QAAQL,GAAK3Q,EAAMkQ,CAC7B,IACCJ,GAAG,OAAO,SAAC9P,GACHA,EAAM6Q,QACPnB,EAAWoB,YAAY,EAE/B,KAwBR,OAtBAvD,EAAK8C,OAAO,aACPL,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,cAAc,SAACJ,GAAe,OAAKpB,EAAOoB,EAAE/L,KAAK,IAE3D0J,EAAK8C,OAAO,QACPY,MAAK,SAACrB,GAAe,OAAKA,EAAExP,IAAI,IAChC4P,KAAK,SAAU,WACfA,KAAK,KAAM,IACXA,KAAK,KAAM,SACXkB,MAAM,QAAQ,SAACtB,GAAe,OAAKA,EAAE5L,MAAQ4L,EAAE5L,MAAoB,YAAX4L,EAAE/L,KAAqB,UAAY,OAAQ,IAEpG6K,GACAnB,EAAKuC,GAAG,SAAS,SAAC9P,EAAO4P,GAAe,OAAKlB,EAAakB,EAAE,IAG5DjB,GACAyB,EAAKN,GAAG,QAASnB,GAGd,WAAOe,EAAWyB,MAAO,CAzFhC,CA0FJ,GAAG,CAAChE,EAAOD,EAAOwB,EAAcC,EAAcC,KAEvCpQ,EAAAA,EAAAA,KAAA,OAAK2E,IAAKkM,EAAQ1B,OAAQA,EAAQzJ,MAAM,QACnD,C,2BCtIIkN,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF/B,EAAG,6JACD,SACJ0B,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF/B,EAAG,wNACD,aACJ0B,EAAQ,EAAUG,C","sources":["components/Admin/AgentAdd.tsx","components/Admin/AgentUpdate.tsx","components/Admin/AgentUninstall.tsx","components/Admin/AgentStatus.tsx","components/Admin/Status.tsx","components/Admin/AgentsTopology.tsx","components/Admin/Agents.tsx","components/common/Topology.tsx","../node_modules/@mui/icons-material/Cloud.js","../node_modules/@mui/icons-material/CloudDone.js"],"sourcesContent":["import React from 'react';\nimport {useForm, Controller} from 'react-hook-form';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\nimport TextField from '@mui/material/TextField';\n\nimport FileUpload from '../common/FileUploadButton';\n\nimport {addAgent} from '../../api/agents';\nimport {useDispatch, useSelector} from '../../redux';\nimport {setMessage} from '../../redux/message';\nimport type {ICollector} from '../../utils/interfaces';\nimport type {FieldErrors} from 'react-hook-form';\n\n\nconst TabPanel: React.FC<React.PropsWithChildren<TabProps>> = (props) => {\n    const {value, selected, children} = props;\n    const hidden = value !== selected;\n\n    return (\n        <div role=\"tabpanel\" hidden={hidden}>\n            {!hidden && children}\n        </div>\n    );\n};\n\n\nconst AgentAdd: React.FC<Props> = (props) => {\n    const collectors = useSelector((state) => state.openbach.collectors);\n    const dispatch = useDispatch();\n    const {control, handleSubmit, register, reset, formState: {isValid}} = useForm<FormData>({mode: 'onBlur'});\n    const [selectedTab, storeTab] = React.useState<TabKeys>('password');\n\n    const handleTabChange = React.useCallback((event: React.SyntheticEvent, value: TabKeys) => {\n        storeTab(value);\n    }, []);\n\n    const onSubmit = React.useCallback((reattach: boolean) => (data: FormData) => {\n        const {name, address, collector, username, password, http_proxy, https_proxy} = data;\n        const private_key = data.private_key[0];\n        const public_key = data.public_key[0];\n\n        const agent = selectedTab === 'password' ? ({\n            name, address, collector_ip: collector,\n            username, password,\n            http_proxy, https_proxy,\n        }) : ({\n            name, address, collector_ip: collector,\n            username, public_key, private_key,\n            http_proxy, https_proxy,\n        });\n        dispatch(addAgent({reattach, agent}));\n        reset();\n    }, [dispatch, selectedTab, reset]);\n\n    const onError = React.useCallback((error: FieldErrors<FormData>) => {\n        const missing = Object.entries(error).filter(([name, value]) => !value?.message).map(\n            ([name, value]) => name.replace(/\\b\\w/g, (s: string) => s.toUpperCase())\n        );\n        if (missing.length) {\n            dispatch(setMessage(\"The following fields are missing to create an Agent: \" + missing.join(\", \")));\n        }\n    }, [dispatch]);\n\n    const collectorAddresses = React.useMemo(() => {\n        if (!collectors) {\n            return [];\n        }\n        return collectors.map((collector: ICollector) => collector.address);\n    }, [collectors]);\n\n    if (!collectorAddresses.length) {\n        return (\n            <React.Fragment>\n                <p>No collector found! Cannot add an agent without a collector!</p>\n                <p>Please contact your administrator</p>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit(false), onError)}>\n            <fieldset>\n                <legend>Connect with</legend>\n                <Tabs value={selectedTab} onChange={handleTabChange} centered variant=\"fullWidth\">\n                    <Tab label=\"Password\" value=\"password\" />\n                    <Tab label=\"SSH Keys\" value=\"keys\" />\n                </Tabs>\n                <Controller\n                    name=\"username\"\n                    control={control}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            autoFocus\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Username\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <TabPanel value=\"password\" selected={selectedTab}>\n                    <Controller\n                        name=\"password\"\n                        control={control}\n                        rules={{validate: (value) => selectedTab !== \"password\" || Boolean(value)}}\n                        defaultValue=\"\"\n                        render={({field: {onChange, onBlur, value, ref}}) => (\n                            <TextField\n                                required\n                                margin=\"dense\"\n                                variant=\"standard\"\n                                label=\"Password\"\n                                type=\"password\"\n                                onChange={onChange}\n                                onBlur={onBlur}\n                                value={value}\n                                inputRef={ref}\n                                fullWidth\n                            />\n                        )}\n                    />\n                </TabPanel>\n                <TabPanel value=\"keys\" selected={selectedTab}>\n                    <FileUpload\n                        required\n                        label=\"Public Key\"\n                        accept=\".pub\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        sx={{width: \"100%\", mt: 2}}\n                        name=\"public_key\"\n                        register={register}\n                        options={{validate: (value) => selectedTab !== \"keys\" || value?.length > 0}}\n                    />\n                    <FileUpload\n                        required\n                        label=\"Private Key\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        sx={{width: \"100%\", mt: 2}}\n                        name=\"private_key\"\n                        register={register}\n                        options={{validate: (value) => selectedTab !== \"keys\" || value?.length > 0}}\n                    />\n                </TabPanel>\n            </fieldset>\n            <fieldset>\n                <legend>Create Agent</legend>\n                <Controller\n                    name=\"name\"\n                    control={control}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Name\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"address\"\n                    control={control}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"IP Address\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"collector\"\n                    control={control}\n                    rules={{required: true}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <FormControl fullWidth sx={{mt: 3}}>\n                            <InputLabel id=\"collectors-label-for-add-new\">Collector *</InputLabel>\n                            <Select\n                                required\n                                labelId=\"collectors-label-for-add-new\"\n                                id=\"collectors-select-for-add-new\"\n                                label=\"Collector *\"\n                                onChange={onChange}\n                                onBlur={onBlur}\n                                value={value}\n                                inputRef={ref}\n                            >\n                                {collectorAddresses.map((addr: string) => (\n                                    <MenuItem key={addr} value={addr}>\n                                        {addr}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    )}\n                />\n                <Controller\n                    name=\"http_proxy\"\n                    control={control}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"HTTP Proxy\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"https_proxy\"\n                    control={control}\n                    rules={{required: false}}\n                    defaultValue=\"\"\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"HTTPS Proxy\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n            </fieldset>\n            <Box textAlign=\"end\">\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={!isValid}\n                    type=\"submit\"\n                    sx={{m: 2}}\n                >\n                    Add New Agent\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    disabled={!isValid}\n                    onClick={handleSubmit(onSubmit(true), onError)}\n                    sx={{m: 2}}\n                >\n                    Attach Existing Agent\n                </Button>\n            </Box>\n        </form>\n    );\n};\n\n\ninterface Props {\n}\n\n\ninterface FormData {\n    username: string;\n    password: string;\n    private_key: FileList;\n    public_key: FileList;\n    name: string;\n    address: string;\n    collector: string;\n    http_proxy?: string;\n    https_proxy?: string;\n}\n\n\ninterface TabProps {\n    value: TabKeys;\n    selected: TabKeys;\n}\n\n\ntype TabKeys = \"password\" | \"keys\";\n// type FileKeys = \"public_key\" | \"private_key\";\n\n\nexport default AgentAdd;\n","import React from 'react';\nimport {useForm, Controller} from 'react-hook-form';\n\nimport DialogContent from '@mui/material/DialogContent';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nimport Dialog from '../common/ActionDialog';\n\nimport {updateAgent} from '../../api/agents';\nimport {useDispatch, useSelector} from '../../redux';\nimport {setMessage} from '../../redux/message';\nimport type {ICollector} from '../../utils/interfaces';\nimport type {FieldErrors} from 'react-hook-form';\n\n\nconst AgentUpdate: React.FC<Props> = (props) => {\n    const {open, onClose, initialValues} = props;\n    const collectors = useSelector((state) => state.openbach.collectors);\n    const dispatch = useDispatch();\n    const {control, handleSubmit, reset} = useForm<FormData>({defaultValues: initialValues});\n\n    const collectorAddresses = React.useMemo(() => {\n        if (!collectors) {\n            return [initialValues.collector];\n        }\n\n        const addresses = collectors.map((collector: ICollector) => collector.address);\n        if (initialValues.collector && !addresses.includes(initialValues.collector)) {\n            addresses.push(initialValues.collector);\n        }\n        return addresses;\n    }, [initialValues.collector, collectors]);\n\n    const onSubmit = React.useCallback((data: FormData) => {\n        const {name, address, collector} = initialValues;\n        if (name === data.name && address === data.address && collector === data.collector) {\n            dispatch(setMessage(\"No changes made to the agent; will not update\"));\n        } else {\n            dispatch(updateAgent({\n                address,\n                agent: {\n                    name: data.name,\n                    agent_ip: data.address,\n                    collector_ip: data.collector,\n                },\n            }));\n        }\n        onClose();\n    }, [initialValues, onClose, dispatch]);\n\n    const onError = React.useCallback((error: FieldErrors<FormData>) => {\n        const missing = Object.entries(error).filter(([name, value]) => !value?.message).map(\n            ([name, value]) => name.replace(/\\b\\w/g, (s: string) => s.toUpperCase())\n        );\n        if (missing.length) {\n            dispatch(setMessage(\"The following fields are missing to update an Agent: \" + missing.join(\", \")));\n        }\n    }, [dispatch]);\n\n    const handleClose = React.useCallback(() => {\n        reset(initialValues);\n        onClose();\n    }, [initialValues, reset, onClose]);\n\n    return (\n        <Dialog\n            title=\"Update an Agent\"\n            open={open}\n            onSubmit={handleSubmit(onSubmit, onError)}\n            cancel={{label: \"Cancel\", action: handleClose}}\n            actions={[{label: \"OK\", action: \"submit\"}]}\n        >\n            <DialogContent>\n                <Controller\n                    name=\"name\"\n                    control={control}\n                    rules={{required: true}}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            autoFocus\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Name\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"address\"\n                    control={control}\n                    rules={{required: true}}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <TextField\n                            required\n                            margin=\"dense\"\n                            variant=\"standard\"\n                            label=\"Address\"\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            value={value}\n                            inputRef={ref}\n                            fullWidth\n                        />\n                    )}\n                />\n                <Controller\n                    name=\"collector\"\n                    control={control}\n                    rules={{required: true}}\n                    render={({field: {onChange, onBlur, value, ref}}) => (\n                        <FormControl fullWidth sx={{mt: 2}}>\n                            <InputLabel id={`collectors-label-for-${initialValues.name}`}>Collector</InputLabel>\n                            <Select\n                                labelId={`collectors-label-for-${initialValues.name}`}\n                                id={`collectors-select-for-${initialValues.name}`}\n                                label=\"Collector\"\n                                onChange={onChange}\n                                onBlur={onBlur}\n                                value={value}\n                                inputRef={ref}\n                            >\n                                {collectorAddresses.map((addr: string) => <MenuItem key={addr} value={addr}>{addr}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    )}\n                />\n            </DialogContent>\n        </Dialog>\n    );\n};\n\n\ninterface Props {\n    open: boolean;\n    initialValues: FormData;\n    onClose: () => void;\n}\n\n\ninterface FormData {\n    name: string;\n    address: string;\n    collector: string;\n}\n\n\nexport default AgentUpdate;\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport UpdateDialog from './AgentUpdate';\nimport Dialog from '../common/ActionDialog';\n\nimport {getAgentState, removeAgent} from '../../api/agents';\nimport {useDispatch} from '../../redux';\n\n\nconst AgentUninstall: React.FC<Props> = (props) => {\n    const {name, address, collector} = props;\n    const dispatch = useDispatch();\n    const [update, storeUpdate] = React.useState<boolean>(false);\n    const [removeLabel, storeRemoveLabel] = React.useState<string>();\n    const [statusCode, storeStatusCode] = React.useState<number>(202);\n    const [force, storeForce] = React.useState<{}>({});\n\n    const forceUpdate = React.useCallback(() => {\n        storeForce({});\n    }, []);\n\n    const handleRemove = React.useCallback(() => {\n        storeRemoveLabel((label?: string) => {\n            switch (label) {\n                case \"uninstall\":\n                    dispatch(removeAgent({address, detach: false})).then(forceUpdate);\n                    break;\n                case \"detach\":\n                    dispatch(removeAgent({address, detach: true})).then(forceUpdate);\n                    break;\n            }\n            return undefined;\n        });\n    }, [address, dispatch, forceUpdate]);\n\n    const handleClose = React.useCallback(() => {\n        storeRemoveLabel(undefined);\n    }, []);\n\n    const openRemoveDialog = React.useCallback(() => {\n        storeRemoveLabel(\"uninstall\");\n    }, []);\n\n    const openDetachDialog = React.useCallback(() => {\n        storeRemoveLabel(\"detach\");\n    }, []);\n\n    const openUpdateDialog = React.useCallback(() => {\n        storeUpdate(true);\n    }, []);\n\n    const closeUpdateDialog = React.useCallback(() => {\n        storeUpdate(false);\n    }, []);\n\n    React.useEffect(() => {\n        let timeout: NodeJS.Timeout;\n        const promise = dispatch(getAgentState({address}));\n        promise.unwrap().then(({install, uninstall}) => {\n            if (!install && !uninstall) {\n                storeStatusCode(200);  // Agents installed by ansible lead to a 204\n                return;\n            }\n            const lastInstallDate = new Date(install ? install.last_operation_date : 0);\n            const lastUninstallDate = new Date(uninstall ? uninstall.last_operation_date : 0);\n            const operation = lastInstallDate < lastUninstallDate ? uninstall : install;\n            const code = operation ? operation.returncode : 202;\n            if (code === 202) {\n                timeout = setTimeout(forceUpdate, 2000);\n            }\n            storeStatusCode(code);\n        }).catch((error: Error) => {\n            if (error.name !== \"AbortError\") {\n                storeStatusCode(500);\n            }\n        });\n        return () => {promise.abort(); clearTimeout(timeout);};\n    }, [force, address, dispatch, forceUpdate]);\n\n    const noErrors = statusCode === 200 || statusCode === 204;\n    const color = noErrors ? \"secondary\" : \"primary\";\n\n    if (statusCode === 202) {\n        return (\n            <Box display=\"flex\" flexDirection=\"row\" mt={2}>\n                <Button disabled variant=\"contained\" sx={{mx: 1}}>\n                    Operation Pending\n                </Button>\n            </Box>\n        );\n    }\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\" mt={2}>\n            <Button variant=\"contained\" color={color} onClick={openRemoveDialog} sx={{mx: 1}}>\n                {noErrors ? \"Uninstall\" : \"Error \" + statusCode}\n            </Button>\n            <Button variant=\"contained\" color={color} onClick={openUpdateDialog} sx={{mx: 1}}>\n                Update\n            </Button>\n            <Button variant=\"contained\" color={color} onClick={openDetachDialog} sx={{mx: 1}}>\n                Detach\n            </Button>\n            <Dialog\n                title=\"Are you sure?\"\n                open={Boolean(removeLabel)}\n                cancel={{label: \"Cancel\", action: handleClose}}\n                actions={[{label: \"OK\", action: handleRemove}]}\n            >\n                <DialogContent>\n                    <DialogContentText>\n                        Trully {removeLabel} this agent?\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n            <UpdateDialog\n                open={update}\n                onClose={closeUpdateDialog}\n                initialValues={{name, address, collector}}\n            />\n        </Box>\n    );\n};\n\n\ninterface Props {\n    name: string;\n    address: string;\n    collector: string;\n    // Props required to trigger a redraw\n    // do not remove unless you can redraw somehow\n    reachable?: boolean;\n    available?: boolean;\n}\n\n\nexport default AgentUninstall;\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport NoDaemon from '@mui/icons-material/Cloud';\nimport NoConnection from '@mui/icons-material/CloudOff';\nimport Ok from '@mui/icons-material/CloudDone';\nimport {grey, red, orange, green} from '@mui/material/colors';\nimport {styled} from '@mui/material/styles';\n\nimport AgentUninstall from './AgentUninstall';\n\nimport {reserveProject} from '../../api/agents';\nimport {useDispatch, useSelector} from '../../redux';\nimport type {IAgent} from '../../utils/interfaces';\nimport type {SelectChangeEvent} from '@mui/material/Select';\n\n\nconst Section = styled('section')({\n    padding: \"3px 3%\",\n});\n\n\nconst SectionTitle = styled('h1')({\n    margin: \"0 -1%\",\n});\n\n\nconst GetNotIfFalse = (status?: boolean) => {\n    if (!status) {\n        return <Box component=\"span\" color={red[500]}>not</Box>;\n    }\n};\n\n\nconst AgentStatus: React.FC<Props> = (props) => {\n    const {agent} = props;\n    const dispatch = useDispatch();\n    const projects = useSelector((state) => state.openbach.projects);\n    const isAdmin = useSelector((state) => state.login.is_admin);\n    const [open, storeOpen] = React.useState<boolean>(false);\n\n    const handleCollapseToggle = React.useCallback(() => {\n        storeOpen((o: boolean) => !o);\n    }, []);\n\n    const handleReserveProject = React.useCallback((event: SelectChangeEvent) => {\n        dispatch(reserveProject({address: agent.address, projectName: event.target.value}));\n    }, [agent.address, dispatch]);\n\n    const projectInfo = agent.project ? (\n        <p>Associated to project {agent.project}</p>\n    ) : isAdmin ? (\n        <div>\n            <FormControl fullWidth>\n                <InputLabel id={`project-label-for-${agent.name}`}>Reserve for Project</InputLabel>\n                <Select\n                    labelId={`project-label-for-${agent.name}`}\n                    id={`project-select-for-${agent.name}`}\n                    value={agent.reserved || \"\"}\n                    label=\"Reserve for Project\"\n                    onChange={handleReserveProject}\n                >\n                    <MenuItem value=\"\">--- Select a Project ---</MenuItem>\n                    {projects?.map((project) => <MenuItem key={project.name} value={project.name}>{project.name}</MenuItem>)}\n                </Select>\n            </FormControl>\n        </div>\n    ) : agent.reserved ? (\n        <p>Reserved for project {agent.reserved}</p>\n    ) : (\n        <p>Not associated to any project</p>\n    );\n\n    const agentIcon = agent.reachable ? (\n        agent.available ? <Ok sx={{color: green[500]}} /> : <NoDaemon sx={{color: orange[500]}} />\n    ) : <NoConnection sx={{color: red[500]}} />;\n\n    const services = agent.services || {};\n    const servicesSection = Object.entries(services).filter(([service, status]) => (\n        service !== \"ntp.service\" && status !== undefined && status !== null\n    )).map(([service, status]) => {\n        const color = !status ? grey[500] : status === \"running\" ? green[500] : red[500];\n        return <p key={service}>{service} is <Box component=\"span\" color={color}>{status}</Box></p>;\n    });\n\n    const ntp = services[\"ntp.service\"];\n\n    return (\n        <React.Fragment>\n            <ListItemButton onClick={handleCollapseToggle}>\n                <ListItemIcon>{agentIcon}</ListItemIcon>\n                <ListItemText primary={agent.name} secondary={agent.address} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Box px={2}>\n                    <h1>{agent.name}</h1>\n                    <Section>\n                        <SectionTitle>General</SectionTitle>\n                        <p>Address: {agent.address}</p>\n                        <p>Collector: {agent.collector_ip}</p>\n                        <p>Agent is {GetNotIfFalse(agent.reachable)} reachable and {GetNotIfFalse(agent.available)} available</p>\n                        {projectInfo}\n                        {isAdmin && <AgentUninstall\n                            name={agent.name}\n                            address={agent.address}\n                            collector={agent.collector_ip}\n                            reachable={agent.reachable}\n                            available={agent.available}\n                        />}\n                    </Section>\n                    {Boolean(agent.errors && agent.errors.length) && <Section>\n                        <SectionTitle>Error{agent.errors!.length > 1 ? \"s\" : \"\"}</SectionTitle>\n                        {agent.errors!.map(({msg}: {msg: string;}, index: number) => <p key={index}>{msg}</p>)}\n                    </Section>}\n                    {Boolean(ntp) && <Section>\n                        <SectionTitle>NTP</SectionTitle>\n                        <code><pre>{ntp}</pre></code>\n                    </Section>}\n                    {Boolean(servicesSection.length) && <Section>\n                        <SectionTitle>Service{servicesSection.length > 1 ? \"s\" : \"\"}</SectionTitle>\n                        {servicesSection}\n                    </Section>}\n                </Box>\n            </Collapse>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n    agent: IAgent;\n}\n\n\nexport default AgentStatus;\n","import React from 'react';\n\nimport List from '@mui/material/List';\n\nimport AgentStatus from './AgentStatus';\n\nimport {useSelector} from '../../redux';\nimport type {IAgent} from '../../utils/interfaces';\n\n\nconst Status: React.FC<Props> = (props) => {\n    const agents = useSelector((state) => state.openbach.agents);\n\n    if (!agents) {\n        return (\n            <h1>Fetching Agents, please wait!</h1>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <h1>Agents</h1>\n            <List>{agents.map((agent: IAgent) => <AgentStatus key={agent.name} agent={agent} />)}</List>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\nexport default Status;\n","import React from 'react';\n\nimport Topology from '../common/Topology';\n\nimport {useSelector} from '../../redux';\nimport type {IAgent, IEntity, IProject} from '../../utils/interfaces';\nimport type {TopologyNode, TopologyLink} from '../common/Topology';\n\n\nconst AgentsTopology: React.FC<Props> = (props) => {\n    const agents = useSelector((state) => state.openbach.agents);\n    const projects = useSelector((state) => state.openbach.projects);\n\n    if (!projects) {\n        return <h1>Fetching Projects, please wait!</h1>;\n    }\n\n    const projectsNodes = Object.fromEntries(projects.map((p: IProject): [string, TopologyNode] => (\n        [p.name, {name: p.name, id: p.name, type: 'project'}]\n    )));\n\n    const links: TopologyLink[] = [];\n    const nodes = (agents || []).map((agent: IAgent) => {\n        const project = projects.find((p: IProject) => {\n            const entity = p.entity.find((e: IEntity) => e.agent && e.agent.address === agent.address);\n            return entity !== undefined;\n        });\n\n        const node: TopologyNode = {name: agent.name, id: agent.name, type: \"entity\"};\n        if (project) {\n            node.color = \"#757575\";\n            links.push({source: node, target: projectsNodes[project.name], weight: 3});\n        }\n        return node;\n    });\n\n    return (\n        <React.Fragment>\n            <h1>Projects Topology</h1>\n            <Topology height=\"500px\" nodes={nodes.concat(Object.values(projectsNodes))} links={links} />\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\nexport default AgentsTopology;\n","import React from 'react';\n\nimport Box from '@mui/material/Box';\n\nimport AgentAdd from './AgentAdd';\nimport Status from './Status';\nimport Topology from './AgentsTopology';\n\nimport {getCollectors, getAgents} from '../../api/agents';\nimport {getProjects} from '../../api/projects';\nimport {useDispatch} from '../../redux';\nimport {setTitle} from '../../redux/message';\n\n\nconst Agents: React.FC<Props> = (props) => {\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        dispatch(setTitle(\"OpenBach Administration\"));\n        const promises = [\n            dispatch(getCollectors()),\n            dispatch(getProjects()),\n            dispatch(getAgents({services: true})),\n        ];\n        return () => {promises.forEach((promise) => {promise.abort();});};\n    }, [dispatch]);\n\n    return (\n        <React.Fragment>\n            <Box display=\"inline-block\" width=\"70%\" sx={{verticalAlign: \"top\"}}>\n                <Status />\n                <Topology />\n            </Box>\n            <Box display=\"inline-block\" boxSizing=\"border-box\" pl={2} width=\"30%\" sx={{verticalAlign: \"top\"}}>\n                <AgentAdd />\n            </Box>\n        </React.Fragment>\n    );\n};\n\n\ninterface Props {\n}\n\n\nexport default Agents;\n","import React from 'react';\nimport * as D3 from 'd3';\n\n\nconst assets = {\n    entity: process.env.PUBLIC_URL + '/assets/server.svg',\n    network: process.env.PUBLIC_URL + '/assets/cloud.svg',\n    project: process.env.PUBLIC_URL + '/assets/project.svg',\n};\n\n\n// Custom Hook\nconst useWindowSize = () => {\n    const [windowSize, storeWindowSize] = React.useState<Partial<WindowSize>>({\n        width: undefined,\n        height: undefined,\n    });\n\n    React.useEffect(() => {\n        const handleResize = () => {storeWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });};\n        window.addEventListener('resize', handleResize);\n\n        // Store initial size right away\n        handleResize();\n\n        return () => window.removeEventListener('resize', handleResize);\n    }, [/* Run only once */]);\n\n    return windowSize;\n};\n\n\nconst Topology: React.FC<Props> = (props) => {\n    const {height, nodes, links, selectedNode, unselectNode} = props;\n    const windowSize = useWindowSize();\n    const svgRef = React.useRef<SVGSVGElement>(null);\n\n    React.useEffect(() => {\n        if (!svgRef.current) {\n            return;\n        }\n\n        while (svgRef.current.children.length > 0) {\n            svgRef.current.children[0].remove();\n        }\n\n        const height = svgRef.current.clientHeight;\n        const width = svgRef.current.clientWidth;\n\n        const simulation = D3.forceSimulation<TopologyNode>(nodes)\n            .force(\"link\", D3.forceLink<TopologyNode, TopologyLink>(links).id((d: TopologyNode) => d.id).strength((d: TopologyLink) => d.weight))\n            .force(\"collide\", D3.forceCollide<TopologyNode>(30))\n            .force(\"center-x\", D3.forceX<TopologyNode>(0))\n            .force(\"center-y\", D3.forceY<TopologyNode>(0))\n            .on(\"tick\", () => {\n                link.attr(\"x1\", (d: TopologyLink) => (d.source as TopologyNode).x as number)\n                    .attr(\"y1\", (d: TopologyLink) => (d.source as TopologyNode).y as number)\n                    .attr(\"x2\", (d: TopologyLink) => (d.target as TopologyNode).x as number)\n                    .attr(\"y2\", (d: TopologyLink) => (d.target as TopologyNode).y as number);\n                node.attr(\"transform\", (d: TopologyNode) => `translate(${d.x}, ${d.y})`);\n            });\n\n        const svg = D3.select(svgRef.current)\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n            .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n        const rect = svg.append(\"rect\")\n            .attr(\"fill\", \"white\")\n            .attr(\"height\", height)\n            .attr(\"width\", width)\n            .attr(\"x\", -width / 2)\n            .attr(\"y\", -height / 2);\n\n        const link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\".link\")\n            .data<TopologyLink>(links)\n            .enter()\n            .append(\"line\")\n            .attr(\"stroke\", \"#AAA\")\n            .attr(\"stroke-width\", (d: TopologyLink) => Math.sqrt(d.weight));\n\n        const node = svg.append(\"g\")\n            .attr(\"class\", \"nodes\")\n            .selectAll(\".node\")\n            .data<TopologyNode>(nodes)\n            .enter()\n            .append<SVGGElement>(\"g\")\n            .on(\"dblclick\", (event, d: TopologyNode) => {d.fx = null; d.fy = null;})\n            .call(D3.drag<SVGGElement, TopologyNode>()\n                .on(\"start\", (event) => {\n                    if (!event.active) {\n                        simulation.alphaTarget(0.3).restart();\n                    }\n                    event.subject.fx = event.subject.x;\n                    event.subject.fy = event.subject.y;\n                })\n                .on(\"drag\", (event) => {\n                    event.subject.fx = event.x;\n                    event.subject.fy = event.y;\n                })\n                .on(\"end\", (event) => {\n                    if (!event.active) {\n                        simulation.alphaTarget(0);\n                    }\n                }));\n\n        node.append(\"svg:image\")\n            .attr(\"height\", 30)\n            .attr(\"width\", 30)\n            .attr(\"x\", -15)\n            .attr(\"y\", -15)\n            .attr(\"xlink:href\", (d: TopologyNode) => assets[d.type]);\n\n        node.append(\"text\")\n            .text((d: TopologyNode) => d.name)\n            .attr(\"cursor\", \"pointer\")\n            .attr(\"dx\", 12)\n            .attr(\"dy\", \".35em\")\n            .style(\"fill\", (d: TopologyNode) => d.color ? d.color : (d.type === \"network\" ? \"#757575\" : \"black\"));\n\n        if (selectedNode) {\n            node.on(\"click\", (event, d: TopologyNode) => selectedNode(d));\n        }\n\n        if (unselectNode) {\n            rect.on(\"click\", unselectNode);\n        }\n\n        return () => {simulation.stop();};\n    }, [nodes, links, selectedNode, unselectNode, windowSize]);\n\n    return <svg ref={svgRef} height={height} width=\"100%\" />;\n};\n\n\ninterface Props {\n    height: number | string;\n    nodes: TopologyNode[];\n    links: TopologyLink[];\n    selectedNode?: (node: TopologyNode) => void;\n    unselectNode?: () => void;\n}\n\n\ninterface WindowSize {\n    width: number;\n    height: number;\n}\n\n\nexport interface TopologyNode extends D3.SimulationNodeDatum {\n    name: string;\n    id: string;\n    type: \"entity\" | \"network\" | \"project\";\n    color?: string;\n}\n\n\nexport interface TopologyLink extends D3.SimulationLinkDatum<TopologyNode> {\n    weight: number;\n}\n\n\nexport default Topology;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n}), 'Cloud');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z\"\n}), 'CloudDone');\nexports.default = _default;"],"names":["TabPanel","props","value","selected","children","hidden","_jsx","role","collectors","useSelector","state","openbach","dispatch","useDispatch","_useForm","useForm","mode","control","handleSubmit","register","reset","isValid","formState","_React$useState","React","_React$useState2","_slicedToArray","selectedTab","storeTab","handleTabChange","event","onSubmit","reattach","data","name","address","collector","username","password","http_proxy","https_proxy","private_key","public_key","agent","collector_ip","addAgent","onError","error","missing","Object","entries","filter","_ref","_ref2","message","map","_ref3","_ref4","replace","s","toUpperCase","length","setMessage","join","collectorAddresses","_jsxs","Tabs","onChange","centered","variant","Tab","label","Controller","rules","required","defaultValue","render","_ref5","_ref5$field","field","onBlur","ref","TextField","autoFocus","margin","inputRef","fullWidth","validate","Boolean","_ref6","_ref6$field","type","FileUpload","accept","color","sx","width","mt","options","_ref7","_ref7$field","_ref8","_ref8$field","_ref9","_ref9$field","FormControl","InputLabel","id","Select","labelId","addr","MenuItem","_ref10","_ref10$field","_ref11","_ref11$field","Box","textAlign","Button","disabled","m","onClick","open","onClose","initialValues","defaultValues","addresses","includes","push","updateAgent","agent_ip","handleClose","Dialog","title","cancel","action","actions","DialogContent","concat","update","storeUpdate","_React$useState3","_React$useState4","removeLabel","storeRemoveLabel","_React$useState5","_React$useState6","statusCode","storeStatusCode","_React$useState7","_React$useState8","force","storeForce","forceUpdate","handleRemove","removeAgent","detach","then","undefined","openRemoveDialog","openDetachDialog","openUpdateDialog","closeUpdateDialog","timeout","promise","getAgentState","unwrap","install","uninstall","operation","Date","last_operation_date","code","returncode","setTimeout","catch","abort","clearTimeout","noErrors","display","flexDirection","mx","DialogContentText","UpdateDialog","Section","styled","padding","SectionTitle","GetNotIfFalse","status","component","red","projects","isAdmin","login","is_admin","storeOpen","handleCollapseToggle","o","handleReserveProject","reserveProject","projectName","target","projectInfo","project","reserved","agentIcon","reachable","available","Ok","green","NoDaemon","orange","NoConnection","services","servicesSection","service","grey","ntp","ListItemButton","ListItemIcon","ListItemText","primary","secondary","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","px","AgentUninstall","errors","index","msg","agents","List","AgentStatus","projectsNodes","fromEntries","p","links","nodes","find","entity","e","node","source","weight","Topology","height","values","setTitle","promises","getCollectors","getProjects","getAgents","forEach","verticalAlign","Status","boxSizing","pl","AgentAdd","assets","network","selectedNode","unselectNode","windowSize","storeWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","svgRef","current","remove","clientHeight","clientWidth","simulation","D3","d","strength","on","link","attr","x","y","svg","rect","append","selectAll","enter","Math","sqrt","fx","fy","call","active","alphaTarget","restart","subject","text","style","stop","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}